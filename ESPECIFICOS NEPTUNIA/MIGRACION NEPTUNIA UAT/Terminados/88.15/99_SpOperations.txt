USE [SpOperations_Paralelo2]
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_ContarPiezasProyecto]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_ContarPiezasProyecto]
(
	@idProyecto numeric(18,0),
	@CodigoPieza varchar(50),
	@VAEtapa varchar(3),
	@NombreLocacion varchar(50),
	@VACampo varchar(3),
	@FechaReport varchar(10)
)
RETURNS int
AS
BEGIN

	DECLARE @resultado int
    DECLARE piezas_cursor CURSOR FOR   
	SELECT count(*) 
	FROM spopconocimientomercancias_proyectos
	WHERE idProyectoMaterial = (SELECT Id FROM spprproyectosmateriales WHERE idProyecto = @idProyecto and Codigo = @CodigoPieza) 
		and IdEtapa = (SELECT TOP 1 Id FROM spprproyectosetapas WHERE idProyecto = @idProyecto and Etapa = @VAEtapa and Locacion = @NombreLocacion)
		and Campo = @VACampo
		and Valor IS NOT NULL
		and convert(datetime, isdate(Valor),103)  <= convert(datetime,@FechaReport,103)


	set @resultado = 0

    OPEN piezas_cursor
    FETCH NEXT FROM piezas_cursor INTO @resultado
    
    CLOSE piezas_cursor
    DEALLOCATE piezas_cursor
        
    --print 'El resultado es: ' 
    --print @resultado
    
	Return @resultado

END
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_ExistePiezaProyecto]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_ExistePiezaProyecto]
(
	@idProyecto numeric(18,0),
	@NumSeriePieza varchar(50),
	@IdProyectoMaterial numeric(18,0),
	@NombreLocacion varchar(50),
	@VAEtapa varchar(3),
	@VACampo varchar(3),
	@FechaReport varchar(10)
	
)
RETURNS bit
AS
BEGIN
	DECLARE @resultado bit
    
    DECLARE piezas_cursor CURSOR FOR   
	
	SELECT count(*) 
	FROM spopconocimientomercancias_proyectos cmp
			LEFT JOIN spopconocimientomercancias cm on cmp.IdConocMerc = cm.Id and cm.NumSeriePieza = @NumSeriePieza
	WHERE idProyectoMaterial = @IdProyectoMaterial 
		and IdEtapa = (SELECT TOP 1 Id FROM spprproyectosetapas WHERE idProyecto = @idProyecto and Etapa = @VAEtapa and Locacion = @NombreLocacion)
		and Campo = @VACampo		
		and Valor IS NOT NULL
		and convert(datetime, 
		Case When Isdate(Valor) = 1 THEN Valor
		     Else '01-01-2000'
		End
		,103)  <= convert(datetime,@FechaReport + ' 23:59:59',103)

	set @resultado = 0

    OPEN piezas_cursor
    FETCH NEXT FROM piezas_cursor INTO @resultado
    
    CLOSE piezas_cursor
    DEALLOCATE piezas_cursor
        
    --print 'El resultado es: ' 
    --print @resultado
    
	Return @resultado

END
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_Report1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[CASEGI_Report1]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@FechaReport varchar(8)
)
RETURNS @MyTable TABLE (IdFormulario numeric(18,0),
					    FechaProceso varchar(10),
					    Nacelle_PEC int, Nacelle_SSA int, Nacelle_RIO int,Nacelle_EPSD int, Nacelle_EP int,Nacelle_Buque int,
					    Hub_PEC int, Hub_SSA int, Hub_RIO int,Hub_EPSD int, Hub_EP int,Hub_Buque int,
					    Nariz_PEC int, Nariz_SSA int, Nariz_RIO int,Nariz_EPSD int, Nariz_EP int,Nariz_Buque int,
					    Aspas_PEC int, Aspas_SSA int, Aspas_RIO int,Aspas_EPSD int, Aspas_EP int,Aspas_Buque int
					    )
AS
BEGIN
	DECLARE @FechaReportFormateada varchar(10)
	
	--LLega la fecha en formato YYYYMMDD y hay que cambiarla a DD/MM/AAAA
	SET @FechaReportFormateada =  substring(@FechaReport,7,2) + '/' + substring(@FechaReport,5,2)  + '/' +  substring(@FechaReport,1,4)

INSERT INTO @MyTable
	 SELECT @idProyecto AS IdFormulario, @FechaReportFormateada as FechaProceso,
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'RCD', 'PECEM', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'CBU', 'PECEM', 'CFC',@FechaReportFormateada) AS Nacelle_PEC,
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'RCD', 'SALVADOR', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'CBU', 'SALVADOR', 'CFC',@FechaReportFormateada)AS Nacelle_SSA, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'RCD', 'RIO GRANDE', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'CVE', 'RIO GRANDE', 'VFC',@FechaReportFormateada) AS Nacelle_RIO, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'RCD', 'MM', 'EPL',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'CVE', 'MM', 'VFC',@FechaReportFormateada) AS Nacelle_EPSD, 
        dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'CVE', 'MM', 'VFC',@FechaReportFormateada) AS Nacelle_EP, 
        dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'CBU', 'SALVADOR', 'CFC',@FechaReportFormateada) + dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'CBU', 'PECEM-TMUT', 'CFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NACELLE', 'LPE', 'RIO GRANDE', 'LFD',@FechaReportFormateada) AS Nacelle_Buque, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'RCD', 'PECEM', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'CBU', 'PECEM', 'CFC',@FechaReportFormateada) AS Hub_PEC, 
        dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'RCD', 'SALVADOR', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'CBU', 'SALVADOR', 'CFC',@FechaReportFormateada) AS Hub_SSA, 
        dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'RCD', 'RIO GRANDE', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'CVE', 'RIO GRANDE', 'VFC',@FechaReportFormateada) AS Hub_RIO, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'RCD', 'MM', 'EPL',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'CVE', 'MM', 'VFC',@FechaReportFormateada) AS Hub_EPSD, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'CVE', 'MM', 'VFC',@FechaReportFormateada) AS Hub_EP, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'CBU', 'SALVADOR', 'CFC',@FechaReportFormateada) + dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'CBU', 'PECEM-TMUT', 'CFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'HUB', 'LPE', 'RIO GRANDE', 'LFD',@FechaReportFormateada) AS Hub_Buque, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'RCD', 'PECEM', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'CBU','PECEM', 'CFC',@FechaReportFormateada) AS Nariz_PEC, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'RCD', 'SALVADOR', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'CBU', 'SALVADOR', 'CFC',@FechaReportFormateada) AS Nariz_SSA, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'RCD', 'RIO GRANDE', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'CVE', 'RIO GRANDE', 'VFC',@FechaReportFormateada) AS Nariz_RIO, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'RCD', 'MM', 'EPL',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'CVE', 'MM', 'VFC',@FechaReportFormateada) AS Nariz_EPSD, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'CVE', 'MM', 'VFC',@FechaReportFormateada) AS Nariz_EP, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'CBU', 'SALVADOR', 'CFC',@FechaReportFormateada) + dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'CBU','PECEM-TMUT', 'CFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'NARIZ', 'LPE', 'RIO GRANDE', 'LFD',@FechaReportFormateada) AS Nariz_Buque, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'RCD', 'PECEM', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'CBU', 'PECEM', 'CFC',@FechaReportFormateada) AS Aspas_PEC, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'RCD', 'SALVADOR', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'CBU', 'SALVADOR', 'CFC',@FechaReportFormateada) AS Aspas_SSA, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'RCD', 'RIO GRANDE', 'RFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'CVE', 'RIO GRANDE', 'VFC',@FechaReportFormateada) AS Aspas_RIO, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'RCD', 'MM', 'EPL',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'CVE', 'MM', 'VFC',@FechaReportFormateada) AS Aspas_EPSD, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'CVE', 'MM', 'VFC',@FechaReportFormateada) AS Aspas_EP, 
		dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'CBU', 'SALVADOR', 'CFC',@FechaReportFormateada) + dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'CBU', 'PECEM-TMUT', 'CFC',@FechaReportFormateada) - dbo.CASEGI_ContarPiezasProyecto(@idProyecto, 'ASPAS', 'LPE', 'RIO GRANDE', 'LFD',@FechaReportFormateada) AS Aspas_Buque		
	
	RETURN
END
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_Report2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[CASEGI_Report2]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@FechaReport varchar(8)
)
RETURNS @MyTable TABLE (
						IdFormulario numeric(18,0),
					    FechaProceso varchar(10),
					    Nacelle_PEC int, Nacelle_SSA int, Nacelle_RIO int,Nacelle_EPSD int, Nacelle_EP int,Nacelle_Buque int,
					    Hub_PEC int, Hub_SSA int, Hub_RIO int,Hub_EPSD int, Hub_EP int,Hub_Buque int,
					    Nariz_PEC int, Nariz_SSA int, Nariz_RIO int,Nariz_EPSD int, Nariz_EP int,Nariz_Buque int,
					    Aspas_PEC int, Aspas_SSA int, Aspas_RIO int,Aspas_EPSD int, Aspas_EP int,Aspas_Buque int,
					    PECEM_Fila varchar(max), PECEM_Componente varchar(max), PECEM_NumSerie varchar(max), PECEM_NumSerie2 varchar(max),PECEM_NumSerie3 varchar(max),PECEM_Fecha varchar(max),
					    SALVADOR_Fila varchar(max), SALVADOR_Componente varchar(max), SALVADOR_NumSerie varchar(max), SALVADOR_NumSerie2 varchar(max),SALVADOR_NumSerie3 varchar(max),SALVADOR_Fecha varchar(max),
					    RIO_TP_Fila varchar(max), RIO_TP_Componente varchar(max), RIO_TP_NumSerie varchar(max), RIO_TP_NumSerie2 varchar(max), RIO_TP_NumSerie3 varchar(max),RIO_TP_Fecha varchar(max),
					    PARQUE_SD_Fila varchar(max), PARQUE_SD_Componente varchar(max), PARQUE_SD_NumSerie varchar(max), PARQUE_SD_NumSerie2 varchar(max),PARQUE_SD_NumSerie3 varchar(max),PARQUE_SD_Fecha varchar(max),
					    PARQUE_EP_Fila varchar(max), PARQUE_EP_Componente varchar(max), PARQUE_EP_NumSerie varchar(max), PARQUE_EP_NumSerie2 varchar(max),PARQUE_EP_NumSerie3 varchar(max), PARQUE_EP_Fecha varchar(max),
					    CB_Fila varchar(max), CB_Componente varchar(max), CB_NumSerie varchar(max), CB_Fecha varchar(max), CB_Locacion varchar(max),
					    DBC_Codigo varchar(max), DBC_Numero varchar(max), DBC_Direccion varchar(max),
					    DB_Fila varchar(max), DB_Componente varchar(max), DB_NumSerie varchar(max), DB_Fecha varchar(max), DB_Locacion varchar(max)
					    )
AS
BEGIN
	DECLARE @FechaReportFormateada varchar(10)
	
	--LLega la fecha en formato YYYYMMDD y hay que cambiarla a DD/MM/AAAA
	SET @FechaReportFormateada =  substring(@FechaReport,7,2) + '/' + substring(@FechaReport,5,2)  + '/' +  substring(@FechaReport,1,4)

INSERT INTO @MyTable
	 SELECT R1.*, 
		PECEM.Fila , PECEM.Componente , PECEM.NumSerie ,PECEM.NumSerie2, PECEM.NumSerie3 , PECEM.Fecha ,
		SALVADOR.Fila , SALVADOR.Componente , SALVADOR.NumSerie , SALVADOR.NumSerie2, SALVADOR.NumSerie3, SALVADOR.Fecha,
		RIO_TP.Fila , RIO_TP.Componente , RIO_TP.NumSerie , RIO_TP.NumSerie2 ,RIO_TP.NumSerie3 , RIO_TP.Fecha,
		PARQUE_SD.Fila , PARQUE_SD.Componente , PARQUE_SD.NumSerie , PARQUE_SD.NumSerie2, PARQUE_SD.NumSerie3, PARQUE_SD.Fecha,
		PARQUE_EP.Fila , PARQUE_EP.Componente , PARQUE_EP.NumSerie , PARQUE_EP.NumSerie2, PARQUE_EP.NumSerie3, PARQUE_EP.Fecha,
		CB.Fila , CB.Componente , CB.NumSerie, CB.Fecha, CB.Locacion,
		DBC.Codigo, DBC.Numero, DBC.Direccion,
		DB.Fila , DB.Componente , DB.NumSerie, DB.Fecha, DB.Locacion
	 FROM CASEGI_Report1(@IdProyecto, @FechaReport) R1
		LEFT JOIN dbo.CASEGI_TablaMovim(@IdProyecto, 'PECEM', '','LFD',@FechaReportFormateada) AS PECEM ON PECEM.IdFormulario = R1.IdFormulario
		LEFT JOIN dbo.CASEGI_TablaMovim(@IdProyecto, 'SALVADOR_TECON', '','LFD',@FechaReportFormateada) AS SALVADOR ON SALVADOR.IdFormulario = R1.IdFormulario
		LEFT JOIN dbo.CASEGI_TablaMovim(@IdProyecto, 'RIO GRANDE', '','VFP',@FechaReportFormateada) AS RIO_TP ON RIO_TP.IdFormulario = R1.IdFormulario
		LEFT JOIN dbo.CASEGI_TablaMovim2(@IdProyecto, 'MM', '','EFA','EFC', @FechaReportFormateada) AS PARQUE_SD ON PARQUE_SD.IdFormulario = R1.IdFormulario
		LEFT JOIN dbo.CASEGI_TablaMovim(@IdProyecto, 'MM', '','EFC', @FechaReportFormateada) AS PARQUE_EP ON PARQUE_EP.IdFormulario = R1.IdFormulario
		LEFT JOIN dbo.CASEGI_TablaMovim(@IdProyecto, 'SALVADOR', 'PECEM-TMUT','CFC', @FechaReportFormateada) AS CB ON CB.IdFormulario = R1.IdFormulario		
		LEFT JOIN dbo.CASEGI_DatosBuqueCarga(@IdProyecto, 'SALVADOR', 'PECEM-TMUT','CFC', @FechaReportFormateada) AS DBC ON DBC.IdFormulario = R1.IdFormulario		
		LEFT JOIN dbo.CASEGI_TablaMovimCarga(@IdProyecto, 'RIO GRANDE', '','IFC', @FechaReportFormateada) AS DB ON DB.IdFormulario = R1.IdFormulario		
	RETURN
END
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_Report3]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[CASEGI_Report3]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@FechaReport varchar(8)
)
RETURNS @MyTable TABLE (
						IdFormulario numeric(18,0),
					    FechaProceso varchar(10),
					    Fila varchar(max),
					    Componente varchar(max),
					    NumSerie varchar(max),
					    Locacion varchar(max),
					    Dias varchar(max)
					    )
AS
BEGIN
	DECLARE @FechaReportFormateada varchar(10)
	
	--LLega la fecha en formato YYYYMMDD y hay que cambiarla a DD/MM/AAAA
	SET @FechaReportFormateada =  substring(@FechaReport,7,2) + '/' + substring(@FechaReport,5,2)  + '/' +  substring(@FechaReport,1,4)

INSERT INTO @MyTable
	 SELECT @idProyecto AS IdFormulario, @FechaReportFormateada as FechaProceso, Fila, Componente, NumSerie, Locacion, Dias
	 FROM dbo.CASEGI_TablaReport3_FORXML(@idProyecto,@FechaReportFormateada)
	RETURN
END
GO
/****** Object:  UserDefinedFunction [dbo].[CodigoInstalacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Santiago Rivas>
-- Create date: <25/08/2011>
-- Description:	<Devuelve el código de instalación>
-- =============================================
ALTER FUNCTION [dbo].[CodigoInstalacion] ()
RETURNS varchar(50) 
AS
BEGIN

	DECLARE @result varchar(50);

	-- Add the SELECT statement with parameter references here
	SET @result = (
					SELECT     SUBSTRING(Valor, 1, CHARINDEX('|', Valor, 1) - 1) AS Empresa
					FROM         spsiconfiguracion
					WHERE     (Oficina IS NULL) AND (Item = 'CodigoEmpresa')
					)

return @result

END
GO
/****** Object:  UserDefinedFunction [dbo].[ConceptoConfacturas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




ALTER FUNCTION [dbo].[ConceptoConfacturas]
(@idReferencia numeric(10,0),@TipoReferencia varchar(3))
RETURNS integer
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result bit;
		SET @result = (select (CASE WHEN Sum(F) >0
			 THEN 1
ELSE  0
END) as TieneFacturas
from (select Count(distinct idFacturaEmitida) as F
from spfalineafacturaemitida
where  idReferencia = @idReferencia and tipoReferencia = @TipoReferencia
UNION
select  Count(distinct idFacturaRecibida) as F
from spfalineafacturarecibida lfr
left join spfadesglosefacturarecibida dfr on dfr.idLineaFactura = lfr.id
where  dfr.idReferencia = @idReferencia and dfr.tipoReferencia = @TipoReferencia) as TieneFacturas)

return @Result

END



GO
/****** Object:  UserDefinedFunction [dbo].[ConceptoFacturado]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[ConceptoFacturado]
(@IdReferencia numeric(18,0),@TipoReferencia varchar(3))
RETURNS varchar
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result numeric(18,2);
	DECLARE @Facturado bit;
	SET @result =  (select isnull(sum( isnull(lfe.ImporteCalculadoRentabilidad,0)),0) 
				from spfalineafacturaemitida lfe 
               inner join spfafacturaEmitida fe on fe.id = lfe.idFacturaEmitida 
               where lfe.tiporeferencia = @TipoReferencia and lfe.idreferencia = @IdReferencia 
               and (fe.snProforma = 'false' or fe.snProforma is null) and isNull(fe.SnLiquidacionArmador,0) = 0)
set @Facturado = 'false'
If  (@result > 0 or @result <0)
BEGIN
	set @Facturado = 'true'
END

return @Facturado

END
GO
/****** Object:  UserDefinedFunction [dbo].[ConvertBinaryToDecimal]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[ConvertBinaryToDecimal]
(
	@Input varchar(255)
)
RETURNS bigint
AS
BEGIN
	DECLARE @Cnt tinyint 
	SET @Cnt = 1
	DECLARE @Len tinyint
	SET @Len = LEN(@Input)
	DECLARE @Output bigint 
	SET @Output = CAST(SUBSTRING(@Input, @Len, 1) AS bigint)
	WHILE(@Cnt < @Len) BEGIN
		SET @Output = @Output + POWER(CAST(SUBSTRING(@Input, @Len - @Cnt, 1) * 2 AS bigint), @Cnt)

		SET @Cnt = @Cnt + 1
	END
	RETURN @Output	
END
GO
/****** Object:  UserDefinedFunction [dbo].[ConvertFecha]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
ALTER FUNCTION [dbo].[ConvertFecha]
(@Fecha varchar(8))
RETURNS varchar(10)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result varchar(10);

SET @result =  substring( @Fecha,7,2) + '-' + substring( @Fecha,5,2)  + '-' +  substring( @Fecha,1,4)
--SA->CUIDADO!!!, PARA CONVERTIR A DATA TIME TENEMOS UN PROBLEMA CON EL FORMATO DE FECHAS DE ENTRADA, 
--SI EJECUTAMOS DESDE EL SUITE FUNCIONA CON FORMATO AÑO + DIA + MES
--SI EJECUTAMOS DESDE SQL QUIERE EL FORMATO -> AÑO + MES + DIA
--POR ESO SI EJECUTAMOS ESTA FUNCIÓN DESDE SQL PETA.

	-- Return the result of the function
	RETURN @result

END



GO
/****** Object:  UserDefinedFunction [dbo].[ConvertFechaHora]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[ConvertFechaHora]
(@Fecha varchar(8),@Hora varchar(6))
RETURNS datetime
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result datetime;

	-- Add the T-SQL statements to compute the return value here
SET @result = convert(datetime, substring( @Fecha,1,4) + '-' + substring( @Fecha,7,2) + '-' + substring( @Fecha,5,2) 
+ ' ' + substring( @Hora,1,2) + ':' + substring( @Hora,3,2) + ':' + substring( @Hora,5,2) )


	-- Return the result of the function
	RETURN @result

END
GO
/****** Object:  UserDefinedFunction [dbo].[ConvertFechaHora_new]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================      
-- Author:  <Author,,Name>      
-- Create date: <Create Date, ,>      
-- Description: <Description, ,>      
-- =============================================      
ALTER FUNCTION [dbo].[ConvertFechaHora_new]      
(@Fecha varchar(8),@Hora varchar(6))      
RETURNS datetime      
AS      
BEGIN      
 -- Declare the return variable here      
 DECLARE @result datetime;      
      
 -- Add the T-SQL statements to compute the return value here      
SET @result = convert(datetime, substring( @Fecha,1,4) + '-' + substring( @Fecha,7,2) + '-' + substring( @Fecha,5,2)       
+ ' ' + substring( @Hora,1,2) + ':' + substring( @Hora,3,2) + ':' + substring( @Hora,5,2),103)      
      
      
 -- Return the result of the function      
 RETURN @result      
      
END 
GO
/****** Object:  UserDefinedFunction [dbo].[ConvertFechaHoraString]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[ConvertFechaHoraString]
(@Fecha varchar(8),@Hora varchar(6))
RETURNS varchar(30)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result varchar(30);

	-- Add the T-SQL statements to compute the return value here
SET @result = substring( @Fecha,7,2) + '/' + substring( @Fecha,5,2) + '/' + substring( @Fecha,1,4) 
+ ' ' + substring( @Hora,1,2) + ':' + substring( @Hora,3,2) + ':' + substring( @Hora,5,2) 


	-- Return the result of the function
	RETURN @result

END
GO
/****** Object:  UserDefinedFunction [dbo].[ConvertFechaHoraString_SinSegundos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[ConvertFechaHoraString_SinSegundos]
(@Fecha varchar(8),@Hora varchar(6))
RETURNS varchar(30)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result varchar(30);

	-- Add the T-SQL statements to compute the return value here
SET @result = substring( @Fecha,7,2) + '/' + substring( @Fecha,5,2) + '/' + substring( @Fecha,1,4) 
+ ' ' + substring( @Hora,1,2) + ':' + substring( @Hora,3,2)


	-- Return the result of the function
	RETURN @result

END
GO
/****** Object:  UserDefinedFunction [dbo].[ConvertFechaStringToDate]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[ConvertFechaStringToDate]
(@Fecha varchar(8))
RETURNS datetime
AS
BEGIN
	-- Return the result of the function
	RETURN CONVERT(datetime, @Fecha, 3)

END
GO
/****** Object:  UserDefinedFunction [dbo].[ConvertHora]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[ConvertHora]
(@Hora varchar(6))
RETURNS varchar(8)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result varchar(8);

SET @result =  substring( @Hora,1,2) + ':' + substring( @Hora,3,2)  + ':' +  substring( @Hora,5,2)
--SA->CUIDADO!!!, PARA CONVERTIR A DATA TIME TENEMOS UN PROBLEMA CON EL FORMATO DE FECHAS DE ENTRADA, 
--SI EJECUTAMOS DESDE EL SUITE FUNCIONA CON FORMATO AÑO + DIA + MES
--SI EJECUTAMOS DESDE SQL QUIERE EL FORMATO -> AÑO + MES + DIA
--POR ESO SI EJECUTAMOS ESTA FUNCIÓN DESDE SQL PETA.

	-- Return the result of the function
	RETURN @result

END
GO
/****** Object:  UserDefinedFunction [dbo].[DiasDeMora]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[DiasDeMora]
(@IdFacturaEmitida numeric(10,0))
RETURNS integer
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result numeric(18,0);
		 SET @result =  	(select (CASE 
									  WHEN Tabla.Dias <  30 THEN 0
									  ELSE Tabla.Dias
									 END
							 ) as PRUEBAS from (select DateDiff(day,(select convert(datetime,dbo.ConvertFecha(IsNull(FechaVencimiento4,IsNull(FechaVencimiento3,IsNull(FechaVencimiento2,FechaVencimiento))))) as FechaVencimiento
						    from spfafacturaemitida where id = @IdFacturaEmitida and Cobrado = 0),GetDate()) as Dias) as Tabla)		
return @result
END
GO
/****** Object:  UserDefinedFunction [dbo].[EntidadUtilizada]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



ALTER FUNCTION [dbo].[EntidadUtilizada]
(@idEntidad varchar(10),@FechaInicio varchar(8),@FechaFin varchar(8))
RETURNS integer
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result integer;
		SET @result = (select Sum(Registros) as Registros from (
select Count(distinct Id) as Registros
from spfafacturaemitida 
where idEntidadCliente = @idEntidad and FechaFactura Between @FechaInicio and @FechaFin
UNION
select Count(distinct Id) as Registros
from spfafacturarecibida 
where idEntidadProveedor = @idEntidad and FechaFactura Between @FechaInicio and @FechaFin
UNION
select count(distinct ex.Id) as Registros
from spexexpediente ex
where ex.idCliente = @idEntidad and FechaInicio Between @FechaInicio and @FechaFin
UNION
select count(distinct ex.Id) as Registros
from spexexpediente ex
where ex.idRemitente = @idEntidad  and FechaInicio Between @FechaInicio and @FechaFin
UNION
select count(distinct ex.Id) as Registros
from spexexpediente ex
where ex.idDestinatario = @idEntidad  and FechaInicio Between @FechaInicio and @FechaFin
UNION
select count(distinct ex.Id) as Registros
from spexexpediente ex
where ex.idCorresponsal = @idEntidad  and FechaInicio Between @FechaInicio and @FechaFin
UNION
select count(distinct ex.Id) as Registros
from spexexpediente ex
left join spexpartida p on p.idExpediente = ex.id
where p.Transportista = @idEntidad  and FechaInicio Between @FechaInicio and @FechaFin
UNION
select count(distinct ex.Id) as Registros
from spexexpediente ex
left join spexpartida p on p.idExpediente = ex.id
where p.Transportista1 = @idEntidad  and FechaInicio Between @FechaInicio and @FechaFin
UNION
select count(distinct ex.Id) as Registros
from spexexpediente ex
left join spexpartida p on p.idExpediente = ex.id
where p.idAgenteAduanas = @idEntidad  and FechaInicio Between @FechaInicio and @FechaFin
) as Registros)		

return @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[EstadoFacturaPrefacturacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





ALTER FUNCTION [dbo].[EstadoFacturaPrefacturacion]
(@idReferencia numeric(10,0),@TipoReferencia varchar(3))
RETURNS varchar(1)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result varchar(1);	
SET @result = (select Top 1 (CASE fe.SnProforma
WHEN 1 THEN 'P'
ELSE fe.StatusFactura
END) as EstadoFactura
from spfafacturaemitida fe
left join spfalineafacturaemitida lfe on lfe.idFacturaEmitida = fe.id
where tiporeferencia = @TipoReferencia and idReferencia = @idReferencia order by fe.snproforma)

return @Result
END
GO
/****** Object:  UserDefinedFunction [dbo].[FechaSinDecimal]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[FechaSinDecimal]
(@Fecha datetime)
RETURNS datetime
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result datetime;

	-- Add the T-SQL statements to compute the return value here
SET @result = CAST(FLOOR(CAST(@FECHA AS DECIMAL(12, 5)))AS DATETIME)


	-- Return the result of the function
	RETURN @result

END
GO
/****** Object:  UserDefinedFunction [dbo].[fn_zz_NEPTUNIA_MINIMOMOVIMIENTOSSPARCS]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[fn_zz_NEPTUNIA_MINIMOMOVIMIENTOSSPARCS](@UBICACION VARCHAR(10)) 
RETURNS INT
AS
/**********************************************************************************                

FUNCION: fn_zz_NEPTUNIA_MINIMOMOVIMIENTOSSPARCS
OBJETIVO: CALCULA EL MINIMO DE MOVIMIENTOS QUE SE DEBE REALIZAR PARA SACAR UN CONTENEDOR A PARTIR DE SU UBICACION                
CREADO POR: JUAN CARLOS ARRUE                 
FECHA: 2007-07-12
ADAPTADO A SOLPORT POR: Santiago Rivas
FECHA: 26-JUN-2015
ITEM: 15572

*** Adaptaciones a SOLPORT
	1.- Las ubicaciones tienen 6 posiciones. Cualquier referencia a SUBSTRING(xxx,yyy,7) se cambia por SUBSTRING(xxx,yyy,6)	
	2.- Se cambia la tabla SPARCS_POS_CONTENEDOR por una vista definida: zz_NEPTUNIA_POS_CONTENEDOR 
	3.- Para facilitar la comparación, el campo SpAlUbicaciones.Codigo se renombra con Alias "CSLT"
	4.- Movemos la condición constante LEN(CSLT) = 6 a la vista.
*** Fin Adaptaciones a SOLPORT
	
*************************************************************************************/                


BEGIN
	IF @UBICACION IS NULL OR RTRIM(@UBICACION) = '' OR LEN(@UBICACION) <> 6 RETURN (0)

	DECLARE @COLUMNA VARCHAR(2), @NIVEL VARCHAR(1), @SECCION VARCHAR(4), @VALOR1 INT, @VALOR2 INT, @MOVIMIENTOS INT

	SELECT @COLUMNA = SUBSTRING(@UBICACION, 5,1), @NIVEL = SUBSTRING(@UBICACION, 6,1), @SECCION = SUBSTRING(@UBICACION, 1,4)

	SELECT @VALOR1 = SUM(CASE WHEN SUBSTRING(CSLT, 5,1) < @COLUMNA THEN 1 ELSE 0 END) + SUM(CASE WHEN SUBSTRING(CSLT, 5,1) = @COLUMNA AND SUBSTRING(CSLT, 6,1) > @NIVEL THEN 1 ELSE 0 END), 
		@VALOR2 = SUM(CASE WHEN SUBSTRING(CSLT, 5,1) > @COLUMNA THEN 1 ELSE 0 END) + SUM(CASE WHEN SUBSTRING(CSLT, 5,1) = @COLUMNA AND SUBSTRING(CSLT, 6,1) > @NIVEL THEN 1 ELSE 0 END)
	FROM zz_NEPTUNIA_POS_CONTENEDOR
	WHERE LEN(CSLT) = 6
	AND SUBSTRING(CSLT, 1,4) = @SECCION

	IF ISNULL(@VALOR1, 0) > ISNULL(@VALOR2, 0) 
		SET @MOVIMIENTOS = @VALOR2
	ELSE
		SET @MOVIMIENTOS = @VALOR1

	RETURN (@MOVIMIENTOS)
END 
GO
/****** Object:  UserDefinedFunction [dbo].[FormatFechaSolport]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[FormatFechaSolport](@Datetime DATETIME, @FormatMask VARCHAR(32))
RETURNS VARCHAR(32)
AS
BEGIN
    DECLARE @StringDate VARCHAR(32)
    SET @StringDate = @FormatMask
    IF (CHARINDEX ('YYYY',@StringDate) > 0)
       SET @StringDate = REPLACE(@StringDate, 'YYYY',
                         DATENAME(YY, @Datetime))
    IF (CHARINDEX ('YY',@StringDate) > 0)
       SET @StringDate = REPLACE(@StringDate, 'YY',
                         RIGHT(DATENAME(YY, @Datetime),2))
    IF (CHARINDEX ('Month',@StringDate) > 0)
       SET @StringDate = REPLACE(@StringDate, 'Month',
                         DATENAME(MM, @Datetime))
    IF (CHARINDEX ('MON',@StringDate COLLATE SQL_Latin1_General_CP1_CS_AS)>0)
       SET @StringDate = REPLACE(@StringDate, 'MON',
                         LEFT(UPPER(DATENAME(MM, @Datetime)),3))
    IF (CHARINDEX ('Mon',@StringDate) > 0)
       SET @StringDate = REPLACE(@StringDate, 'Mon',
                                     LEFT(DATENAME(MM, @Datetime),3))
    IF (CHARINDEX ('MM',@StringDate) > 0)
       SET @StringDate = REPLACE(@StringDate, 'MM',
                  RIGHT('0'+CONVERT(VARCHAR,DATEPART(MM, @Datetime)),2))
    IF (CHARINDEX ('M',@StringDate) > 0)
       SET @StringDate = REPLACE(@StringDate, 'M',
                         CONVERT(VARCHAR,DATEPART(MM, @Datetime)))
    IF (CHARINDEX ('DD',@StringDate) > 0)
       SET @StringDate = REPLACE(@StringDate, 'DD',
                         RIGHT('0'+DATENAME(DD, @Datetime),2))
    IF (CHARINDEX ('D',@StringDate) > 0)
       SET @StringDate = REPLACE(@StringDate, 'D',
                                     DATENAME(DD, @Datetime))   
RETURN @StringDate
END
GO
/****** Object:  UserDefinedFunction [dbo].[FormatHoraSolport]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[FormatHoraSolport](@Datetime DATETIME)
RETURNS VARCHAR(6)
AS
BEGIN
  return (SELECT Replace(CONVERT(VARCHAR(10), @Datetime,108),':','') + '00')
   

END
GO
/****** Object:  UserDefinedFunction [dbo].[GetCalendarTreeByIdCalendar]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Jordi Martí
-- Create date: 08/05/2013
-- Description:	Función que te da los id de los calendarios padres a partir de un calendario.
-- Ejemplo: Quiero los calendarios del id x. Te devuelve el x y sus padres
-- =============================================
ALTER FUNCTION [dbo].[GetCalendarTreeByIdCalendar] (@idCalendario numeric(18,0))
RETURNS varchar(250)
AS
BEGIN
	DECLARE @res varchar(250);
	-- Creamos una tabla intermedia para insertar los valores de la funcion recursiva CTE, ya que no se puede devolver ni obtener el valor
	-- de la query si no hacemos dicha tabla.
	DECLARE @TableOfValues TABLE (idCalendarios varchar(250));
	
	WITH cte    
AS(    
SELECT e.id, e.Nombre, e.idPadre    
FROM spsicalendario e  
UNION ALL    
SELECT e.id, e.Nombre, j.idPadre    
FROM spsicalendario e    
INNER JOIN cte j ON j.id = e.idPadre)
INSERT INTO @TableOfValues
	Select * FROM (
select dbo.SubstringHastaFinal(
(select ',' + Convert(varchar,tabla.idpadre) from (
SELECT distinct cal.idpadre 
FROM cte cal  
UNION 
SELECT distinct cal.id as idpadre 
FROM cte cal  
where cal.id = @idCalendario ) as Tabla where tabla.idpadre is not null FOR XML PATH('')), 2) As IdCalendarios ) AS TABLA	

-- Obtenemos los valores insertados en la tabla intermedia y devolvemos su valor.
SET @res = (SELECT * FROM @TableOfValues)
RETURN @Res	

END
GO
/****** Object:  UserDefinedFunction [dbo].[GetDescripcionValorAplicacionByIdioma]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[GetDescripcionValorAplicacionByIdioma]
(
@ValorAplicacion varchar(100),@Clave varchar(100),@Idioma varchar(2)
)
RETURNS varchar(500) 
AS
BEGIN
	DECLARE @result varchar(500);
		
	SET @result = (
					select Top 1 dva.Descripcion 
					from spsivaloresaplicacion va
					left join spsiclavesvaloresaplicacion cva on cva.idVA = va.id
					left join spsidescripcionidiomasvaloresaplicacion dva on dva.IdCVA = cva.id
					where va.TipoVa = @ValorAplicacion and cva.Clave = @Clave and dva.Idioma = @Idioma
					)
	
	if (@result is Null or @result = '')
	BEGIN
	SET @result = (
					select Top 1 dva.Descripcion 
					from spsivaloresaplicacion va
					left join spsiclavesvaloresaplicacion cva on cva.idVA = va.id
					left join spsidescripcionidiomasvaloresaplicacion dva on dva.IdCVA = cva.id
					where va.TipoVa = @ValorAplicacion and cva.Clave = @Clave and dva.Idioma = 'ES'

					)
	END
	return @result
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetExpedienteFechaPorActuacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER FUNCTION [dbo].[GetExpedienteFechaPorActuacion]
	(@idExpedienteContenedor integer,
	@strActuacion varchar(2))
RETURNS integer
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result varchar(8);
		 SET @result =  	( SELECT Top 1 FechaMovimiento 
 FROM spedmovimientocontenedor m
 left join SpBmTipoMovimiento tm on tm.Tipo = m.idTipoMovimiento
 WHERE tm.actuacion = @strActuacion and idExpediente = @idExpedienteContenedor)	
 	
return @result
END

GO
/****** Object:  UserDefinedFunction [dbo].[getFullmonth]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[getFullmonth]
(
 @date1 datetime
)
RETURNS @dates TABLE 
(
 Dia datetime not null 
)
AS
BEGIN
 -- Set first day in month
 DECLARE @month int;
 
 SET @month = datepart(MM, @date1);
 SET @date1 = convert(datetime, '01/' + convert(varchar,@month) + '/' + convert(varchar,datepart(yy,@date1)));
 WHILE datepart(MM,@date1) = @month
 BEGIN
  INSERT INTO @dates VALUES (@date1);
  SET @date1 = dateadd(dd, 1, @date1);
 END 
 RETURN;
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetImporteConCambioDivisa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[GetImporteConCambioDivisa]
(@Importe numeric(12, 2),@Divisa varchar(3),@Oficina varchar(6),@TipoCambio varchar(1))
RETURNS numeric(12, 2)
AS
BEGIN
	DECLARE @ImporteCambio numeric(15,6);
	DECLARE @ImporteCambiado numeric(12,2);
	DECLARE @DivisaOficina varchar(3);
	SET @DivisaOficina = (select pc.IdDivisaContable 
						  from spsiplancontable pc
						  left join spsiempresa e on pc.Id = e.idPlanContable
						  left join spsioficina o on e.Id = o.Empresa
						  where o.id = @Oficina)
	IF EXISTS(select * from spfaCambioDivisa where IdDivisaOrigen = @DivisaOficina AND IdDivisaDestino = @Divisa)
	BEGIN
		SET @ImporteCambio = (select TOP 1 (Case @TipoCambio WHEN 'V' THEN IsNull(CambioVenta,1.00) WHEN 'C' THEN IsNull(CambioCoste,1.00) END) from spfaCambioDivisa where IdDivisaOrigen = @DivisaOficina and IdDivisaDestino = @Divisa order by id desc)
		SET @ImporteCambiado = @Importe / @ImporteCambio
	END
	ELSE
	BEGIN
		IF EXISTS(select * from spfaCambioDivisa where IdDivisaOrigen = @Divisa AND IdDivisaDestino = @DivisaOficina)
		BEGIN
			SET @ImporteCambio = (select TOP 1 (Case @TipoCambio WHEN 'V' THEN IsNull(CambioVenta,1.00) WHEN 'C' THEN IsNull(CambioCoste,1.00) END) from spfaCambioDivisa where IdDivisaOrigen = @Divisa and IdDivisaDestino = @DivisaOficina order by id desc)
			SET @ImporteCambiado = @Importe * @ImporteCambio
		END
	END
	RETURN  @ImporteCambiado
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetImporteCorrector]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[GetImporteCorrector]
(@IdCorrector numeric(10,0))
RETURNS varchar(1000)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result VARCHAR(1000);
	SELECT @result= COALESCE(@result +', ', '') + Importe from dbo.GetImporteCorrectorTABLA(@IdCorrector)
	SET @result =  	(select @result as result)
									 
return @result
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetImportePendienteCobrar]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[GetImportePendienteCobrar]
(
	-- Add the parameters for the function here
	@IdFactura numeric(10,0),@TipoFactura varchar(1)
)
RETURNS numeric(10,2)
AS
BEGIN
		DECLARE @result numeric(10,2);
	SET @result = 0.00;
	
	IF @TipoFactura = 'E'
	BEGIN	
		SET @result =  (SELECT (FE.TotalFacturaEUR - (Cobros - Pagos)) as Importe from (				   
					   SELECT idFactura,IsNull(SUM(ImporteCobros),0.00) as Cobros,IsNull(SUM(ImportePagos),0.00) as Pagos from (
					   SELECT idFactura as idFactura,SUM(ContraValor) as ImporteCobros,0 as ImportePagos from spcalineascobros where idFactura is not null group by idFactura					   				   
				       )AS TABLA where idFactura = @IdFactura group by idFactura
				       )AS TABLA2 LEFT JOIN spfafacturaemitida FE on FE.id = TABLA2.idFactura)
		IF @result is Null
		BEGIN	
			SET @result = (SELECT IsNull(TotalFacturaEUR,0.00) from spfafacturaemitida where Id = @IdFactura)
		END
	END	
	IF @TipoFactura = 'R'
	BEGIN	
		SET @result =  (SELECT (FR.TotalFactura - (Pagos - Cobros)) as Importe from (				   
					    SELECT idFactura,IsNull(SUM(ImporteCobros),0.00) as Cobros,IsNull(SUM(ImportePagos),0.00) as Pagos from (
					    select idFacturaRecibida as idFactura,SUM(ContraValor) as ImportePagos,0 as ImporteCobros from spcalineascobros where idFacturaRecibida is Not Null group by idFacturaRecibida
						)AS TABLA where idFactura = @IdFactura group by idFactura
						)AS TABLA2 LEFT JOIN spfafacturarecibida FR on FR.id = TABLA2.idFactura)
		IF @result is Null
		BEGIN	
			SET @result = 0.00
		END				    
	END	
	RETURN @result;

END
GO
/****** Object:  UserDefinedFunction [dbo].[GetImportePendienteCobrarPagar]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[GetImportePendienteCobrarPagar]
(@IdFactura numeric(10,0),@TipoFactura varchar(1))
RETURNS numeric(10,2)
AS
BEGIN
	DECLARE @result numeric(10,2);
	SET @result = 0.00;
	
	IF @TipoFactura = 'E'
	BEGIN	
		SET @result =  (SELECT (FE.TotalFacturaEUR - (Cobros - Pagos)) as Importe from (				   
					   SELECT idFactura,IsNull(SUM(ImporteCobros),0.00) as Cobros,IsNull(SUM(ImportePagos),0.00) as Pagos from (
					   SELECT idFactura as idFactura,SUM(ContraValor) as ImporteCobros,0 as ImportePagos from spcalineascobros where idFactura is not null group by idFactura
					   UNION
					   SELECT idFacturaEmitida as idFactura,0 as ImporteCobros,SUM(ContraValor) as ImportePagos from spcalineaspagos where idFacturaEmitida is not null group by idFacturaEmitida
				       )AS TABLA where idFactura = @IdFactura group by idFactura
				       )AS TABLA2 LEFT JOIN spfafacturaemitida FE on FE.id = TABLA2.idFactura)
		IF @result is Null
		BEGIN	
			SET @result = (SELECT IsNull(TotalFacturaEUR,0.00) from spfafacturaemitida where Id = @IdFactura)
		END
	END	
	IF @TipoFactura = 'R'
	BEGIN	
		SET @result =  (SELECT (FR.TotalFacturaDivisaOriginal - (Pagos - Cobros)) as Importe from (				   
					    SELECT idFactura,IsNull(SUM(ImporteCobros),0.00) as Cobros,IsNull(SUM(ImportePagos),0.00) as Pagos from (
					    select idFactura,0 as ImporteCobros,SUM(ContraValor) as ImportePagos from spcalineaspagos where idFactura is Not Null group by idFactura
					    UNION
						select idFacturaRecibida as idFactura,SUM(ContraValor) as ImportePagos,0 as ImporteCobros from spcalineascobros where idFacturaRecibida is Not Null group by idFacturaRecibida				    
						)AS TABLA where idFactura = @IdFactura group by idFactura
						)AS TABLA2 LEFT JOIN spfafacturarecibida FR on FR.id = TABLA2.idFactura)
		IF @result is Null
		BEGIN	
			SET @result = (SELECT IsNull(TotalFacturaDivisaOriginal,0.00) from spfafacturarecibida where Id = @IdFactura)
		END				    
	END	
	RETURN @result;
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetImportePendienteCobrarPagarMonedaOriginal]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[GetImportePendienteCobrarPagarMonedaOriginal]
(@IdFactura numeric(10,0),@TipoFactura varchar(1))
RETURNS numeric(10,2)
AS
BEGIN
	DECLARE @result numeric(10,2);
	SET @result = 0.00;
	
	IF @TipoFactura = 'E'
	BEGIN	
		SET @result =  (SELECT (FE.TotalFactura - (Cobros - Pagos)) as Importe from (				   
					   SELECT idFactura,IsNull(SUM(ImporteCobros),0.00) as Cobros,IsNull(SUM(ImportePagos),0.00) as Pagos from (
					   SELECT idFactura as idFactura,SUM(Importe) as ImporteCobros,0 as ImportePagos from spcalineascobros where idFactura is not null group by idFactura
					   UNION
					   SELECT idFacturaEmitida as idFactura,0 as ImporteCobros,SUM(Importe) as ImportePagos from spcalineaspagos where idFacturaEmitida is not null group by idFacturaEmitida
				       )AS TABLA where idFactura = @IdFactura group by idFactura
				       )AS TABLA2 LEFT JOIN spfafacturaemitida FE on FE.id = TABLA2.idFactura)
		IF @result is Null
		BEGIN	
			SET @result = (SELECT IsNull(TotalFactura,0.00) from spfafacturaemitida where Id = @IdFactura)
		END
	END	
	IF @TipoFactura = 'R'
	BEGIN	
		SET @result =  (SELECT (FR.TotalFacturaDivisaOriginal - (Pagos - Cobros)) as Importe from (				   
					    SELECT idFactura,IsNull(SUM(ImporteCobros),0.00) as Cobros,IsNull(SUM(ImportePagos),0.00) as Pagos from (
					    select idFactura,0 as ImporteCobros,SUM(Importe) as ImportePagos from spcalineaspagos where idFactura is Not Null group by idFactura
					    UNION
						select idFacturaRecibida as idFactura,SUM(Importe) as ImportePagos,0 as ImporteCobros from spcalineascobros where idFacturaRecibida is Not Null group by idFacturaRecibida				    
						)AS TABLA where idFactura = @IdFactura group by idFactura
						)AS TABLA2 LEFT JOIN spfafacturarecibida FR on FR.id = TABLA2.idFactura)
		IF @result is Null
		BEGIN	
			SET @result = (SELECT IsNull(TotalFacturaDivisaOriginal,0.00) from spfafacturarecibida where Id = @IdFactura)
		END				    
	END	
	RETURN @result;
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetImportePendientePagar]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[GetImportePendientePagar]
(@IdFactura numeric(10,0),@TipoFactura varchar(1))
RETURNS numeric(10,2)
AS
BEGIN
	DECLARE @result numeric(10,2);
	SET @result = 0.00;
	
	IF @TipoFactura = 'E'
	BEGIN	
		SET @result =  (SELECT (FE.TotalFacturaEUR - (Cobros - Pagos)) as Importe from (				   
					   SELECT idFactura,IsNull(SUM(ImporteCobros),0.00) as Cobros,IsNull(SUM(ImportePagos),0.00) as Pagos from (
					   SELECT idFacturaEmitida as idFactura,0 as ImporteCobros,SUM(ContraValor) as ImportePagos from spcalineaspagos where idFacturaEmitida is not null group by idFacturaEmitida
				       )AS TABLA where idFactura = @IdFactura group by idFactura
				       )AS TABLA2 LEFT JOIN spfafacturaemitida FE on FE.id = TABLA2.idFactura)
		IF @result is Null
		BEGIN	
			SET @result = 0.00
		END
	END	
	IF @TipoFactura = 'R'
	BEGIN	
		SET @result =  (SELECT (FR.TotalFactura - (Pagos - Cobros)) as Importe from (				   
					    SELECT idFactura,IsNull(SUM(ImporteCobros),0.00) as Cobros,IsNull(SUM(ImportePagos),0.00) as Pagos from (
					    select idFactura,0 as ImporteCobros,SUM(ContraValor) as ImportePagos from spcalineaspagos where idFactura is Not Null group by idFactura					    
						)AS TABLA where idFactura = @IdFactura group by idFactura
						)AS TABLA2 LEFT JOIN spfafacturarecibida FR on FR.id = TABLA2.idFactura)
		IF @result is Null
		BEGIN	
			SET @result = (SELECT IsNull(TotalFactura,0.00) from spfafacturarecibida where Id = @IdFactura)
		END				    
	END	
	RETURN @result;
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetMatriculasPartida]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[GetMatriculasPartida]
(
	-- Add the parameters for the function here
	@idPartida numeric(18,0)
)
RETURNS varchar(1000)
AS
BEGIN

DECLARE @matriculas varchar(1000)
	DECLARE @embarqueMatricula varchar(11)
    DECLARE embarques_cursor CURSOR FOR   
    SELECT emb.Matricula
    FROM spexembarque emb
    WHERE emb.idpartida = @idPartida

set @matriculas = ''

    OPEN embarques_cursor
    FETCH NEXT FROM embarques_cursor INTO @embarqueMatricula
    WHILE @@FETCH_STATUS = 0
    BEGIN
         		
         set @matriculas = @matriculas + ', ' +  @embarqueMatricula
	
		 FETCH NEXT FROM embarques_cursor 	INTO @embarqueMatricula	 
    END
    
    CLOSE embarques_cursor
    DEALLOCATE embarques_cursor
    
    if (len(@matriculas) > 0 )
    BEGIN
     set @matriculas = substring(@matriculas,3,(len(@matriculas)-1))
     END
    
Return @matriculas    

END
GO
/****** Object:  UserDefinedFunction [dbo].[GetMonthName]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[GetMonthName](@Mes integer,@Idioma varchar(2))
RETURNS varchar(3)
AS
BEGIN
DECLARE @res varchar(3);

SET @res = (SELECT CASE @Idioma
				WHEN 'ES' THEN 
					(SELECT CASE @Mes
						WHEN 1  THEN 'ENE'
						WHEN 2  THEN 'FEB'
						WHEN 3  THEN 'MAR'
						WHEN 4  THEN 'ABR'
						WHEN 5  THEN 'MAY'
						WHEN 6  THEN 'JUN'
						WHEN 7  THEN 'JUL'
						WHEN 8  THEN 'AGO'
						WHEN 9  THEN 'SEP'
						WHEN 10 THEN 'OCT'
						WHEN 11 THEN 'NOV'
						WHEN 12 THEN 'DIC'
						ELSE  '' END)
				ELSE 
					(SELECT CASE @Mes
						WHEN 1  THEN 'JAN'
						WHEN 2  THEN 'FEB'
						WHEN 3  THEN 'MAR'
						WHEN 4  THEN 'APR'
						WHEN 5  THEN 'MAY'
						WHEN 6  THEN 'JUN'
						WHEN 7  THEN 'JUL'
						WHEN 8  THEN 'AUG'
						WHEN 9  THEN 'SEP'
						WHEN 10 THEN 'OCT'
						WHEN 11 THEN 'NOV'
						WHEN 12 THEN 'DEC'
						ELSE  '' END)			
			END)
RETURN @res
END
GO
/****** Object:  UserDefinedFunction [dbo].[GetMovimientoPeriodoAnyMes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION[dbo].[GetMovimientoPeriodoAnyMes](@Año varchar(4),@Mes varchar(2),@Estado varchar(10),@Cliente varchar(8))

RETURNS @Datos  TABLE 
( 

CLIENTE				VARCHAR(50),
CONTENEDOR VARCHAR(50),
INGRESO				VARCHAR(8),
SALIDA				VARCHAR(8),
ESTADO				VARCHAR(2),
TIPO				VARCHAR(2),
TAMANYO				VARCHAR(2),
TEUS				VARCHAR(2)

)
AS

BEGIN

declare @MesFormateado varchar(2)
if len(@Mes)=2 set @MesFormateado=@Mes else set @MesFormateado='0'+@Mes


INSERT INTO  @Datos
-- contenedores que han entrado en cualquie mes y no han salido. (HAN ENTRADO POR UN MOVIMIENTO AC O UN VACIADO)
SELECT ent.nOMBRE AS CLIENTE, t1.MATRICULACONTENEDOR as Contenedor,
T1.FECHAMOVIMIENTO AS ENTRADA, '' AS SALIDA,
T1.ESTADO, cc.tipo as TIPO, cc.Tamanyo AS Tamanyo , 
case When substring(CONVERT(CHAR,CC.TAMANYO),1,1) = 2 then 1 else 2 end AS Teus
FROM SPEDMOVIMIENTOCONTENEDOR T1
left join spbmcontenedor cont on cont.Matricula = t1.MatriculaContenedor
left join spbmcaracteristicascontenedor cc on cc.Id = cont.IdCaracteristica
LEFT JOIN spcoentidades ent on ent.id = t1.idcliente
WHERE T1.IDTIPOMOVIMIENTO IN (SELECT TIPO FROM SpBmTipoMovimiento WHERE Actuacion ='AC' OR TIPOMOVIMIENTO = CASE WHEN @Estado ='VA' THEN 'VT' ELSE 'LL' END)
AND T1.NUMCONTADORCICLO NOT IN (SELECT NUMCONTADORCICLO FROM SPEDMOVIMIENTOCONTENEDOR T2 
								WHERE  T2.IDTIPOMOVIMIENTO IN (SELECT TIPO FROM SpBmTipoMovimiento WHERE  (Actuacion ='CC' OR TIPOMOVIMIENTO = CASE WHEN @eSTADO ='VA' THEN 'LL' ELSE 'VT' END) 
								AND T1.MATRICULACONTENEDOR =T2.MATRICULACONTENEDOR 
								and t2.numcontadormovimiento=t1.numcontadormovimiento+1))
AND T1.FECHAMOVIMIENTO <= @Año+@MesFormateado+'99'
AND T1.IDCLIENTE = @Cliente
AND T1.Estado =@Estado


-- CONTENEDORES que han entrado en el periodo solicitado o antes y que han salido despues del periodo solicitado o en el periodo solicitado

-- El movimiento de entrada puede ser uno que abra ciclo o bien un vaciado (si han filtrado por estad0 'VA') o bien un llenado (sin han filtrado por estado 'LL')
-- El movimiento de salida puede ser uno que cierre ciclo o bien un lleno ( si han filtrado por estado ='VA') o ben un vaciado (si han filtrado por estado 'VA')
INSERT INTO  @Datos
SELECT ent.nOMBRE AS CLIENTE, m1.MATRICULACONTENEDOR as Contenedor,
m1.FECHAMOVIMIENTO AS ENTRADA, m2.fechamovimiento AS SALIDA,
m1.ESTADO, cc.tipo as TIPO, cc.Tamanyo AS Tamanyo , 
case When substring(CONVERT(CHAR,CC.TAMANYO),1,1) = 2 then 1 else 2 end AS Teus
from 
SPEDMOVIMIENTOCONTENEDOR M1
left join spbmcontenedor cont on cont.Matricula = M1.MATRICULACONTENEDOR
left join spbmcaracteristicascontenedor cc on cc.Id = cont.IdCaracteristica
LEFT JOIN spcoentidades ent on ent.id = m1.idclientE
, SPEDMOVIMIENTOCONTENEDOR M2
WHere (m1.fechamovimiento <=  @Año+@MesFormateado+'99' OR  M1.FECHAMOVIMIENTO LIKE  @Año+@MesFormateado+'%')
and  m1.IDTIPOMOVIMIENTO IN (SELECT TIPO FROM SpBmTipoMovimiento WHERE Actuacion ='AC'  OR TIPOMOVIMIENTO = CASE WHEN @eSTADO = 'VA' THEN 'VT' ELSE 'LL' END)
and m1.numcontadorciclo = m2.numcontadorciclo
AND M2.numcontadormovimiento = m1.numcontadormovimiento+1
and m1.matriculacontenedor = m2.matriculacontenedoR
and m2.idtipomovimiento in (select tipo from spbmtipomovimiento where actuacion ='CC'  OR TIPOMOVIMIENTO = CASE WHEN @Estado ='VA' THEN 'LL' ELSE 'VA' END)
AND M2.FECHAMOVIMIENTO >=@Año+@MesFormateado+'00'
AND M1.ESTADO =@Estado
AND M1.IDCLIENTE =@CLiente


RETURN 
END

GO
/****** Object:  UserDefinedFunction [dbo].[GetTestProyectosEtapas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[GetTestProyectosEtapas] (@Id INT)
RETURNS NVARCHAR(MAX)
AS
BEGIN
	DECLARE @cols AS NVARCHAR(MAX),@query  AS NVARCHAR(MAX),@cols2 AS NVARCHAR(MAX);
	SELECT @cols = STUFF((SELECT distinct  ',' + QUOTENAME(Campo) 
                    FROM spopconocimientomercancias_proyectos
					where idCOnocMerc = @Id
            FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')

		SELECT @cols2 = STUFF((SELECT distinct  ',MAX(' + QUOTENAME(Campo) +') AS ' + Campo
                    FROM spopconocimientomercancias_proyectos
					where idCOnocMerc = @Id
            FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')

SELECT @query = 
'SELECT ' + @cols2 + ' FROM
(select * from spopconocimientomercancias_proyectos where idCOnocMerc in (' + CONVERT(NVARCHAR(MAX),@Id) +')
)X
PIVOT 
(
    MAX(Valor)
    for [Campo] in (' + @cols + ')
) P'


    Return @query
END;
GO
/****** Object:  UserDefinedFunction [dbo].[NumConceptosPendientesFacturar_EC]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[NumConceptosPendientesFacturar_EC]
(@IdExpediente numeric(18,0))
RETURNS integer
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result numeric(18,2);
	SET @result =( select count(*) 
                 from spopexpedienteconceptos 
                 where spopexpedienteconceptos.idExpediente = @IdExpediente
					and AFacturar = 1
				)
              
return @result;

END
GO
/****** Object:  UserDefinedFunction [dbo].[NumConceptosPendientesFacturar_ET]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER FUNCTION [dbo].[NumConceptosPendientesFacturar_ET]
(@IdExpediente numeric(18,0))
RETURNS integer
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result numeric(18,2);
	SET @result =( select count(*) 
                 from spexconceptoexpediente
                 where spexconceptoexpediente.idExpediente = @IdExpediente
					and AFacturar = 1
				)
              
return @result;

END

GO
/****** Object:  UserDefinedFunction [dbo].[NumDiasDesvioCobro]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[NumDiasDesvioCobro]
(@IdFacturaEmitida numeric(10,0))
RETURNS integer
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result numeric(18,0);
	SET @result =  (select DateDiff(day,
					(select convert(datetime,dbo.ConvertFecha(IsNull(FechaVencimiento4,IsNull(FechaVencimiento3,IsNull(FechaVencimiento2,FechaVencimiento))))) as FechaVencimiento
					from spfafacturaemitida where id = @IdFacturaEmitida),
					(select Top 1 convert(datetime,dbo.ConvertFecha(fecha)) as Fecha from (select FechaExtracto as Fecha from spcacobros c
					left join spcalineascobros lc on lc.idCobro = c.id
					where lc.idFactura = @IdFacturaEmitida
					UNION
					select FechaExtracto as Fecha from spcapagos c
					left join spcalineaspagos lc on lc.idPago = c.id
					where lc.idFacturaEmitida = @IdFacturaEmitida) as a
					order by Fecha desc)) as Dias )
return @result
END
GO
/****** Object:  UserDefinedFunction [dbo].[NumDiasDesvioPago]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[NumDiasDesvioPago]
(@IdFacturaRecibida numeric(10,0))
RETURNS integer
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result numeric(18,0);
	SET @result =  (select DateDiff(day,
					(select convert(datetime,dbo.ConvertFecha(FechaVencimiento)) as FechaVencimiento
					from spfafacturarecibida where id = @IdFacturaRecibida),
					(select Top 1 convert(datetime,dbo.ConvertFecha(fecha)) as Fecha from (select FechaExtracto as Fecha from spcacobros c
					left join spcalineascobros lc on lc.idCobro = c.id
					where lc.idFacturaRecibida = @IdFacturaRecibida
					UNION
					select FechaExtracto as Fecha from spcapagos c
					left join spcalineaspagos lc on lc.idPago = c.id
					where lc.idFactura = @IdFacturaRecibida) as a
					order by Fecha desc)) as Dias )
return @result
END
GO
/****** Object:  UserDefinedFunction [dbo].[ProyectosEtapasAlmacenaje_FechaSiguienteEtapa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER FUNCTION [dbo].[ProyectosEtapasAlmacenaje_FechaSiguienteEtapa]
(
	@idEtapa numeric(18,0),
	@idConocMerc numeric(18,0)
)
RETURNS numeric(18,0)
AS
BEGIN

	DECLARE @resultado numeric(18,0)

-- A partir de la identificacion de la pieza y la etapa, obtener los datos necesarios de la pieza y de la etapa
	DECLARE @NumSeriePieza as varchar(max)
	DECLARE @IdProyecto as numeric(18,0)
	DECLARE @IdProyectoMaterial as numeric(18,0)
	DECLARE @Rama as numeric(18,0)
	DECLARE @SiguienteRama as numeric(18,0)
	DECLARE @Orden as numeric(18,0)

    DECLARE DatosPieza_cursor CURSOR FOR   
	SELECT DISTINCT cm.NumSeriePieza, etp.IdProyecto, cmp.IdProyectoMaterial, etp.Rama, etp.SiguienteRama, etp.Orden 
		FROM spopconocimientomercancias_proyectos cmp
		INNER JOIN spopconocimientomercancias cm on cm.id = cmp.IdConocMerc
		INNER JOIN spprproyectosetapas etp on etp.id = cmp.IdEtapa
		WHERE cmp.IdEtapa = @idEtapa and cm.Id = @idConocMerc

    OPEN DatosPieza_cursor
    FETCH NEXT FROM DatosPieza_cursor INTO @NumSeriePieza, @IdProyecto, @IdProyectoMaterial, @Rama, @SiguienteRama, @Orden    
    CLOSE DatosPieza_cursor
    DEALLOCATE DatosPieza_cursor


-- Con la información conseguida se busca la etapa siguiente
	DECLARE @IdSiguienteEtapa as numeric(18,0)
	DECLARE @CVAEtapa as varchar(3)
	DECLARE @CVACampo as varchar(3)
	IF (@SiguienteRama IS NULL )
	-- Buscamos la siguiente etapa, si SiguienteRama es NULL
		begin
			DECLARE SiguienteEtapa_cursor CURSOR FOR   
			SELECT TOP 1 Id, Etapa FROM spprproyectosetapas where idProyecto = @IdProyecto and Rama=@Rama and Orden > @Orden Order by Orden ASC
		end
	ELSE
	-- Buscamos la siguiente etapa, si SiguienteRama es diferente de NULL
		begin
			DECLARE SiguienteEtapa_cursor CURSOR FOR   
			SELECT TOP 1 Id,Etapa FROM spprproyectosetapas where idProyecto = @IdProyecto and Rama=@SiguienteRama Order by Orden ASC
		end
    
	OPEN SiguienteEtapa_cursor
    FETCH NEXT FROM SiguienteEtapa_cursor INTO @IdSiguienteEtapa,@CVAEtapa
    CLOSE SiguienteEtapa_cursor
    DEALLOCATE SiguienteEtapa_cursor


-- Buscar el registro de la siguiente etapa para la misma pieza

-- Determinar el campo a buscar en funcion del tipo de etapa siguiente
	SET @CVACampo = CASE 
						WHEN @CVAEtapa = 'PKU' THEN 'PFC'
						WHEN @CVAEtapa = 'LPE' THEN 'LFC'
						WHEN @CVAEtapa = 'RCD' THEN 'RFC'
						WHEN @CVAEtapa = 'CBU' THEN 'CFC'
						WHEN @CVAEtapa = 'LPI' THEN 'IFC'
						WHEN @CVAEtapa = 'CVE' THEN 'VFC'
						WHEN @CVAEtapa = 'EPL' THEN 'EFC'
						WHEN @CVAEtapa = 'SRD' THEN 'SFC'
						ELSE  'ZZZ'
					END

	DECLARE @IdConocMerc_Proyecto as numeric(18,0)

    DECLARE PiezaSiguiente_cursor CURSOR FOR   
	SELECT cmp.Id FROM spopconocimientomercancias_proyectos cmp
		INNER JOIN spopconocimientomercancias cm on cmp.IdConocMerc = cm.Id and cm.NumSeriePieza = @NumSeriePieza
		WHERE cmp.IdEtapa = @IdSiguienteEtapa and cmp.IdProyectoMaterial = @IdProyectoMaterial and Campo = @CVACampo

    OPEN PiezaSiguiente_cursor
    FETCH NEXT FROM PiezaSiguiente_cursor INTO @IdConocMerc_Proyecto
    CLOSE PiezaSiguiente_cursor
    DEALLOCATE PiezaSiguiente_cursor


    Return @IdConocMerc_Proyecto

END
GO
/****** Object:  UserDefinedFunction [dbo].[RiesgoFinancieroEntidad]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[RiesgoFinancieroEntidad]
(@idEntidad varchar(10),@intTipoRiesgo int)
RETURNS decimal(18,2)
AS
BEGIN
	DECLARE @Result decimal(18,2);
	IF @intTipoRiesgo = 1 SET @Result = (select SUM(ImporteEUR) as RiesgoFinanciero
										 from spcoentidadesriesgoax 
										 where idCliente = @idEntidad) 
	ELSE SET @Result = (Select (Sum(FacturasEmitidas) - Sum(FacturasRecibidas)) as RiesgoFinanciero from (select Sum(TotalFactura) as FacturasRecibidas,0.00 as FacturasEmitidas from 
				  (select fr.idOficina,fr.TotalFactura, 
				  fr.TotalFactura - (select IsNull(Sum(Contravalor),0 ) 
				  from spcalineaspagos 
				  where idFactura =fr.id) 
				  + 
				  (select IsNull(Sum(Contravalor),0 ) 
				  from spcalineascobros 
				  where idFacturaRecibida =fr.id)  as 'Pendiente'
				  from spfafacturarecibida fr 
				  where idEntidadProveedor = @idEntidad
				  ) AS Factura 
				  where pendiente <> 0
				  UNION
				  select 0.00 as FacturasRecibidas,Sum(TotalFacturaEUR) as FacturasEmitidas from 
				  (select fe.idOficina,fe.TotalFacturaEUR,
  				 (fe.TotalFacturaEUR - (select IsNull(Sum(Contravalor),0 ) 
				  from spcalineascobros 
				where idFactura =fe.id) + (select IsNull(Sum(Contravalor),0 ) 
				from spcalineaspagos 
				where idFacturaEmitida =fe.id))  as 'Pendiente'
				from spfafacturaemitida fe 
				 where fe.statusfactura <> 'I' and fe.idEntidadCliente = @idEntidad
				 ) AS Factura 
				where pendiente <> 0) as RiesgoFinanciero)	;
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[RiesgoFinancieroEntidadByEmpresa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[RiesgoFinancieroEntidadByEmpresa]
(@idEntidad varchar(10),@intTipoRiesgo int,@idEmpresa varchar(6))
RETURNS decimal(18,2)
AS
BEGIN
	DECLARE @Result decimal(18,2);
	IF @intTipoRiesgo = 1 SET @Result = (select SUM(ImporteEUR) as RiesgoFinanciero
										 from spcoentidadesriesgoax 
										 where idCliente = @idEntidad and idEmpresa = @idEmpresa) 
	ELSE SET @Result = (Select (Sum(FacturasEmitidas) - Sum(FacturasRecibidas)) as RiesgoFinanciero from (select Sum(TotalFactura) as FacturasRecibidas,0.00 as FacturasEmitidas from 
				  (select fr.idOficina,fr.TotalFactura, 
				  fr.TotalFactura - (select IsNull(Sum(Contravalor),0 ) 
				  from spcalineaspagos 
				  where idFactura =fr.id) 
				  + 
				  (select IsNull(Sum(Contravalor),0 ) 
				  from spcalineascobros 
				  where idFacturaRecibida =fr.id)  as 'Pendiente'
				  from spfafacturarecibida fr 
				  where idEntidadProveedor = @idEntidad and fr.idOficina in (select id from spsioficina where Empresa = @idEmpresa)
				  ) AS Factura 
				  where pendiente <> 0
				  UNION
				  select 0.00 as FacturasRecibidas,Sum(TotalFacturaEUR) as FacturasEmitidas from 
				  (select fe.idOficina,fe.TotalFacturaEUR,
  				 (fe.TotalFacturaEUR - (select IsNull(Sum(Contravalor),0 ) 
				  from spcalineascobros 
				where idFactura =fe.id) + (select IsNull(Sum(Contravalor),0 ) 
				from spcalineaspagos 
				where idFacturaEmitida =fe.id))  as 'Pendiente'
				from spfafacturaemitida fe 
				 where fe.statusfactura <> 'I' and fe.idEntidadCliente = @idEntidad and fe.idOficina in (select id from spsioficina where Empresa = @idEmpresa)
				 ) AS Factura 
				where pendiente <> 0) as RiesgoFinanciero)	;
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[RiesgoFinancieroPorTipoReferencia]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
ALTER FUNCTION [dbo].[RiesgoFinancieroPorTipoReferencia]
(@idReferencia numeric(18,0),@TipoReferencia varchar(3))
RETURNS decimal(18,2)
AS
BEGIN
	DECLARE @Result decimal(18,2);
	
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[RiesgoOperativoBloqueadoEntidad]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[RiesgoOperativoBloqueadoEntidad]
(@idEntidad varchar(10))
RETURNS decimal(18,2)
AS
BEGIN
	DECLARE @Result decimal(18,2);
	SET @Result = (select Sum(Importe) from ( Select Expediente.idCliente,
				  (	CASE SnRiesgoActivo 
						WHEN 1 THEN Isnull(Riesgo,0) - Isnull((Select Sum(ImporteCalculadoventaRentabilidadIVA) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id and ce.Facturado = 1),0)
						WHEN 0 THEN Isnull((Select Sum(ImporteCalculadoventaRentabilidadIVA) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id and ce.Facturado = 0),0)
				    END ) as 'Importe' From ( 
					Select * 
					from spexexpediente e 
					where e.Estado <> 'C' and e.Estado <> 'R' 
					) as Expediente 
					where Expediente.idCliente = @idEntidad and Expediente.SnRiesgoBloqueado = 1) as B
					where Importe >= 0)
	RETURN @Result
END
GO
/****** Object:  UserDefinedFunction [dbo].[RiesgoOperativoBloqueadoEntidadByEmpresa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER FUNCTION [dbo].[RiesgoOperativoBloqueadoEntidadByEmpresa]
(@idEntidad varchar(10),@idEmpresa varchar(6))
RETURNS decimal(18,2)
AS
BEGIN
	DECLARE @Result decimal(18,2);
	SET @Result = (select Sum(Importe) from ( Select Expediente.idCliente,
				  (	CASE SnRiesgoActivo 
						WHEN 1 THEN Isnull(Riesgo,0) - Isnull((Select Sum(ImporteCalculadoventaRentabilidadIVA) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id and ce.Facturado = 1),0)
						WHEN 0 THEN Isnull((Select Sum(ImporteCalculadoventaRentabilidadIVA) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id and ce.Facturado = 0),0)
				    END ) as 'Importe' From ( 
					Select * 
					from spexexpediente e 
					where e.Estado <> 'C' and e.Estado <> 'R' 
					) as Expediente 
					where Expediente.idCliente = '1' and Expediente.SnRiesgoBloqueado = 1 and Expediente.idOficina in (select id from spsioficina where Empresa = @idEmpresa) ) as B
					where Importe >= 0)
	RETURN @Result
END
GO
/****** Object:  UserDefinedFunction [dbo].[RiesgoOperativoEntidad]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[RiesgoOperativoEntidad]
(@idEntidad varchar(10))
RETURNS decimal(18,2)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result decimal(18,2);
		
	SET @Result = (select Sum(Importe) as RiesgoOperativo from (SELECT * FROM (Select Expediente.id,'EXT' as 'TipoReferencia','Expediente Transito' as 'Tipo',Expediente as 'Código',emp.Nombre,idOficina,FechaInicio as fecha,
					Isnull(Riesgo,0) as 'Riesgo',
					(CASE SnRiesgoActivo 
						 WHEN 1 THEN Isnull(Riesgo,0) - Isnull((Select Sum(ImporteCalculadoventaRentabilidadIVA) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id and ce.Facturado = 1),0)
						 WHEN 0 THEN Isnull((Select Sum(ImporteCalculadoventaRentabilidadIVA) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id and ce.Facturado = 0),0)
					END ) as 'Importe',
					Expediente.SnRiesgoBloqueado as Bloqueado From ( 
					Select * 
					from spexexpediente e 
					where e.Estado <> 'C' and e.Estado <> 'R' 
					) as Expediente 
					inner join spsioficina o on o.id = Expediente.idOficina 
					inner join spsiempresa emp on emp.id = o.Empresa 
					where Expediente.idCliente = @idEntidad and Expediente.SnRiesgoBloqueado = 0  
					) as ExpT where Expt.Importe <> 0 
					 UNION 
					Select Expediente.id,'EXC' as 'TipoReferencia','Expediente Consignacion' as 'Tipo',Codigo as 'Código',emp.Nombre,idOficina,(select top 1 FechaLLegada from spopexpedienteatraques where idExpediente = expediente.id) as fecha,0 as Riesgo 
					,Isnull((Select Sum(ImporteCalculadoventaRentabilidad) from spopexpedienteconceptos ce where ce.idExpediente = Expediente.Id ),0) as 'Importe',Convert(bit,0) as Bloqueado From ( 
					Select *,( 
					Select Count(fe.Id) 
					from spfafacturaemitida fe 
					inner join spfalineafacturaemitida lfe on lfe.idfacturaemitida = fe.id 
					inner join spcoentidades ent on fe.idEntidadCliente = ent.id 
					inner join spfaseriefactura se on  fe.IdSerieFactura = se.Id 
					where  fe.statusfactura <> 'I' and lfe.idReferencia in 
					(select id from spopexpedienteconceptos where idexpediente = e.id ) 
					and lfe.TipoReferencia = 'EXC') as Facturas 
					from spopexpediente e 
					where e.Estado <> 'C' and e.Estado <> 'R' 
					) as Expediente 
					inner join spsioficina o on o.id = Expediente.idOficina 
					inner join spsiempresa emp on emp.id = o.Empresa 
					where Expediente.Facturas = 0 and Expediente.idCliente = @idEntidad 
					UNION 
					Select * from (Select Conocimiento.id,'BL' as 'TipoReferencia','BL Consignación' as 'Tipo',CodigoConocimiento as 'Código',emp.Nombre,o.id as idOficina,FechaBL as fecha,0 as Riesgo,Isnull((Select Sum(ImporteCalculadoventaRentabilidad) from spopconocimientoconceptos  ce where ce.IdConocimiento  = Conocimiento.Id ),0) as 'Importe',Convert(bit,0) as Bloqueado From ( 
					Select *,( 
					Select Count(fe.Id) 
					from spfafacturaemitida fe 
					inner join spfalineafacturaemitida lfe on lfe.idfacturaemitida = fe.id 
					inner join spcoentidades ent on fe.idEntidadCliente = ent.id 
					inner join spfaseriefactura se on  fe.IdSerieFactura = se.Id 
					where  fe.statusfactura <> 'I' and lfe.idReferencia in 
					(select id from spopconocimientoconceptos where IdConocimiento = e.id ) 
					and lfe.TipoReferencia = 'BL') as Facturas 
					from spopconocimiento  e 
					where e.EstadoConocimiento  <> 'C' and e.EstadoConocimiento <> 'X' 
					) as Conocimiento 
					inner join spsioficina o on o.id = (select IdOficina from spopbooking where id = Conocimiento.IdBooking ) 
					inner join spsiempresa emp on emp.id = o.Empresa 
					where Conocimiento.Facturas = 0 and Conocimiento.idCliente = @idEntidad ) as ConocimientoFinal where Importe <> 0) as B where Importe >=0 )
		
		
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[RiesgoOperativoEntidadByEmpresa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER FUNCTION [dbo].[RiesgoOperativoEntidadByEmpresa]
(@idEntidad varchar(10),@idEmpresa varchar(6))
RETURNS decimal(18,2)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result decimal(18,2);
		
	SET @Result = (select Sum(Importe) as RiesgoOperativo from (SELECT * FROM (Select Expediente.id,'EXT' as 'TipoReferencia','Expediente Transito' as 'Tipo',Expediente as 'Código',emp.Nombre,idOficina,FechaInicio as fecha,
					Isnull(Riesgo,0) as 'Riesgo',
					(CASE SnRiesgoActivo 
						 WHEN 1 THEN Isnull(Riesgo,0) - Isnull((Select Sum(ImporteCalculadoventaRentabilidadIVA) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id and ce.Facturado = 1),0)
						 WHEN 0 THEN Isnull((Select Sum(ImporteCalculadoventaRentabilidadIVA) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id and ce.Facturado = 0),0)
					END ) as 'Importe',
					Expediente.SnRiesgoBloqueado as Bloqueado From ( 
					Select * 
					from spexexpediente e 
					where e.Estado <> 'C' and e.Estado <> 'R'
					) as Expediente 
					inner join spsioficina o on o.id = Expediente.idOficina 
					inner join spsiempresa emp on emp.id = o.Empresa 
					where Expediente.idCliente = @idEntidad and Expediente.SnRiesgoBloqueado = 0 and Expediente.idOficina in (select id from spsioficina where Empresa = @idEmpresa) 
					) as ExpT where Expt.Importe <> 0 
					 UNION 
					Select Expediente.id,'EXC' as 'TipoReferencia','Expediente Consignacion' as 'Tipo',Codigo as 'Código',emp.Nombre,idOficina,(select top 1 FechaLLegada from spopexpedienteatraques where idExpediente = expediente.id) as fecha,0 as Riesgo 
					,Isnull((Select Sum(ImporteCalculadoventaRentabilidad) from spopexpedienteconceptos ce where ce.idExpediente = Expediente.Id ),0) as 'Importe',Convert(bit,0) as Bloqueado From ( 
					Select *,( 
					Select Count(fe.Id) 
					from spfafacturaemitida fe 
					inner join spfalineafacturaemitida lfe on lfe.idfacturaemitida = fe.id 
					inner join spcoentidades ent on fe.idEntidadCliente = ent.id 
					inner join spfaseriefactura se on  fe.IdSerieFactura = se.Id 
					where  fe.statusfactura <> 'I' and lfe.idReferencia in 
					(select id from spopexpedienteconceptos where idexpediente = e.id ) 
					and lfe.TipoReferencia = 'EXC') as Facturas 
					from spopexpediente e 
					where e.Estado <> 'C' and e.Estado <> 'R' 
					) as Expediente 
					inner join spsioficina o on o.id = Expediente.idOficina 
					inner join spsiempresa emp on emp.id = o.Empresa 
					where Expediente.Facturas = 0 and Expediente.idCliente = @idEntidad  and Expediente.idOficina in (select id from spsioficina where Empresa = @idEmpresa) 
					UNION 
					Select * from (Select Conocimiento.id,'BL' as 'TipoReferencia','BL Consignación' as 'Tipo',CodigoConocimiento as 'Código',emp.Nombre,o.id as idOficina,FechaBL as fecha,0 as Riesgo,Isnull((Select Sum(ImporteCalculadoventaRentabilidad) from spopconocimientoconceptos  ce where ce.IdConocimiento  = Conocimiento.Id ),0) as 'Importe',Convert(bit,0) as Bloqueado From ( 
					Select *,( 
					Select Count(fe.Id) 
					from spfafacturaemitida fe 
					inner join spfalineafacturaemitida lfe on lfe.idfacturaemitida = fe.id 
					inner join spcoentidades ent on fe.idEntidadCliente = ent.id 
					inner join spfaseriefactura se on  fe.IdSerieFactura = se.Id 
					where  fe.statusfactura <> 'I' and lfe.idReferencia in 
					(select id from spopconocimientoconceptos where IdConocimiento = e.id ) 
					and lfe.TipoReferencia = 'BL') as Facturas 
					from spopconocimiento  e 
					where e.EstadoConocimiento  <> 'C' and e.EstadoConocimiento <> 'X' 
					) as Conocimiento 
					inner join spsioficina o on o.id = (select IdOficina from spopbooking where id = Conocimiento.IdBooking ) 
					inner join spsiempresa emp on emp.id = o.Empresa 
					where Conocimiento.Facturas = 0 and Conocimiento.idCliente = @idEntidad and o.id in (select id from spsioficina where Empresa = @idEmpresa)) as ConocimientoFinal where Importe <> 0) as B where Importe >=0 )
		
		
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[RiesgoOperativoPorTipoReferencia]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER FUNCTION [dbo].[RiesgoOperativoPorTipoReferencia]
(@idReferencia numeric(18,0),@TipoReferencia varchar(3))
RETURNS decimal(18,2)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result decimal(18,2);


	IF @TipoReferencia = 'EXT' BEGIN
		SET @Result = (Select (Case SnRiesgoActivo 
					  When 1 Then 
					  (CASE WHEN Isnull(Riesgo,0) < (select ISNull(SUM(ImporteVenta),0) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id And ce.Facturado = 0) THEN (select SUM(ImporteVenta) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id And  ce.Facturado = 0)
					  Else Isnull(Riesgo,0) End)
					  WHEN 0 THEN Isnull((Select Sum(IsNUll(ImporteCalculadoventaRentabilidadIVA,ImporteCalculadoventaRentabilidad)) from spexconceptoexpediente ce where ce.idExpediente = Expediente.Id and (ce.Facturado = 0 or  (ce.Facturado = 1 and ce.id in (Select lfe.idReferencia from spfalineafacturaemitida lfe inner join spfafacturaemitida fe on fe.id = lfe.idFacturaemitida where fe.StatusFactura = 'I' and lfe.tiporeferencia = 'EXT')))),0)
					  END ) as 'Importe' From ( 
					  Select Id,SnRiesgoActivo,Riesgo
					  from spexexpediente e 
					  where e.Estado not in ('C','S','R') and e.id = @idReferencia
					  ) as Expediente )
    END

		
		
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[sf_nol_obtener_descripcion_clave_app]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[sf_nol_obtener_descripcion_clave_app]
(
	@clave		varchar(100), 
	@tipovia	varchar(100)
) 
returns varchar(100)
as
begin
	declare @descripcion varchar(100);

	select  @descripcion = dva.descripcion
	from spsidescripcionidiomasvaloresaplicacion dva 
	inner join spsiclavesvaloresaplicacion cva on dva.idcva =cva.id   
	inner join spsivaloresaplicacion va on cva.idva = va.id 
	where	dva.estado not like 'B%' and cva.estado not like 'B%'
			and va.tipova = upper(@tipovia)
			and upper(cva.clave) = upper(@clave) 
	
	return @descripcion

end
GO
/****** Object:  UserDefinedFunction [dbo].[Split]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[Split]
(@Array varchar(1000),@separator char(1))
RETURNS @table_variable TABLE (col1 nvarchar(1000))
AS
BEGIN
declare @separator_position int
-- almacena el valor de cada vuelta
declare @array_value varchar(1000)
set @array = @array + @separator
-- recorre mientras haya un caracter separador
while patindex('%' + @separator + '%' , @array) <> 0
begin
-- se ubica el separador
set @separator_position = patindex('%' + @separator + '%' , @array)
-- se extrae el valor
set @array_value = substring(@array, 0, @separator_position)
-- se acorta la cadena de caracteres de busqueda
set @array = stuff(@array, 1, @separator_position, '')
-- se almacena en la tabla de respuesta
insert into @table_variable select @array_value as col1
end
RETURN
END
GO
/****** Object:  UserDefinedFunction [dbo].[SubstringHastaFinal]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[SubstringHastaFinal]
(@cadena varchar(8000),@Inicio int)
RETURNS varchar(8000)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @result varchar(8000);
	DECLARE @longitud int;

	Set @longitud = len(@cadena)

	If @Inicio > @longitud Set @Inicio = @longitud

	-- Add the T-SQL statements to compute the return value here
	Set @result = substring(@cadena, @Inicio, @longitud - @Inicio +1)


	-- Return the result of the function
	RETURN @result


END
GO
/****** Object:  UserDefinedFunction [dbo].[TRIM]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[TRIM](@string VARCHAR(MAX)) RETURNS VARCHAR(MAX) BEGIN RETURN LTRIM(RTRIM(@string)) END
GO
/****** Object:  View [dbo].[AvisosFacturas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosFacturas]
AS
SELECT        fe.Id, fe.Id AS idFormulario, fe.IdFormaPago, fe.IdEntidadCliente, fe.IdSerieFactura, sf.CodigoSerie, fe.NumeroFacturaFormateado, fe.StatusFactura, fe.FechaFactura, dbo.ConvertFecha(fe.FechaFactura) AS FechaFacturaDMA, 
                         fe.FechaContabFactura, fe.FechaVencimiento, dbo.ConvertFecha(fe.FechaVencimiento) AS FechaVencimientoDMA, fe.Observaciones, fe.Referencia, fe.Usuario, fe.TimeStamp, fe.FechaEntrada, fe.ObservPie, fe.Anotaciones, 
                         fe.TotalFactura, fe.IdOficina, fe.Cobrado, fe.idDivisa, fe.Asegurada, fe.Agrupada, fe.DireccionFacturacion, fe.AmbitoFactura, fe.IdRegimenAduanal, fe.Idioma, fe.ImporteVenc, fe.FechaVencimiento2, fe.ImporteVenc2, 
                         fe.FechaVencimiento3, fe.ImporteVenc3, fe.FechaVencimiento4, fe.ImporteVenc4, fe.VencimientoManual, fe.DigitoNumFactura, fe.idDireccionCliente, ent.Nombre AS Cliente,
                             (SELECT        COUNT(Id) AS Expr1
                               FROM            dbo.spfafacturaemitida AS fe1
                               WHERE        (IdEntidadCliente = fe.IdEntidadCliente)) AS NumeroTotalesFacturasCliente,
                             (SELECT        MAX(FechaFactura) AS Expr1
                               FROM            dbo.spfafacturaemitida AS fe1
                               WHERE        (IdEntidadCliente = fe.IdEntidadCliente)) AS FechaUltimaFacturaCliente,
                             (SELECT        ControlRiesgo
                               FROM            dbo.spcoentidades
                               WHERE        (Id = fe.IdEntidadCliente)) AS controlRiesgo, fe.TotalFacturaEUR, fe.MotivoExencionImpuestos, dent.EmailContacto AS EmailContactoReclamacion, dent.Contacto AS ContactoReclamacion,
                             (SELECT        TOP (1) Id
                               FROM            dbo.spcocontactosentidades
                               WHERE        (IdEntidad = ent.Id) AND (SnNotify = 'true')) AS idContactoNotificacion,
                             (SELECT        TOP (1) Nombre
                               FROM            dbo.spcocontactosentidades AS spcocontactosentidades_1
                               WHERE        (IdEntidad = ent.Id) AND (SnNotify = 'true')) AS ContactoNotificacion, dbo.SubstringHastaFinal
                             ((SELECT        char(59) + cent.Email
                                 FROM            spcocontactosentidades cent
                                 WHERE        cent.IdEntidad = fe.IdEntidadCliente AND cent.EmailFactura = 1 AND cent.Cancelado = 0 FOR XML PATH('')), 2) AS ContactoEmailFacturaNotificar,fe.UsuarioAlta
FROM            dbo.spfafacturaemitida AS fe INNER JOIN
                         dbo.spcoentidades AS ent ON ent.Id = fe.IdEntidadCliente LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dent ON dent.Id = fe.idDireccionCliente LEFT OUTER JOIN
                         dbo.spfaseriefactura AS sf ON sf.Id = fe.IdSerieFactura
GO
/****** Object:  View [dbo].[AvisosFacturasUltimaDeCadaEntidad]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosFacturasUltimaDeCadaEntidad]
AS
SELECT     TOP (100) PERCENT MAX(Id) AS Id, MAX(idFormulario) AS IdFormulario, Cliente, IdEntidadCliente, FechaUltimaFacturaCliente
FROM         dbo.AvisosFacturas AS fe
WHERE     (FechaFactura =
                          (SELECT     MAX(FechaFactura) AS Expr1
                            FROM          dbo.spfafacturaemitida AS fe1
                            WHERE      (IdEntidadCliente = fe.IdEntidadCliente)))
GROUP BY Cliente, IdEntidadCliente, FechaUltimaFacturaCliente
ORDER BY IdEntidadCliente
GO
/****** Object:  View [dbo].[ContenedoresViajePrimario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ContenedoresViajePrimario]
AS
SELECT     concon.Id AS idContenedor, ex.Id AS idExpediente, con.Trafico
FROM         dbo.spopconocimientocontenedores AS concon INNER JOIN
                      dbo.spopconocimiento AS con ON concon.IdConocimiento = con.Id INNER JOIN
                      dbo.spopbooking AS book ON book.Id = con.IdBooking INNER JOIN
                      dbo.spopexpedienteviajes AS exv ON book.IdExpedienteViaje = exv.Id INNER JOIN
                      dbo.spopexpediente AS ex ON exv.IdExpediente = ex.Id
GO
/****** Object:  View [dbo].[ConocimientosViajePrimario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConocimientosViajePrimario]
AS
SELECT     con.Id AS idConocimiento, ex.Id AS idExpediente, con.Trafico
FROM         dbo.spopconocimiento AS con INNER JOIN
                      dbo.spopbooking AS book ON book.Id = con.IdBooking INNER JOIN
                      dbo.spopexpedienteviajes AS exv ON book.IdExpedienteViaje = exv.Id INNER JOIN
                      dbo.spopexpediente AS ex ON exv.IdExpediente = ex.Id
GO
/****** Object:  View [dbo].[ContenedoresEnviadosViajePrimario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ContenedoresEnviadosViajePrimario]
AS
SELECT     contdsum.IdContConocimiento AS IdContenedor, dsum.Trafico, CVP.idExpediente
FROM         dbo.spmeContenedoresDeclSum AS contdsum INNER JOIN
                      dbo.spmeConocimientosDeclSum AS dsum ON dsum.id = contdsum.idConocimientoDeclSum INNER JOIN
                      dbo.ConocimientosViajePrimario AS CVP ON CVP.idConocimiento = dsum.idConocimiento
WHERE     (contdsum.Estado = 'A')
GO
/****** Object:  View [dbo].[ComparativaContenedoresEnviadosNoEnviadosImport]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ComparativaContenedoresEnviadosNoEnviadosImport]
AS
SELECT     Id AS IdExpediente, Codigo,
                          (SELECT     COUNT(idContenedor) AS Expr1
                            FROM          dbo.ContenedoresViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'I')) AS NumContenedoresImport,
                          (SELECT     COUNT(DISTINCT idContenedor) AS Expr1
                            FROM          dbo.ContenedoresEnviadosViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'I')) AS NumContenedoresEnviadosImport,
                          (SELECT     COUNT(idContenedor) AS Expr1
                            FROM          dbo.ContenedoresViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'T')) AS NumContenedoresTrasbordosDescargados,
                          (SELECT     COUNT(DISTINCT IdContenedor) AS Expr1
                            FROM          dbo.ContenedoresEnviadosViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'T')) AS NumContenedoresEnviadosTrasbordosDescargados
FROM         dbo.spopexpediente AS ex1
GROUP BY Codigo, Id
GO
/****** Object:  View [dbo].[ContenedoresViajeSecundario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ContenedoresViajeSecundario]
AS
SELECT     concon.Id AS idContenedor, ex.Id AS idExpediente, con.Trafico
FROM         dbo.spopconocimientocontenedores AS concon INNER JOIN
                      dbo.spopconocimiento AS con ON concon.IdConocimiento = con.Id INNER JOIN
                      dbo.spopbooking AS book ON book.Id = con.IdBooking INNER JOIN
                      dbo.spopexpedienteviajes AS exv ON book.IdExpedienteViajeSecundario = exv.Id INNER JOIN
                      dbo.spopexpediente AS ex ON exv.IdExpediente = ex.Id
GO
/****** Object:  View [dbo].[ConocimientosViajeSecundario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConocimientosViajeSecundario]
AS
SELECT     con.Id AS idConocimiento, ex.Id AS idExpediente, con.Trafico
FROM         dbo.spopconocimiento AS con INNER JOIN
                      dbo.spopbooking AS book ON book.Id = con.IdBooking INNER JOIN
                      dbo.spopexpedienteviajes AS exv ON book.IdExpedienteViajeSecundario = exv.Id INNER JOIN
                      dbo.spopexpediente AS ex ON exv.IdExpediente = ex.Id
GO
/****** Object:  View [dbo].[ContenedoresEnviadosViajeSecundario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ContenedoresEnviadosViajeSecundario]
AS
SELECT     contdsum.IdContConocimiento AS IdContenedor, dsum.Trafico, CVP.idExpediente
FROM         dbo.spmeContenedoresDeclSum AS contdsum INNER JOIN
                      dbo.spmeConocimientosDeclSum AS dsum ON dsum.id = contdsum.idConocimientoDeclSum INNER JOIN
                      dbo.ConocimientosViajeSecundario AS CVP ON CVP.idConocimiento = dsum.idConocimiento
WHERE     (contdsum.Estado = 'A')
GO
/****** Object:  View [dbo].[ComparativaContenedoresEnviadosNoEnviadosExport]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ComparativaContenedoresEnviadosNoEnviadosExport]
AS
SELECT     Id AS IdExpediente, Codigo,
                          (SELECT     COUNT(idContenedor) AS Expr1
                            FROM          dbo.ContenedoresViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'E')) AS NumContenedoresExport,
                          (SELECT     COUNT(DISTINCT IdContenedor) AS Expr1
                            FROM          dbo.ContenedoresEnviadosViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'E')) AS NumContenedoresEnviadosExport,
                          (SELECT     COUNT(idContenedor) AS Expr1
                            FROM          dbo.ContenedoresViajeSecundario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'T')) AS NumContenedoresTrasbordosCargados,
                          (SELECT     COUNT(DISTINCT IdContenedor) AS Expr1
                            FROM          dbo.ContenedoresEnviadosViajeSecundario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'T')) AS NumContenedoresEnviadosTrasbordosCargados
FROM         dbo.spopexpediente AS ex1
GROUP BY Codigo, Id
GO
/****** Object:  View [dbo].[ConocimientosEnviadosViajePrimario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConocimientosEnviadosViajePrimario]
AS
SELECT     dsum.idConocimiento, dsum.Trafico, CVP.idExpediente
FROM         dbo.spmeConocimientosDeclSum AS dsum INNER JOIN
                      dbo.ConocimientosViajePrimario AS CVP ON CVP.idConocimiento = dsum.idConocimiento
WHERE     (dsum.Estado = 'A')
GO
/****** Object:  View [dbo].[ComparativaConocimientosEnviadosNoEnviadosImport]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ComparativaConocimientosEnviadosNoEnviadosImport]
AS
SELECT     Id AS IdExpediente, Codigo,
                          (SELECT     COUNT(idConocimiento) AS Expr1
                            FROM          dbo.ConocimientosViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'I')) AS NumConocimientosImport,
                          (SELECT     COUNT(DISTINCT idConocimiento) AS Expr1
                            FROM          dbo.ConocimientosEnviadosViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'I')) AS NumConocimientosEnviadosImport,
                          (SELECT     COUNT(idConocimiento) AS Expr1
                            FROM          dbo.ConocimientosViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'T')) AS NumConocimientosTrasbordosDescargados,
                          (SELECT     COUNT(DISTINCT idConocimiento) AS Expr1
                            FROM          dbo.ConocimientosEnviadosViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'T')) AS NumConocimientosEnviadosTrasbordosDescargados
FROM         dbo.spopexpediente AS ex1
GROUP BY Codigo, Id
GO
/****** Object:  View [dbo].[ConocimientosEnviadosViajeSecudario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConocimientosEnviadosViajeSecudario]
AS
SELECT     dsum.idConocimiento, dsum.Trafico, CVS.idExpediente
FROM         dbo.spmeConocimientosDeclSum AS dsum INNER JOIN
                      dbo.ConocimientosViajeSecundario AS CVS ON dsum.idConocimiento = CVS.idConocimiento
WHERE     (dsum.Estado = 'A')
GO
/****** Object:  View [dbo].[ComparativaConocimientosEnviadosNoEnviadosExport]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ComparativaConocimientosEnviadosNoEnviadosExport]
AS
SELECT     Id AS IdExpediente, Codigo,
                          (SELECT     COUNT(idConocimiento) AS Expr1
                            FROM          dbo.ConocimientosViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'E')) AS NumConocimientosExport,
                          (SELECT     COUNT(DISTINCT idConocimiento) AS Expr1
                            FROM          dbo.ConocimientosEnviadosViajePrimario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'E')) AS NumConocimientosEnviadosExport,
                          (SELECT     COUNT(idConocimiento) AS Expr1
                            FROM          dbo.ConocimientosViajeSecundario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'T')) AS NumConocimientosTrasbordosCargados,
                          (SELECT     COUNT(DISTINCT idConocimiento) AS Expr1
                            FROM          dbo.ConocimientosEnviadosViajeSecudario AS CEV
                            WHERE      (idExpediente = ex1.Id) AND (Trafico = 'T')) AS NumConocimientosEnviadosTrasbordosCargados
FROM         dbo.spopexpediente AS ex1
GROUP BY Codigo, Id
GO
/****** Object:  View [dbo].[ExpedienteEnviadosViajeImport]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedienteEnviadosViajeImport]
AS
SELECT     ex.Id, COUNT(cab.id) AS CabeceraDecl
FROM         dbo.spopexpediente AS ex LEFT OUTER JOIN
                      dbo.spopexpedienteviajes AS exv ON ex.Id = exv.IdExpediente LEFT OUTER JOIN
                      dbo.spmeCabeceraDeclSum AS cab ON exv.Id = cab.idViajeExpediente AND cab.TipoDoc = '785' AND cab.Estado = 'A'
GROUP BY ex.Id
GO
/****** Object:  View [dbo].[ExpedienteEnviadosViajeExport]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedienteEnviadosViajeExport]
AS
SELECT     ex.Id, CASE COUNT(cab.id) WHEN 0 THEN 0 ELSE 1 END AS CabeceraManif
FROM         dbo.spopexpediente AS ex LEFT OUTER JOIN
                      dbo.spopexpedienteviajes AS exv ON ex.Id = exv.IdExpediente LEFT OUTER JOIN
                      dbo.spmeCabeceraDeclSum AS cab ON exv.Id = cab.idViajeExpediente AND cab.TipoDoc = '833' AND cab.Estado = 'A'
GROUP BY ex.Id
GO
/****** Object:  View [dbo].[ComparativaConocimientosEnviadosNoEnviadosFull]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ComparativaConocimientosEnviadosNoEnviadosFull]
AS
SELECT     ex1.Id AS idexpediente, ex1.Codigo, CAST(imp.NumConocimientosEnviadosImport + imp.NumConocimientosEnviadosTrasbordosDescargados AS varchar) 
                      + '/' + CAST(imp.NumConocimientosImport + imp.NumConocimientosTrasbordosDescargados AS varchar) AS Declaracion, 
                      CAST(exp.NumConocimientosEnviadosExport + exp.NumConocimientosEnviadosTrasbordosCargados AS varchar) 
                      + '/' + CAST(exp.NumConocimientosExport + exp.NumConocimientosTrasbordosCargados AS varchar) AS Manifiesto, 
                      CAST(CASE WHEN imp.NumConocimientosImport + imp.NumConocimientosEnviadosTrasbordosDescargados = imp.NumConocimientosEnviadosImport + imp.NumConocimientosEnviadosTrasbordosDescargados
                       THEN 0 ELSE 1 END AS bit) AS WarningI, 
                      CAST(CASE WHEN exp.NumConocimientosExport + exp.NumConocimientosTrasbordosCargados = exp.NumConocimientosEnviadosExport + exp.NumConocimientosEnviadosTrasbordosCargados
                       THEN 0 ELSE 1 END AS bit) AS WarningE
FROM         dbo.spopexpediente AS ex1 INNER JOIN
                      dbo.ComparativaConocimientosEnviadosNoEnviadosImport AS imp ON imp.IdExpediente = ex1.Id INNER JOIN
                      dbo.ComparativaConocimientosEnviadosNoEnviadosExport AS exp ON exp.IdExpediente = ex1.Id
GO
/****** Object:  View [dbo].[ComparativaConocimientosCabeceraEnviadosNoEnviadosFull]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ComparativaConocimientosCabeceraEnviadosNoEnviadosFull]
AS
SELECT     ex1.Id AS IdExpediente, cab.CabeceraDecl, cab2.CabeceraManif, comp.Codigo, comp.Declaracion, comp.Manifiesto, comp.WarningI, comp.WarningE
FROM         dbo.spopexpediente AS ex1 INNER JOIN
                      dbo.ComparativaConocimientosEnviadosNoEnviadosFull AS comp ON comp.idexpediente = ex1.Id INNER JOIN
                      dbo.ExpedienteEnviadosViajeImport AS cab ON ex1.Id = cab.Id INNER JOIN
                      dbo.ExpedienteEnviadosViajeExport AS cab2 ON ex1.Id = cab2.Id
GO
/****** Object:  View [dbo].[ComparativaContenedoresEnviadosNoEnviadosFull]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ComparativaContenedoresEnviadosNoEnviadosFull]
AS
SELECT     ex1.Id AS idexpediente, ex1.Codigo, CAST(imp.NumContenedoresEnviadosImport + imp.NumContenedoresEnviadosTrasbordosDescargados AS varchar) 
                      + '/' + CAST(imp.NumContenedoresImport + imp.NumContenedoresTrasbordosDescargados AS varchar) AS Declaracion, 
                      CAST(exp.NumContenedoresEnviadosExport + exp.NumContenedoresEnviadosTrasbordosCargados AS varchar) 
                      + '/' + CAST(exp.NumContenedoresExport + exp.NumContenedoresTrasbordosCargados AS varchar) AS Manifiesto, 
                      CAST(CASE WHEN imp.NumContenedoresImport + imp.NumContenedoresEnviadosTrasbordosDescargados = imp.NumContenedoresEnviadosImport + imp.NumContenedoresEnviadosTrasbordosDescargados
                       THEN 0 ELSE 1 END AS bit) AS WarningI, 
                      CAST(CASE WHEN exp.NumContenedoresExport + exp.NumContenedoresTrasbordosCargados = exp.NumContenedoresEnviadosExport + exp.NumContenedoresEnviadosTrasbordosCargados
                       THEN 0 ELSE 1 END AS bit) AS WarningE
FROM         dbo.spopexpediente AS ex1 INNER JOIN
                      dbo.ComparativaContenedoresEnviadosNoEnviadosImport AS imp ON imp.IdExpediente = ex1.Id INNER JOIN
                      dbo.ComparativaContenedoresEnviadosNoEnviadosExport AS exp ON exp.IdExpediente = ex1.Id
GO
/****** Object:  View [dbo].[ComparativaContenedoresCabeceraEnviadosNoEnviadosFull]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ComparativaContenedoresCabeceraEnviadosNoEnviadosFull]
AS
SELECT     ex1.Id AS IdExpediente, cab.CabeceraDecl AS CabeceraDeclCont, cab2.CabeceraManif AS CabeceraManifCont, comp.Codigo, comp.Declaracion AS DeclaracionCont, 
                      comp.Manifiesto AS ManifiestoCont, comp.WarningI AS WarningICont, comp.WarningE AS WarningECont
FROM         dbo.spopexpediente AS ex1 INNER JOIN
                      dbo.ComparativaContenedoresEnviadosNoEnviadosFull AS comp ON comp.idexpediente = ex1.Id INNER JOIN
                      dbo.ExpedienteEnviadosViajeImport AS cab ON ex1.Id = cab.Id INNER JOIN
                      dbo.ExpedienteEnviadosViajeExport AS cab2 ON ex1.Id = cab2.Id
GO
/****** Object:  View [dbo].[AX_FacturasRecibidasNoProcesadasAuxiliar]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AX_FacturasRecibidasNoProcesadasAuxiliar]
AS
SELECT DISTINCT IdEnviado, NumTransmision, Usuario, idFactura, NumeroFacturaProveedor, NumerofacturaSolport, idOficina, Fecha, Accion, Observaciones
FROM         (SELECT     t.IdEnviado, t.NumTransmision, t.Usuario, fr.Id AS idFactura, fr.NumeroFactura AS NumerofacturaSolport, fr.Numero AS NumeroFacturaProveedor, 
                                              t.idOficina,
                                                  (SELECT     TOP (1) Timestamp
                                                    FROM          dbo.spintransmisionhistorico AS th
                                                    WHERE      (idTransmision = t.id)
                                                    ORDER BY Timestamp DESC) AS Fecha,
                                                  (SELECT     TOP (1) Accion
                                                    FROM          dbo.spintransmisionhistorico AS th
                                                    WHERE      (idTransmision = t.id)
                                                    ORDER BY Timestamp DESC) AS Accion,
                                                  (SELECT     TOP (1) Observaciones
                                                    FROM          dbo.spintransmisionhistorico AS th
                                                    WHERE      (idTransmision = t.id)
                                                    ORDER BY Timestamp DESC) AS Observaciones
                       FROM          dbo.spfafacturarecibida AS fr INNER JOIN
                                              dbo.spintransmision AS t ON t.IdEnviado = fr.Id INNER JOIN
                                              dbo.spintransmisionhistorico AS th ON th.idTransmision = t.id
                       WHERE      (t.TipoTransmision = 'FR') AND (NOT (t.IdEnviado IN
                                                  (SELECT DISTINCT t1.IdEnviado
                                                    FROM          dbo.spintransmision AS t1 INNER JOIN
                                                                           dbo.spintransmisionhistorico AS th ON th.idTransmision = t1.id
                                                    WHERE      (t1.TipoTransmision = 'FR') AND (th.Procesado = 'true') AND (th.Accion = 'PR') AND (NOT (t1.IdEnviado IS NULL)))))) AS Facturas
GO
/****** Object:  View [dbo].[AX_FacturasRecibidasNoProcesadas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AX_FacturasRecibidasNoProcesadas]
AS
SELECT     frcp.IdEnviado, frcp.NumTransmision, frcp.Usuario, frcp.idFactura, frcp.NumerofacturaSolport, frcp.NumeroFacturaProveedor, frcp.idOficina, frcp.Fecha, frcp.Accion, 
                      frcp.Observaciones
FROM         dbo.AX_FacturasRecibidasNoProcesadasAuxiliar AS frcp INNER JOIN
                          (SELECT     idFactura, MAX(Fecha) AS Fecha
                            FROM          dbo.AX_FacturasRecibidasNoProcesadasAuxiliar AS AX_FacturasRecibidasNoProcesadasAuxiliar_1
                            GROUP BY idFactura) AS tabla ON tabla.idFactura = frcp.idFactura AND tabla.Fecha = frcp.Fecha
UNION
SELECT     '' AS idEnviado, 0 AS NumTransmision, Usuario, Id AS idFactura, NumeroFactura AS NumerofacturaSolport, Numero AS NumeroFacturaProveedor, IdOficina, 
                      TimeStamp AS Fecha, 'Sin Transmision' AS Accion, '' AS Observaciones
FROM         dbo.spfafacturarecibida AS fr
WHERE     (IdOficina <> 'EPALG') AND (StatusFactura = 'R')
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_TablaPiezas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		SPSR
-- Create date: 30/JUN/2016
-- Description:	Obtiene la lista de piezas existentes para una determinada locación en una fecha concreta
--				La pieza debe existir en la @Locacion y tener el @Campo informado con una fecha inferior a la @FechaFormateada
--				Además no deb existir para la siguiente etapa (@Locacion2,@Etapa2,@Campo2) en la @FechaFormateada
--				Cualquier pieza en stock lleva como mínimo un día
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_TablaPiezas]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@Locacion varchar(50),
	@Campo varchar(3),
	@Locacion2 varchar(50),
	@Etapa2 varchar(50),
	@Campo2 varchar(50),	
	@FechaFormateada varchar(10)
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	
select
	cm.DescrMercanciaBL as Componente, cm.NumSeriePieza, pe.Locacion, (datediff(dd, convert(datetime,substring(Valor,1,10) + ' 00:00:00',103), convert(datetime,@FechaFormateada + ' 00:00:00',103))+1) as Dias
	FROM spopconocimientomercancias_proyectos cmp
	left join spopconocimientomercancias cm on cm.id = cmp.idConocMerc
	left join spprproyectosetapas pe on pe.id = cmp.idEtapa
	WHERE cmp.idProyectoMaterial IN (SELECT Id FROM spprproyectosmateriales WHERE idProyecto = @IdProyecto)
		and cmp.IdEtapa IN (SELECT Id FROM spprproyectosetapas WHERE idProyecto = @IdProyecto AND Locacion = @Locacion)
		and cmp.Campo = @Campo
		and NOT Valor IS NULL
		and convert(datetime, 
		Case When Isdate(Valor) = 1 THEN Valor
		     Else '01-01-2000'
		End
		,103)  <= convert(datetime,@FechaFormateada + ' 23:59:59',103)
	    and dbo.CASEGI_ExistePiezaProyecto(@IdProyecto, cm.NumSeriePieza, cmp.idProyectoMaterial, @Locacion2,@Etapa2,@Campo2,@FechaFormateada)=0


)	
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_TablaReport3]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[CASEGI_TablaReport3]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@FechaFormateada varchar(10)
	
)
RETURNS TABLE 
AS
RETURN 
(
select row_number()
	over ( ORDER BY Dias DESC, Componente) as NumFila,
	* from (
	SELECT * FROM  dbo.CASEGI_TablaPiezas(@IdProyecto,'PECEM','RFC','PECEM-TMUT','CBU','CFC',@FechaFormateada)
 UNION
 SELECT  * from dbo.CASEGI_TablaPiezas(@IdProyecto,'SALVADOR','RFC','SALVADOR','CBU','CFC',@FechaFormateada)
 UNION
 SELECT  * from dbo.CASEGI_TablaPiezas(@IdProyecto,'RIO GRANDE','RFC','RIO GRANDE','CVE','VFP',@FechaFormateada)
 UNION
 SELECT  Componente, NumSeriePieza, 'En tránsito a parque', NULL from dbo.CASEGI_TablaPiezas(@IdProyecto,'RIO GRANDE','VFP','MM','EPL','EFA',@FechaFormateada)
 UNION
 SELECT  Componente, NumSeriePieza, 'Sin descargar en parque', NULL from dbo.CASEGI_TablaPiezas(@IdProyecto,'MM','EFA','MM','EPL','EFC',@FechaFormateada)
 UNION
 SELECT  Componente, NumSeriePieza, 'Cargado en buque', NULL from dbo.CASEGI_TablaPiezas(@IdProyecto,'PECEM-TMUT','CBU','RIO GRANDE','LPI','IFC',@FechaFormateada)
 UNION
 SELECT  Componente, NumSeriePieza, 'Cargado en buque', NULL from dbo.CASEGI_TablaPiezas(@IdProyecto,'SALVADOR','CBU','RIO GRANDE','LPI','IFC',@FechaFormateada)
 
 ) AS filas


)
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_TablaMovimDiaCarga]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_TablaMovimDiaCarga]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@Locacion varchar(50),
	@Locacion2 varchar(50),
	@Campo varchar(3),
	@FechaFormateada varchar(10)
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	
select * from 
(select row_number()
	over (Order by cm.DescrMercanciaBL, cmp.Valor) as NumFila,	
	@IdProyecto as IdFormulario, cm.DescrMercanciaBL as Componente, cm.NumSeriePieza, cm.NumSeriePieza2, cm.NumSeriePieza3, cmp.Valor as Fecha, pe2.Locacion as LocacionCarga
	FROM spopconocimientomercancias_proyectos cmp
	left join spopconocimientomercancias cm on cm.id = cmp.idConocMerc
	left join spprproyectosetapas pe on pe.id = cmp.idEtapa
	left join (
			spopconocimientomercancias cm2 
	inner join spopconocimientomercancias_proyectos cmp2 on cmp2.idConocMerc = cm2.id  and cmp2.Campo = 'CFC'
	inner join spprproyectosetapas pe2 on pe2.id = cmp2.idEtapa
	) on cm.NumSeriePieza = cm2.NumSeriePieza and cmp2.IdProyectoMaterial = cmp.IdProyectoMaterial
	
	WHERE cmp.idProyectoMaterial IN (SELECT Id FROM spprproyectosmateriales WHERE idProyecto = @IdProyecto)
		and cmp.IdEtapa IN (SELECT Id FROM spprproyectosetapas WHERE idProyecto = @IdProyecto AND Locacion IN (@Locacion,@Locacion2))
		and cmp.Campo = @Campo
		and cmp.Valor like (@FechaFormateada + '%')
) as filas
)	
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_TablaMovimCarga]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_TablaMovimCarga]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@Locacion varchar(50),
	@Locacion2 varchar(50),
	@Campo varchar(3),
	@FechaFormateada varchar(10)
	
)
RETURNS TABLE 
AS
RETURN 
(
 SELECT @IdProyecto as IdFormulario,
	stuff(( select '|' + convert(varchar(10),NumFila) as [text()] FROM CASEGI_TablaMovimDiaCarga(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as Fila,
	stuff(( select '|' + Isnull(Componente,'') as [text()] FROM CASEGI_TablaMovimDiaCarga(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as Componente,
	stuff(( select '|' + Isnull(NumSeriePieza,'') as [text()] FROM CASEGI_TablaMovimDiaCarga(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as NumSerie,
	stuff(( select '|' + isnull(Fecha,'') as [text()] FROM CASEGI_TablaMovimDiaCarga(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as Fecha,
	stuff(( select '|' + Isnull(LocacionCarga,'') as [text()] FROM CASEGI_TablaMovimDiaCarga(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as Locacion

)
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_TablaMovimDia]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_TablaMovimDia]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@Locacion varchar(50),
	@Locacion2 varchar(50),
	@Campo varchar(3),
	@FechaFormateada varchar(10)
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	
select * from 
(select row_number()
	over (Order by cm.DescrMercanciaBL, Valor) as NumFila,	
	@IdProyecto as IdFormulario, cm.DescrMercanciaBL as Componente, cm.NumSeriePieza, cm.NumSeriePieza2,cm.NumSeriePieza3,Valor as Fecha, pe.Locacion
	FROM spopconocimientomercancias_proyectos cmp
	left join spopconocimientomercancias cm on cm.id = cmp.idConocMerc
	left join spprproyectosetapas pe on pe.id = cmp.idEtapa
	WHERE cmp.idProyectoMaterial IN (SELECT Id FROM spprproyectosmateriales WHERE idProyecto = @IdProyecto)
		and cmp.IdEtapa IN (SELECT Id FROM spprproyectosetapas WHERE idProyecto = @IdProyecto AND Locacion IN (@Locacion, @Locacion2))
		and cmp.Campo = @Campo
		and Valor like (@FechaFormateada + '%')
) as filas
	
)
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_TablaMovim]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_TablaMovim]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@Locacion varchar(50),
	@Locacion2 varchar(50),
	@Campo varchar(3),
	@FechaFormateada varchar(10)
	
)
RETURNS TABLE 
AS
RETURN 
(
 SELECT @IdProyecto as IdFormulario,
	stuff(( select '|' + convert(varchar(10),NumFila) as [text()] FROM CASEGI_TablaMovimDia(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as Fila,
	stuff(( select '|' + isnull(Componente,'') as [text()] FROM CASEGI_TablaMovimDia(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as Componente,
	stuff(( select '|' + isnull(NumSeriePieza,'') as [text()] FROM CASEGI_TablaMovimDia(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as NumSerie,
	stuff(( select '|' + isnull(NumSeriePieza2,'') as [text()] FROM CASEGI_TablaMovimDia(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as NumSerie2,
	stuff(( select '|' + isnull(NumSeriePieza3,'') as [text()] FROM CASEGI_TablaMovimDia(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as NumSerie3,
	stuff(( select '|' + isnull(Fecha,'') as [text()] FROM CASEGI_TablaMovimDia(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as Fecha,
	stuff(( select '|' + isnull(Locacion,'') as [text()] FROM CASEGI_TablaMovimDia(@IdProyecto,@Locacion,@Locacion2,@Campo,@FechaFormateada) FOR XML PATH('')),1,1,'') as Locacion

)
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_TablaMovimDia2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_TablaMovimDia2]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@Locacion varchar(50),
	@Locacion2 varchar(50),
	@Campo varchar(3),
	@CampoNotNull varchar(3),
	@FechaFormateada varchar(10)
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	
select * from 
(select row_number()
	over (Order by cm.DescrMercanciaBL, Valor) as NumFila,	
	@IdProyecto as IdFormulario, cm.DescrMercanciaBL as Componente, cm.NumSeriePieza, cm.NumSeriePieza2, cm.NumSeriePieza3, Valor as Fecha
	FROM spopconocimientomercancias_proyectos cmp
	left join spopconocimientomercancias cm on cm.id = cmp.idConocMerc
	WHERE cmp.idProyectoMaterial IN (SELECT Id FROM spprproyectosmateriales WHERE idProyecto = @IdProyecto)
		and cmp.IdEtapa IN (SELECT Id FROM spprproyectosetapas WHERE idProyecto = @IdProyecto AND Locacion IN (@Locacion,@Locacion2))
		and cmp.Campo = @Campo
		and Valor like (@FechaFormateada + '%')
		and 0 = (select count(*) from spopconocimientomercancias_proyectos where cmp.IdConocMerc = IdConocMerc and Campo=@CampoNotNull and Valor is Not NULL)
) as filas
)	
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_TablaMovim2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_TablaMovim2]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@Locacion varchar(50),
	@Locacion2 varchar(50),
	@Campo varchar(3),
	@CampoNotNull varchar(1),
	@FechaFormateada varchar(10)
)
RETURNS TABLE 
AS
RETURN 
(
 SELECT @IdProyecto as IdFormulario,
	stuff(( select '|' + convert(varchar(10),NumFila) as [text()] FROM CASEGI_TablaMovimDia2(@IdProyecto,@Locacion,@Locacion2,@Campo,@CampoNotNull,@FechaFormateada) FOR XML PATH('')),1,1,'') as Fila,
	stuff(( select '|' + isnull(Componente,'') as [text()] FROM CASEGI_TablaMovimDia2(@IdProyecto,@Locacion,@Locacion2,@Campo,@CampoNotNull,@FechaFormateada) FOR XML PATH('')),1,1,'') as Componente,
	stuff(( select '|' + isnull(NumSeriePieza,'') as [text()] FROM CASEGI_TablaMovimDia2(@IdProyecto,@Locacion,@Locacion2,@Campo,@CampoNotNull,@FechaFormateada) FOR XML PATH('')),1,1,'') as NumSerie,
	stuff(( select '|' + isnull(NumSeriePieza2,'') as [text()] FROM CASEGI_TablaMovimDia2(@IdProyecto,@Locacion,@Locacion2,@Campo,@CampoNotNull,@FechaFormateada) FOR XML PATH('')),1,1,'') as NumSerie2,
	stuff(( select '|' + isnull(NumSeriePieza3,'') as [text()] FROM CASEGI_TablaMovimDia2(@IdProyecto,@Locacion,@Locacion2,@Campo,@CampoNotNull,@FechaFormateada) FOR XML PATH('')),1,1,'') as NumSerie3,
	stuff(( select '|' + isnull(Fecha,'') as [text()] FROM CASEGI_TablaMovimDia2(@IdProyecto,@Locacion,@Locacion2,@Campo,@CampoNotNull,@FechaFormateada) FOR XML PATH('')),1,1,'') as Fecha
)
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_TablaReport3_FORXML]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[CASEGI_TablaReport3_FORXML]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@FechaFormateada varchar(10)
	
)
RETURNS TABLE 
AS
RETURN 
(
 SELECT 
	stuff(( select '|' + convert(varchar(10),isnull(NumFila,'')) as [text()] FROM CASEGI_TablaReport3(@IdProyecto,@FechaFormateada) FOR XML PATH('')),1,1,'') as Fila,
	stuff(( select '|' + isnull(Componente,'') as [text()] FROM CASEGI_TablaReport3(@IdProyecto,@FechaFormateada) FOR XML PATH('')),1,1,'') as Componente,
	stuff(( select '|' + isnull(NumSeriePieza,'') as [text()] FROM CASEGI_TablaReport3(@IdProyecto,@FechaFormateada) FOR XML PATH('')),1,1,'') as NumSerie,
	stuff(( select '|' + isnull(Locacion,'') as [text()] FROM CASEGI_TablaReport3(@IdProyecto,@FechaFormateada) FOR XML PATH('')),1,1,'') as Locacion,
	stuff(( select '|' + convert(varchar(10),isnull(Dias,'')) as [text()] FROM CASEGI_TablaReport3(@IdProyecto,@FechaFormateada) FOR XML PATH('')),1,1,'') as Dias

)
GO
/****** Object:  View [dbo].[AvisosItemsCheckListExpedientes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosItemsCheckListExpedientes]
AS
SELECT     echkl.Id, echkl.IdExpediente AS idFormulario, echkl.IdExpediente, ex.Codigo, echkl.Fecha AS FechaRealizacionItem, echkl.IdUsuario AS Usuario, 
                      echkl.Manual, echkl.Descripcion, echkl.DescripcionCapitan, echkl.snServicioBuque, bu.Nombre AS Buque, exr.IdUsuario AS Responsable, 
                      dbo.ConvertFechaHora(exAtr.FechaLlegada, exAtr.HoraLlegada) AS FechaLlegada, dbo.ConvertFechaHora(exAtr.FechaSalida, exAtr.HoraSalida) 
                      AS FechaSalida, pchkp.DiasAviso, pchkp.FechaAplicacion
FROM         dbo.spopexpedientechecklist AS echkl INNER JOIN
                      dbo.spopexpediente AS ex ON ex.Id = echkl.IdExpediente LEFT OUTER JOIN
                      dbo.spopexpedienteresponsables AS exr ON ex.Id = exr.IdExpediente LEFT OUTER JOIN
                      dbo.spbmbuque AS bu ON bu.Id = ex.IdBuque INNER JOIN
                      dbo.spopexpedienteatraques AS exAtr ON ex.Id = exAtr.IdExpediente INNER JOIN
                      dbo.spopitemchecklist AS it ON echkl.IdItem = it.id INNER JOIN
                      dbo.spopchecklistitems AS chki ON chki.IdItem = it.id INNER JOIN
                      dbo.spopchecklistperiodicidades AS chkp ON chkp.Id = chki.IdCheckListPeriodicidad INNER JOIN
                      dbo.spopperiodicidadchecklist AS pchk ON pchk.id = chkp.IdPeriodicidad INNER JOIN
                      dbo.spopperiodicidadchecklistplazos AS pchkp ON pchkp.IdPeriodicidadCL = pchk.id AND ex.IdPuerto = pchkp.IdPuerto AND 
                      ex.IdCheckList = chkp.IdCheckList
WHERE     (exAtr.Id =
                          (SELECT     TOP (1) Id
                            FROM          dbo.spopexpedienteatraques AS spexpatra
                            WHERE      (ex.Id = IdExpediente) AND ((FechaLlegada + HoraLlegada) IN
                                                       (SELECT     MIN(FechaLlegada + HoraLlegada) AS Expr1
                                                         FROM          dbo.spopexpedienteatraques AS exat1
                                                         WHERE      (ex.Id = IdExpediente)))))
GO
/****** Object:  View [dbo].[AvisosItemsCaducadosCheckListExpedientes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosItemsCaducadosCheckListExpedientes]
AS
SELECT     Id, idFormulario, IdExpediente, Codigo, FechaRealizacionItem, Usuario, Manual, Descripcion, DescripcionCapitan, snServicioBuque, Buque, FechaLlegada, 
                      FechaSalida, DiasAviso, FechaAplicacion
FROM         dbo.AvisosItemsCheckListExpedientes
WHERE     (FechaAplicacion = 'LB') AND (FechaLlegada - DiasAviso < GETDATE()) OR
                      (FechaAplicacion = 'SB') AND (FechaSalida - DiasAviso < GETDATE())
GO
/****** Object:  View [dbo].[AX_FacturasNoProcesadasAuxiliar]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AX_FacturasNoProcesadasAuxiliar]
AS
SELECT DISTINCT IdEnviado, NumTransmision, Usuario, idFactura, NumeroFacturaFormateado, idOficina, Fecha, Accion, Observaciones
FROM         (SELECT     t.IdEnviado, t.NumTransmision, t.Usuario, fe.Id AS idFactura, fe.NumeroFacturaFormateado, t.idOficina,
                                                  (SELECT     TOP (1) Timestamp
                                                    FROM          dbo.spintransmisionhistorico AS th
                                                    WHERE      (idTransmision = t.id)
                                                    ORDER BY Timestamp DESC) AS Fecha,
                                                  (SELECT     TOP (1) Accion
                                                    FROM          dbo.spintransmisionhistorico AS th
                                                    WHERE      (idTransmision = t.id)
                                                    ORDER BY Timestamp DESC) AS Accion,
                                                  (SELECT     TOP (1) Observaciones
                                                    FROM          dbo.spintransmisionhistorico AS th
                                                    WHERE      (idTransmision = t.id)
                                                    ORDER BY Timestamp DESC) AS Observaciones
                       FROM          dbo.spfafacturaemitida AS fe INNER JOIN
                                              dbo.spintransmision AS t ON t.IdEnviado = fe.NumeroFacturaFormateado AND fe.IdOficina = t.idOficina INNER JOIN
                                              dbo.spintransmisionhistorico AS th ON th.idTransmision = t.id
                       WHERE      (t.TipoTransmision = 'FC') AND (NOT (t.IdEnviado IN
                                                  (SELECT DISTINCT t1.IdEnviado
                                                    FROM          dbo.spintransmision AS t1 INNER JOIN
                                                                           dbo.spintransmisionhistorico AS th ON th.idTransmision = t1.id
                                                    WHERE      (t1.TipoTransmision = 'FC') AND (th.Procesado = 'true') AND (th.Accion = 'PR') AND (NOT (t1.IdEnviado IS NULL)))))) AS Facturas
GO
/****** Object:  View [dbo].[AX_FacturasNoProcesadas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AX_FacturasNoProcesadas]
AS
SELECT     dbo.AX_FacturasNoProcesadasAuxiliar.IdEnviado, dbo.AX_FacturasNoProcesadasAuxiliar.NumTransmision, dbo.AX_FacturasNoProcesadasAuxiliar.Usuario, 
                      dbo.AX_FacturasNoProcesadasAuxiliar.idFactura, dbo.AX_FacturasNoProcesadasAuxiliar.NumeroFacturaFormateado, 
                      dbo.AX_FacturasNoProcesadasAuxiliar.idOficina, dbo.AX_FacturasNoProcesadasAuxiliar.Fecha, dbo.AX_FacturasNoProcesadasAuxiliar.Accion, 
                      dbo.AX_FacturasNoProcesadasAuxiliar.Observaciones
FROM         dbo.AX_FacturasNoProcesadasAuxiliar INNER JOIN
                          (SELECT     NumeroFacturaFormateado, idOficina, MAX(Fecha) AS Fecha
                            FROM          dbo.AX_FacturasNoProcesadasAuxiliar AS AX_FacturasNoProcesadasAuxiliar_1
                            GROUP BY NumeroFacturaFormateado, idOficina) AS tabla ON 
                      tabla.NumeroFacturaFormateado = dbo.AX_FacturasNoProcesadasAuxiliar.NumeroFacturaFormateado AND 
                      tabla.idOficina = dbo.AX_FacturasNoProcesadasAuxiliar.idOficina AND tabla.Fecha = dbo.AX_FacturasNoProcesadasAuxiliar.Fecha
UNION
SELECT     '' AS idEnviado, 0 AS NumTransmision, Usuario, Id AS idFactura, NumeroFacturaFormateado, IdOficina, TimeStamp AS Fecha, 'Sin Transmision' AS Accion, 
                      '' AS Observaciones
FROM         dbo.spfafacturaemitida AS fe
WHERE     (IdOficina <> 'EPALG') AND (StatusFactura = 'E') AND (snProforma = 'false')
GO
/****** Object:  View [dbo].[AvisosExpedienteConsignacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosExpedienteConsignacion]
AS
SELECT     dbo.spopexpediente.Id, dbo.spopexpediente.IdOficina, dbo.spopexpediente.IdConsignatarioBuque, dbo.spopexpediente.IdBuque, dbo.spbmbuque.Nombre AS Buque, 
                      dbo.spopexpediente.IdCliente, dbo.spopexpediente.IdPuerto, dbo.spopexpediente.NumeroEscala, dbo.spopexpediente.TipoExpediente, 
                      dbo.spopexpediente.Id AS idFormulario, dbo.spopexpediente.Usuario, dbo.SubstringHastaFinal
                          ((SELECT     ', ' + idUsuario
                              FROM         dbo.spopexpedienteresponsables
                              WHERE     (dbo.spopexpedienteresponsables.idexpediente = dbo.spopexpediente.id) FOR XML PATH('')), 3) AS Responsable, 
                      dbo.ConvertFechaHoraString_SinSegundos(spopexpedienteatraques.FechaLlegada, spopexpedienteatraques.HoraLlegada) AS Atraque, 
                      dbo.ConvertFechaHoraString_SinSegundos(spopexpedienteatraques.FechaSalida, spopexpedienteatraques.HoraSalida) AS Desatraque, com.*, 
                      dbo.NumConceptosPendientesFacturar_EC(dbo.spopexpediente.Id) AS NumConceptosPendientesFacturar, 
                      CASE Requerimiento WHEN 'RFP' THEN 1 ELSE 0 END AS FueraPuerto, dbo.spopexpediente.Estado
FROM         dbo.spopexpediente LEFT OUTER JOIN
                      dbo.spbmpuerto ON dbo.spopexpediente.IdPuerto = dbo.spbmpuerto.Id LEFT OUTER JOIN
                      dbo.spbmbuque ON dbo.spopexpediente.IdBuque = dbo.spbmbuque.Id LEFT OUTER JOIN
                      dbo.spcoentidades ON dbo.spopexpediente.IdCliente = dbo.spcoentidades.Id AND dbo.spbmbuque.IdPropietario = dbo.spcoentidades.Id INNER JOIN
                      spopexpedienteatraques ON dbo.spopexpediente.ID = spopexpedienteatraques.IDEXPEDIENTE INNER JOIN
                      dbo.ComparativaConocimientosCabeceraEnviadosNoEnviadosFull com ON com.idExpediente = dbo.spopexpediente.id
GO
/****** Object:  UserDefinedFunction [dbo].[CASEGI_DatosBuqueCarga]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[CASEGI_DatosBuqueCarga]
(	
	-- Add the parameters for the function here
	@IdProyecto numeric (18,0),
	@Locacion varchar(50),
	@Locacion2 varchar(50),
	@Campo varchar(3),
	@FechaFormateada varchar(10)
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	
SELECT TOP 1 @IdProyecto as IdFormulario, ex.Codigo, ev.Numero, ev.Direccion
	FROM spopconocimientomercancias_proyectos cmp
	left join spopconocimientomercancias cm on cm.id = cmp.idConocMerc
	left join spopconocimiento con on con.id = cm.idConocimiento
	left join spopbooking boo on boo.id = con.idbooking
	left join spopexpedienteviajes ev on ev.id = boo.idExpedienteViaje
	left join spopexpediente ex on ex.id = ev.idExpediente
	WHERE cmp.idProyectoMaterial IN (SELECT Id FROM spprproyectosmateriales WHERE idProyecto = @IdProyecto)
		and cmp.IdEtapa IN (SELECT Id FROM spprproyectosetapas WHERE idProyecto = @IdProyecto AND Locacion IN (@Locacion,@Locacion2))
		and cmp.Campo = @Campo
		and Valor like (@FechaFormateada+ '%')
		
		
)	
GO
/****** Object:  UserDefinedFunction [dbo].[ConceptosFacturadosEntrefechas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[ConceptosFacturadosEntrefechas] 
--- Devuelve la cantidad de movimientos de Entrada o Salida de un tamaño de contenedor en una fecha determinada
(@FechaInicio varchar(8),@FechaFin varchar(8))
RETURNS TABLE
AS
RETURN
(

--select T.IdOficina, SUM (T.BaseEUR) as Base, SUM(T.ImpuestosEUR) as Impuestos from



select T.IdOficina, T.NomCliente, T.NomConcepto, replace(replace(replace(T.Descripcion,CHAR(13),' '),CHAR(10),' '),';','-') as Descripcion, replace(T.BaseEUR,'.',',') as BaseEUR, T.TipoImpuesto2 as Impuesto, replace(T.ImpuestosEUR,'.',',') as ImpuestosEUR, replace(T.BaseEUR+ T.ImpuestosEUR,'.',',')  as TotalEUR  from 
(
select fe.Id, fe.IdOficina, ent.Nombre as NomCliente, co.Nombre as NomConcepto, lfe.NomConcepto as Descripcion,lfe.ImporteCalculadoRentabilidad as BaseEUR, lfe.TipoImpuesto2, 
		CAST(CASE lfe.TipoImpuesto2 
			WHEN 'EX' THEN lfe.ImporteCalculadoRentabilidad * 0
			WHEN 'GE' THEN lfe.ImporteCalculadoRentabilidad * 0.21
			WHEN 'RE' THEN lfe.ImporteCalculadoRentabilidad * 0.10
		END as Numeric(18,2))
		AS ImpuestosEUR 
		FROM spfafacturaemitida fe 
	left join spfalineafacturaemitida lfe on lfe.IdFacturaEmitida = fe.Id 
	left join spcoentidades ent on ent.Id = fe.IdEntidadCliente
	left join spcoconcepto co on co.id = lfe.IdConcepto

where fe.FechaFactura between @FechaInicio and @FechaFin and fe.StatusFactura = 'E' ) as T

--group by T.IdOficina





)													
GO
/****** Object:  UserDefinedFunction [dbo].[GetConceptosYFacturasBL]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[GetConceptosYFacturasBL] 
(	
	-- Add the parameters for the function here
	@IdConocimiento	numeric (18,0)
)
RETURNS TABLE 
AS
RETURN 
(
	
  select  (select count(id)
      from spopconocimientoconceptos
		where IdConocimiento = @IdConocimiento) as NumConceptos,
		(select count(id)
		from spopconocimientoconceptos
		where IdConocimiento = @IdConocimiento and totalmentedesglosado = 'false' and importeprevision <> 0) as ConceptosNoDesglosados,
		(select count(id)
		from spopconocimientoconceptos
		where IdConocimiento = @IdConocimiento and afacturar = 'true' and not id in
		(select idreferencia from spfalineafacturaemitida lfe inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida 
		where lfe.tiporeferencia = 'BL' and  fe.statusfactura <> 'I' and isnull(snproforma,'false') = 'false')) as ConceptosPendFacturar,
				(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spopconocimientoconceptos c on c.id = lfe.idreferencia and lfe.tiporeferencia = 'BL'
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.IdConocimiento = @IdConocimiento and fe.statusfactura = 'I' and isnull(fe.snproforma,'false') = 'false') as NumFactBorrador,
				(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spopconocimientoconceptos c on c.id = lfe.idreferencia and lfe.tiporeferencia = 'BL'
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.IdConocimiento = @IdConocimiento and isnull(fe.snproforma,'false') = 'true') as NumProformas,
			(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spopconocimientoconceptos c on c.id = lfe.idreferencia and lfe.tiporeferencia = 'BL'
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.IdConocimiento = @IdConocimiento and fe.statusfactura <> 'I' and isnull(fe.snproforma,'false') = 'false') as NumFactEmitidas,
		(select count(distinct fr.id )
		from spfadesglosefacturarecibida df inner join spopconocimientoconceptos c on c.id = df.idreferencia and df.tiporeferencia = 'BL'
		inner join spfalineafacturarecibida lfr on lfr.id = df.idlineafactura
		inner join spfafacturarecibida fr on fr.id = lfr.idfacturarecibida
		where c.IdConocimiento = @IdConocimiento) as NumFactRecibidas
)
GO
/****** Object:  UserDefinedFunction [dbo].[GetConceptosYFacturasEXC]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[GetConceptosYFacturasEXC] 
(	
	-- Add the parameters for the function here
	@IdExpediente	numeric (18,0)
)
RETURNS TABLE 
AS
RETURN 
(
	
  select  (select count(id)
      from spopexpedienteconceptos
		where idexpediente = @IdExpediente) as NumConceptos,
		(select count(id)
		from spopexpedienteconceptos
		where idexpediente = @IdExpediente and totalmentedesglosado = 'false' and importeprevision <> 0) as ConceptosNoDesglosados,
		(select count(id)
		from spopexpedienteconceptos
		where idexpediente = @IdExpediente and afacturar = 'true' and not id in
		(select idreferencia from spfalineafacturaemitida lfe inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida 
		where lfe.tiporeferencia = 'EXC' and  fe.statusfactura <> 'I' and isnull(snproforma,'false') = 'false')) as ConceptosPendFacturar,
				(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spopexpedienteconceptos c on c.id = lfe.idreferencia and lfe.tiporeferencia = 'EXC'
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.idexpediente = @IdExpediente and fe.statusfactura = 'I' and isnull(fe.snproforma,'false') = 'false') as NumFactBorrador,
				(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spopexpedienteconceptos c on c.id = lfe.idreferencia and lfe.tiporeferencia = 'EXC'
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.idexpediente = @IdExpediente and isnull(fe.snproforma,'false') = 'true') as NumProformas,
			(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spopexpedienteconceptos c on c.id = lfe.idreferencia and lfe.tiporeferencia = 'EXC'
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.idexpediente = @IdExpediente and fe.statusfactura <> 'I' and isnull(fe.snproforma,'false') = 'false') as NumFactEmitidas,
		(select count(distinct fr.id )
		from spfadesglosefacturarecibida df inner join spopexpedienteconceptos c on c.id = df.idreferencia and df.tiporeferencia = 'EXC'
		inner join spfalineafacturarecibida lfr on lfr.id = df.idlineafactura
		inner join spfafacturarecibida fr on fr.id = lfr.idfacturarecibida
		where c.idexpediente = @IdExpediente) as NumFactRecibidas
)
GO
/****** Object:  UserDefinedFunction [dbo].[GetConceptosYFacturasEXT]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[GetConceptosYFacturasEXT] 
(	
	-- Add the parameters for the function here
	@IdExpediente	numeric (18,0)
)
RETURNS TABLE 
AS
RETURN 
(
	
  select  (select count(id)
      from spexconceptoexpediente
		where idexpediente = @IdExpediente) as NumConceptos,
		(select count(id)
		from spexconceptoexpediente
		where idexpediente = @IdExpediente and totalmentedesglosado = 'false' and importeprevision <> 0) as ConceptosNoDesglosados,
		(select count(id)
		from spexconceptoexpediente
		where idexpediente = @IdExpediente and afacturar = 'true' and not id in
		(select idreferencia from spfalineafacturaemitida lfe inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida 
		where lfe.tiporeferencia = 'EXT' and  fe.statusfactura <> 'I' and isnull(snproforma,'false') = 'false')) as ConceptosPendFacturar,
				(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spexconceptoexpediente c on c.id = lfe.idreferencia and lfe.tiporeferencia = 'EXT'
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.idexpediente = @IdExpediente and fe.statusfactura = 'I' and isnull(fe.snproforma,'false') = 'false') as NumFactBorrador,
				(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spexconceptoexpediente c on c.id = lfe.idreferencia and lfe.tiporeferencia = 'EXT'
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.idexpediente = @IdExpediente and isnull(fe.snproforma,'false') = 'true') as NumProformas,
			(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spexconceptoexpediente c on c.id = lfe.idreferencia and lfe.tiporeferencia = 'EXT'
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.idexpediente = @IdExpediente and fe.statusfactura <> 'I' and isnull(fe.snproforma,'false') = 'false') as NumFactEmitidas,
		(select count(distinct fr.id )
		from spfadesglosefacturarecibida df inner join spexconceptoexpediente c on c.id = df.idreferencia and df.tiporeferencia = 'EXT'
		inner join spfalineafacturarecibida lfr on lfr.id = df.idlineafactura
		inner join spfafacturarecibida fr on fr.id = lfr.idfacturarecibida
		where c.idexpediente = @IdExpediente) as NumFactRecibidas
)
GO
/****** Object:  UserDefinedFunction [dbo].[GetConceptosYFacturasPlantilla]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[GetConceptosYFacturasPlantilla] 
(	
	-- Add the parameters for the function here
	@IdExpediente	numeric (18,0)
)
RETURNS TABLE 
AS
RETURN 
(
	 select (select count(id)
      from spepexpedienteconceptos
		where idexpediente = @IdExpediente) as NumConceptos,
		(select count(id)
		from spepexpedienteconceptos
		where idexpediente = @IdExpediente and totalmentedesglosado = 'false' and importeprevision <> 0) as NumConceptosNoDesglosados,
		(select count(expC.id)
		from spepexpedienteconceptos expC
		inner join spepexpediente expe on expe.id = expC.idExpediente
		where expC.idexpediente = @IdExpediente and expC.afacturar = 'true' and not expC.id in
		(select idreferencia from spfalineafacturaemitida lfe inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida 
		where lfe.tiporeferencia = expe.TipoExpediente and fe.statusfactura <> 'I' and isnull(snproforma,'false') = 'false')) as NumConceptosPendientesFacturar,
		(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spepexpedienteconceptos c on c.id = lfe.idreferencia 
		inner join spepexpediente expe on expe.id = c.idexpediente and lfe.tiporeferencia = expe.TipoExpediente
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.idexpediente = @IdExpediente and fe.statusfactura = 'I' and isnull(fe.snproforma,'false') = 'false') as NumFactBorrador,
		(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spepexpedienteconceptos c on c.id = lfe.idreferencia 
		inner join spepexpediente expe on expe.id = c.idexpediente and lfe.tiporeferencia = expe.TipoExpediente
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.idexpediente = @IdExpediente and  isnull(fe.snproforma,'false') = 'true') as NumProformas,
		(select count(distinct idfacturaemitida)
		from spfalineafacturaemitida lfe inner join spepexpedienteconceptos c on c.id = lfe.idreferencia 
		inner join spepexpediente expe on expe.id = c.idexpediente and lfe.tiporeferencia = expe.TipoExpediente
		inner join spfafacturaemitida fe on fe.id = lfe.idfacturaemitida
		where c.idexpediente = @IdExpediente and fe.statusfactura <> 'I' and isnull(fe.snproforma,'false') = 'false') as NumFactEmitidas,
		(select count(distinct fr.id )
		from spfadesglosefacturarecibida df inner join spepexpedienteconceptos c on c.id = df.idreferencia 
		inner join spepexpediente expe on expe.id = c.idexpediente and df.tiporeferencia = expe.TipoExpediente		
		inner join spfalineafacturarecibida lfr on lfr.id = df.idlineafactura
		inner join spfafacturarecibida fr on fr.id = lfr.idfacturarecibida
		where c.idexpediente = @IdExpediente) as NumFactRecibidas
		
		)
GO
/****** Object:  UserDefinedFunction [dbo].[GetImporteCorrectorTABLA]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[GetImporteCorrectorTABLA] 
(
    @IdCorrector int
)
RETURNS TABLE
AS
RETURN  
(
WITH EmpCTE (Id,idCorrector,ImporteArmador,idConcepto,idDivisaArmador,SnManifestable,IdConocimiento)
AS
(
	SELECT Id,idCorrector,ImporteArmador,IdConcepto,idDivisaArmador,SnManifestable,IdConocimiento
		FROM spopconocimientoconceptos c
		where FormaPago = 'P' and snManifestable = 0 and idCorrector = @IdCorrector
	UNION ALL
--RECURSIVIDAD
	SELECT e.Id,e.idCorrector,e.ImporteArmador,e.IdConcepto,e.idDivisaArmador,e.SnManifestable,e.IdConocimiento
		FROM spopconocimientoconceptos e JOIN EmpCTE AS m
			ON e.idCorrector = (m.idCorrector - 1) AND e.idConocimiento = m.IdConocimiento AND e.IdConcepto = m.IdConcepto
)
-- Desplegar ResultSet
SELECT distinct CONVERT(varchar,SUM(EmpCTE.ImporteArmador)) + ' ' + ccon.idDivisaArmador as Importe 
FROM EmpCTE
left join spopconocimientoconceptos ccon on ccon.id = EmpCTE.Id
left join spopconocimientocorrectores cor on cor.Id = EmpCTE.idCorrector
left join spopconocimiento con on con.id = ccon.IdConocimiento
WHERE EmpCTE.idCorrector = @IdCorrector
group by ccon.idDivisaArmador

)
GO
/****** Object:  UserDefinedFunction [dbo].[GetTeusPorDia]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[GetTeusPorDia]
(	
	-- Add the parameters for the function here
	@Fecha  datetime
)
RETURNS TABLE 
AS
RETURN 
(

select fm.dia, DatosMov.idAlmacen, DatosMov.idCliente, SUM(case when Tamanyo = 20 then 1 else 2 end) as TEUS
from dbo.getFullmonth(@Fecha) fm
outer apply
(
	select expe.Matricula, cc.Tamanyo, expe.idAlmacen, ex.idCliente , dbo.ConvertFecha(Entrada.FechaMovimiento) as FechaEntrada, dbo.ConvertFecha(Salida.FechaMovimiento) as FechaSalida
	from spedExpediente expe inner join spepexpediente ex on ex.id = expe.id
	inner join spbmcontenedor cont on cont.matricula = expe.matricula
	inner join spbmcaracteristicascontenedor cc on cc.id = cont.idCaracteristica
	outer apply (select FechaMovimiento
				 from spedmovimientocontenedor
				 where idexpediente = expe.id and idTipoMovimiento = 'ENPU') as Entrada
	outer apply (select FechaMovimiento
				 from spedmovimientocontenedor
				 where idexpediente = expe.id and idTipoMovimiento = 'SAPU') as Salida	
) as DatosMov
where not DatosMov.FechaEntrada is null and DatosMov.FechaEntrada <= fm.dia and (DatosMov.FechaSalida >= fm.dia or DatosMov.FechaSalida is null)
group by fm.dia, DatosMov.idAlmacen, DatosMov.idCliente
	

)
GO
/****** Object:  UserDefinedFunction [dbo].[LogWSLlamadas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[LogWSLlamadas]
(	
                    
	-- Add the parameters for the function here
	@FechaInicio varchar(8),
	@HoraInicio varchar(6),
	@FechaFin varchar(8),
	@HoraFin varchar(6)
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
SELECT     COUNT(*) AS cuantas
FROM         dbo.spsilogLlamadasWS
WHERE     (dbo.ConvertFechaHora(FechaRegistro, HoraRegistro) >= dbo.ConvertFechaHora(@FechaInicio, @HoraInicio)) AND (dbo.ConvertFechaHora(FechaRegistro, 
HoraRegistro) <= dbo.ConvertFechaHora(@FechaFin, @HoraFin))
)
GO
/****** Object:  UserDefinedFunction [dbo].[LogWSLlamadasPorUsuario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER FUNCTION [dbo].[LogWSLlamadasPorUsuario]
(	
                    
	-- Add the parameters for the function here
	@FechaInicio varchar(8),
	@HoraInicio varchar(6),
	@FechaFin varchar(8),
	@HoraFin varchar(6)
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
select distinct usuario, COUNT(*) as cuantas
from spsilogLlamadasWS
where dbo.ConvertFechaHora(FechaRegistro,HoraRegistro) >= dbo.ConvertFechaHora(@FechaInicio,@HoraInicio)
and dbo.ConvertFechaHora(FechaRegistro,HoraRegistro) <= dbo.ConvertFechaHora(@FechaFin,@HoraFin)
group by Usuario

)
GO
/****** Object:  UserDefinedFunction [dbo].[LogWSLlamadasPorUsuarioYFormulario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



ALTER FUNCTION [dbo].[LogWSLlamadasPorUsuarioYFormulario]
(	
                    
	-- Add the parameters for the function here
	@FechaInicio varchar(8),
	@HoraInicio varchar(6),
	@FechaFin varchar(8),
	@HoraFin varchar(6)
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
select distinct Usuario,formulario, COUNT(*) as cuantas
from spsilogLlamadasWS
where dbo.ConvertFechaHora(FechaRegistro,HoraRegistro) >= dbo.ConvertFechaHora(@FechaInicio,@HoraInicio)
and dbo.ConvertFechaHora(FechaRegistro,HoraRegistro) <= dbo.ConvertFechaHora(@FechaFin,@HoraFin)
group by usuario, Formulario

)
GO
/****** Object:  View [dbo].[Acciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Acciones]
AS
SELECT        dbo.spepexpediente.Codigo, dbo.spepexpediente.idOficina, dbo.spepexpediente.Descripcion, dbo.ConvertFecha(dbo.spepexpediente.Fecha) AS FechaCreacion, 
                         ent.Nombre AS Entidad, dbo.spsiacciones.ClaseAccion, dbo.spsiacciones.TipoAccion, dbo.spsiacciones.ClasificacionAccion, 
                         dbo.ConvertFechaHoraString_SinSegundos(dbo.spsiacciones.FechaInicioAccion, dbo.spsiacciones.HoraInicioAccion) AS FechaInicioAccion, 
                         dbo.ConvertFechaHoraString_SinSegundos(dbo.spsiacciones.FechaFinAccion, dbo.spsiacciones.HoraFinAccion) AS FechaFinAccion, dbo.spsiacciones.EstadoAccion, 
                         dbo.spepexpediente.id, dbo.spepexpediente.idCliente AS IdEntidad
FROM            dbo.spepexpediente INNER JOIN
                         dbo.spsiacciones ON dbo.spepexpediente.id = dbo.spsiacciones.id LEFT OUTER JOIN
                         dbo.spcoentidades AS ent ON ent.Id = dbo.spepexpediente.idCliente
GO
/****** Object:  View [dbo].[Aeropuertos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Aeropuertos]
AS
SELECT     a.CodigoIATA, a.Nombre, a.Id, a.IdPoblacion, pob.Nombre AS Poblacion, pa.Id AS IdPais, pa.Nombre AS Pais
FROM         dbo.spbaaeropuertos AS a LEFT OUTER JOIN
                      dbo.splopoblacion AS pob ON pob.Id = a.IdPoblacion LEFT OUTER JOIN
                      dbo.splopais AS pa ON a.IdPais = pa.Id
WHERE     (a.Cancelado = 'false')
GO
/****** Object:  View [dbo].[AgAduanas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AgAduanas]
AS
SELECT     Id, Nombre, CIF
FROM         dbo.spcoentidades
WHERE     (AgenteAduanas = 'true') AND (Cancelado = 'false')
GO
/****** Object:  View [dbo].[AgenteCarga1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AgenteCarga1]
AS
SELECT     dbo.spbaagentecarga.Nombre, dbo.spbaagentecarga.CodigoIATA, dbo.spbaagentecarga.Pais, dbo.splopais.Nombre AS [Nombre País], 
                      dbo.spbaagentecarga.Poblacion, dbo.splopoblacion.Nombre AS [Nombre Población], dbo.spbaagentecarga.IdentHouseAWB, dbo.spbaagentecarga.IdentMasterAWB, 
                      dbo.spbaagentecarga.Direccion
FROM         dbo.spbaagentecarga INNER JOIN
                      dbo.splopais ON dbo.spbaagentecarga.Pais = dbo.splopais.Id INNER JOIN
                      dbo.splopoblacion ON dbo.spbaagentecarga.Poblacion = dbo.splopoblacion.Id AND dbo.splopais.Id = dbo.splopoblacion.IdPais
WHERE     (dbo.spbaagentecarga.Cancelado = 'false')
GO
/****** Object:  View [dbo].[AgenteCarga2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AgenteCarga2]
AS
SELECT     dbo.spbaagentecarga.Id, dbo.spbaagentecarga.Nombre, dbo.spbaagentecarga.CodigoIATA, dbo.spbaagentecarga.Direccion, dbo.spbaagentecarga.Pais, 
                      dbo.splopais.Nombre AS [Nombre País], dbo.spbaagentecarga.Poblacion, dbo.splopoblacion.Nombre AS [Nombre Población], dbo.spbaagentecarga.IdentHouseAWB, 
                      dbo.spbaagentecarga.IdentMasterAWB
FROM         dbo.spbaagentecarga LEFT OUTER JOIN
                      dbo.splopais ON dbo.spbaagentecarga.Pais = dbo.splopais.Id LEFT OUTER JOIN
                      dbo.splopoblacion ON dbo.spbaagentecarga.Poblacion = dbo.splopoblacion.Id AND dbo.splopais.Id = dbo.splopoblacion.IdPais
WHERE     (dbo.spbaagentecarga.Cancelado = 'false')
GO
/****** Object:  View [dbo].[Albaran]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Albaran]
AS
SELECT     Id, Codigo, CodigoExterno, Tipo, Transportista, Descripcion, Direccion, Contacto, Remitente, IdOficina, Destinatario, Expedicion
FROM         dbo.spalalbaran
GO
/****** Object:  View [dbo].[AlbaranesBuytrago]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AlbaranesBuytrago]
AS
SELECT     expe.Id, expe.Expediente, expe.EstadoMercancia, tr.CodigoEnvio, tr.Accion, tr.NombreFichero, dbo.ConvertFecha(tr.FechaCreacion) AS FechaCreacion,
                          (SELECT     COUNT(*) AS Expr1
                            FROM          dbo.spintransmisioneselectronicashistorico AS trh
                            WHERE      (idTransmision = tr.id) AND (Estado = 'EN')) AS Enviado,
                          (SELECT     COUNT(*) AS Expr1
                            FROM          dbo.spintransmisioneselectronicashistorico AS trh
                            WHERE      (idTransmision = tr.id) AND (Estado = 'RE')) AS Recibido,
                          (SELECT     COUNT(*) AS Expr1
                            FROM          dbo.spintransmisioneselectronicashistorico AS trh
                            WHERE      (idTransmision = tr.id) AND (Estado = 'AR')) AS AlbaranRecibido,
                          (SELECT     TOP (1) dbo.ConvertFecha(FechaRealEntrega) AS Expr1
                            FROM          dbo.spexpartida AS p
                            WHERE      (IdExpediente = expe.Id)) AS FechaRealEntrega
FROM         dbo.spintransmisioneselectronicas AS tr INNER JOIN
                      dbo.spexexpediente AS expe ON expe.Id = tr.idExpediente AND tr.TipoExpediente = 'EXT'
WHERE     (tr.TipoTransmision = 'AL') AND (tr.Timestamp >= GETDATE() - 15)
GO
/****** Object:  View [dbo].[AlbaranTransportes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AlbaranTransportes]
AS
SELECT     exp.id, exp.Codigo, exp.idOficina, dbo.spcoentidades.Nombre AS Cliente, exp.Fecha
FROM         dbo.sptralbaran AS expr INNER JOIN
                      dbo.spepexpediente AS exp ON exp.id = expr.id INNER JOIN
                      dbo.spcoentidades ON exp.idCliente = dbo.spcoentidades.Id
GO
/****** Object:  View [dbo].[AllOficinas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AllOficinas]
AS
SELECT     dbo.spsioficina.Id, dbo.spsioficina.Descripcion, dbo.spsioficina.Empresa, dbo.spsiempresa.Nombre, dbo.spsioficina.IdPoblacion, 
                      dbo.spsioficina.Direccion, dbo.spsioficina.Poblacion, dbo.spsioficina.Provincia, dbo.spsioficina.CP, dbo.spsioficina.Pais, dbo.spsioficina.Tf1, 
                      dbo.spsioficina.Tf2, dbo.spsioficina.Fax, dbo.spsioficina.EquivalenciaPesoVolAereo, dbo.spsioficina.EquivalenciaPesoVolMaritimo, 
                      dbo.spsioficina.EquivalenciaPesoVolTerrestre, dbo.spsioficina.EquivalenciaPesoML, dbo.spsioficina.AcronimoOficina, dbo.spsioficina.Notas, 
                      dbo.spsioficina.Email
FROM         dbo.spsioficina INNER JOIN
                      dbo.spsiempresa ON dbo.spsioficina.Empresa = dbo.spsiempresa.Id
GO
/****** Object:  View [dbo].[Almacenes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Almacenes]
AS
SELECT     Codigo, Nombre, Id
FROM         dbo.spalalmacenes
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[AplicacionConceptos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AplicacionConceptos]
AS
SELECT     ac.Id, ac.Descripcion, ac.TipoTrafico, ac.IdEntidad,
                          (SELECT     Nombre
                            FROM          dbo.spcoentidades
                            WHERE      (Id = ac.IdEntidad)) AS Nombre, ac.IdConcepto, c.CodigoConcepto, c.Nombre AS Concepto, ac.FormulaCondicion, ac.Codigo, 
                      ac.FormulaCalculadaCoste, ac.FormulaCalculadaVenta, ac.FechaEntrada, ac.FechaCaducidad, ac.GrupoOferta
FROM         dbo.spcoaplicacionconceptos AS ac INNER JOIN
                      dbo.spcoconcepto AS c ON c.id = ac.IdConcepto
GO
/****** Object:  View [dbo].[AplicaTarifas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AplicaTarifas]
AS
SELECT     Id, Descripcion,
                          (SELECT     descripcion
                            FROM          dbo.spsidescripcionidiomasvaloresaplicacion
                            WHERE      (idCVA =
                                                       (SELECT     id
                                                         FROM          dbo.spsiclavesvaloresaplicacion
                                                         WHERE      (idVA =
                                                                                    (SELECT     id
                                                                                      FROM          dbo.spsivaloresaplicacion
                                                                                      WHERE      (TipoVA = 'TipoTrafico'))) AND (clave = dbo.spcoaplicaciontarifas.TipoTrafico))) AND (idioma = 'ES')) 
                      AS 'Tipo Tráfico', Codigo
FROM         dbo.spcoaplicaciontarifas
GO
/****** Object:  View [dbo].[Arancel]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Arancel]
AS
SELECT     Id, Codigo, Capitulo, Grupo, NombreTecnico, NombreTecnicoIngles, NombreComercial, NombreComercialIngles
FROM         dbo.spbmarancel
WHERE     (Cancelado <> 1)
GO
/****** Object:  View [dbo].[ArancelyCancelados]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ArancelyCancelados]
AS
SELECT     Codigo, Capitulo, Grupo, NombreTecnico, NombreComercial, NombreTecnicoIngles, NombreComercialIngles, Cancelado, Id
FROM         dbo.spbmarancel
GO
/****** Object:  View [dbo].[AreasGeograficas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AreasGeograficas]
AS
SELECT     Id, Codigo, Descripcion
FROM         dbo.sploareageografica
WHERE     (Cancelado = 0)
GO
/****** Object:  View [dbo].[Armador]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Armador]
AS
SELECT DISTINCT ent.Id, ent.Nombre, ent.CIF, c.CodigoEntidad AS [Codigo en la Autoridad Portuaria], dir.Direccion, dir.Poblacion, dir.CP
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad LEFT OUTER JOIN
                         dbo.spsiconversiones AS c ON ent.Id = c.CodigoSP AND c.tipo = 'APB'
WHERE        (ent.Cancelado = 'false') AND (ent.armador = 'true') AND (ISNULL(dir.Cancelado, 0) = 'false')
GO
/****** Object:  View [dbo].[ArmadorContactos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ArmadorContactos]
AS
SELECT DISTINCT ent.Id, ent.Nombre, ent.CIF, cent.Nombre + ISNULL(' ' + cent.Apellidos, '') AS Contacto, cent.Email
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad LEFT OUTER JOIN
                         dbo.spcocontactosentidades AS cent ON cent.idDireccion = dir.Id
WHERE        (ent.armador = 1) AND (ISNULL(dir.Cancelado, 0) = 0) AND (ISNULL(ent.Cancelado, 0) = 0)
GO
/****** Object:  View [dbo].[Armadores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Armadores]
AS
SELECT DISTINCT Id, Nombre, CIF
FROM            dbo.spcoentidades AS ent
WHERE        (armador = 1) AND (ISNULL(Cancelado, 0) = 0)
GO
/****** Object:  View [dbo].[Articulos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Articulos]
AS
SELECT     Id, Codigo, Nombre, idCliente
FROM         dbo.spalarticulos
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[ArticulosProveedor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ArticulosProveedor]
AS
SELECT DISTINCT ap.id, ar.Nombre AS Articulo, ent.Nombre AS Proveedor, ap.Referencia AS ReferenciaArticulo, ar.Id AS IdArticulo
FROM         dbo.spalarticulosproveedores AS ap LEFT OUTER JOIN
                      dbo.spalarticulos AS ar ON ar.Id = ap.idArticulo LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ap.idProveedor
GO
/****** Object:  View [dbo].[ArticulosProvisiones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ArticulosProvisiones]
AS
SELECT     dbo.spalarticulos.Id, dbo.spalarticulos.Codigo AS Código, dbo.spalarticulostraducciones.Idioma, dbo.spalarticulostraducciones.Descripcion AS Descripción, 
                      dbo.spalarticulos.CodIMPA AS [Cod.IMPA], dbo.spalarticulos.CodISSA AS [Cod.ISSA], dbo.spcoentidades.Nombre AS Proveedor, 
                      dbo.spalarticulosproveedores.PrecioUnitarioCoste, dbo.spalarticulosproveedores.idDivisaCoste, dbo.spalarticulos.PrecioUnitario, dbo.spalarticulos.Nombre, 
                      dbo.spalarticulos.idFamilia AS Familia, dbo.spalfamilias.Codigo AS [Código Familia]
FROM         dbo.spalfamilias RIGHT OUTER JOIN
                      dbo.spalarticulos ON dbo.spalfamilias.Id = dbo.spalarticulos.idFamilia LEFT OUTER JOIN
                      dbo.spalarticulostraducciones ON dbo.spalarticulos.Id = dbo.spalarticulostraducciones.idArticulo LEFT OUTER JOIN
                      dbo.spalarticulosproveedores ON dbo.spalarticulos.Id = dbo.spalarticulosproveedores.idArticulo LEFT OUTER JOIN
                      dbo.spcoentidades ON dbo.spcoentidades.Id = dbo.spalarticulosproveedores.idProveedor
GO
/****** Object:  View [dbo].[AsientosExpediente]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AsientosExpediente]
AS
SELECT     idFormulario, Codigo, Clave, Descripcion, ClaveDesc, Ingreso, Gasto, RefExpTramite, Diferencia, Porcentaje
FROM         (SELECT     TOP (100) PERCENT expe.Id AS idFormulario, asi.Codigo, asi.Clave, asi.Descripcion, asi.Clave + ' - ' + asi.Descripcion AS ClaveDesc, 
                                              ISNULL(SUM(asi.Debe), 0) AS Gasto, ISNULL(SUM(asi.Haber), 0) AS Ingreso, expe.RefExpTramite, ISNULL(SUM(asi.Haber), 0) - ISNULL(SUM(asi.Debe), 0) 
                                              AS Diferencia, (CASE WHEN ISNULL(SUM(asi.Haber), 0) = 0 THEN 0 ELSE ISNULL(SUM(asi.Debe), 0) / (CASE WHEN ISNULL(SUM(asi.Haber), 1) 
                                              = 0 THEN 1 ELSE ISNULL(SUM(asi.Haber), 1) END) END) AS Porcentaje
                       FROM          dbo.spinAsientos AS asi INNER JOIN
                                              dbo.spopexpediente AS expe ON expe.Codigo = asi.Codigo
                       WHERE      (asi.Cuenta LIKE '6%' OR
                                              asi.Cuenta LIKE '7%') AND (asi.Clave IN
                                                  (SELECT     Clave
                                                    FROM          dbo.spinAsientosClaves))
                       GROUP BY asi.Codigo, expe.Id, asi.Clave, asi.Descripcion, expe.RefExpTramite) AS Tabla
WHERE     (NOT (Ingreso = 0)) OR
                      (NOT (Gasto = 0))
GO
/****** Object:  View [dbo].[AsientosExpedientesManuales]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AsientosExpedientesManuales]
AS
SELECT     idFormulario, Codigo, Clave, Descripcion, ClaveDesc, Ingreso, Gasto, RefExpTramite, Diferencia, Porcentaje
FROM         (SELECT     TOP (100) PERCENT expe.Id AS idFormulario, asi.Codigo, asi.Clave, asi.Descripcion, asi.Clave + ' - ' + asi.Descripcion AS ClaveDesc, 
                                              ISNULL(SUM(asi.Debe), 0) AS Gasto, ISNULL(SUM(asi.Haber), 0) AS Ingreso, expe.RefExpTramite, ISNULL(SUM(asi.Haber), 0) - ISNULL(SUM(asi.Debe), 0) 
                                              AS Diferencia, (CASE WHEN ISNULL(SUM(asi.Haber), 0) = 0 THEN 0 ELSE ISNULL(SUM(asi.Debe), 0) / (CASE WHEN ISNULL(SUM(asi.Haber), 1) 
                                              = 0 THEN 1 ELSE ISNULL(SUM(asi.Haber), 1) END) END) AS Porcentaje
                       FROM          dbo.spinAsientos AS asi INNER JOIN
                                              dbo.spopexpediente AS expe ON expe.Codigo = asi.Codigo
                       WHERE      (asi.Cuenta LIKE '6%' OR
                                              asi.Cuenta LIKE '7%') AND (asi.Diario = 'AM') AND (asi.Clave IN
                                                  (SELECT     Clave
                                                    FROM          dbo.spinAsientosClaves))
                       GROUP BY asi.Codigo, expe.Id, asi.Clave, asi.Descripcion, expe.RefExpTramite) AS Tabla
WHERE     (NOT (Ingreso = 0)) OR
                      (NOT (Gasto = 0))
GO
/****** Object:  View [dbo].[AsientosExpedientesNoManuales]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AsientosExpedientesNoManuales]
AS
SELECT     idFormulario, Codigo, Clave, Descripcion, ClaveDesc, Ingreso, Gasto, RefExpTramite, Diferencia, Porcentaje
FROM         (SELECT     TOP (100) PERCENT expe.Id AS idFormulario, asi.Codigo, asi.Clave, asi.Descripcion, asi.Clave + ' - ' + asi.Descripcion AS ClaveDesc, 
                                              ISNULL(SUM(asi.Debe), 0) AS Gasto, ISNULL(SUM(asi.Haber), 0) AS Ingreso, expe.RefExpTramite, ISNULL(SUM(asi.Haber), 0) - ISNULL(SUM(asi.Debe), 0) 
                                              AS Diferencia, (CASE WHEN ISNULL(SUM(asi.Haber), 0) = 0 THEN 0 ELSE ISNULL(SUM(asi.Debe), 0) / (CASE WHEN ISNULL(SUM(asi.Haber), 1) 
                                              = 0 THEN 1 ELSE ISNULL(SUM(asi.Haber), 1) END) END) AS Porcentaje
                       FROM          dbo.spinAsientos AS asi INNER JOIN
                                              dbo.spopexpediente AS expe ON expe.Codigo = asi.Codigo
                       WHERE      (asi.Cuenta LIKE '6%' OR
                                              asi.Cuenta LIKE '7%') AND (asi.Diario <> 'AM') AND (asi.Clave IN
                                                  (SELECT     Clave
                                                    FROM          dbo.spinAsientosClaves))
                       GROUP BY asi.Codigo, expe.Id, asi.Clave, asi.Descripcion, expe.RefExpTramite) AS Tabla
WHERE     (NOT (Ingreso = 0)) OR
                      (NOT (Gasto = 0))
GO
/****** Object:  View [dbo].[AsientosExpedientesTotales]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AsientosExpedientesTotales]
AS
SELECT     TOP (100) PERCENT expe.Id AS idFormulario, asi.Codigo, SUM(ISNULL(asi.Debe, 0)) AS Gasto, ISNULL(SUM(asi.Haber), 0) AS Ingreso, expe.RefExpTramite, 
                      ISNULL(SUM(asi.Haber), 0) - ISNULL(SUM(asi.Debe), 0) AS Diferencia, (CASE WHEN ISNULL(SUM(asi.Haber), 0) = 0 THEN 0 ELSE ISNULL(SUM(asi.Debe), 0) 
                      / (CASE WHEN ISNULL(SUM(asi.Haber), 1) = 0 THEN 1 ELSE ISNULL(SUM(asi.Haber), 1) END) END) AS Porcentaje
FROM         dbo.spinAsientos AS asi INNER JOIN
                      dbo.spopexpediente AS expe ON expe.Codigo = asi.Codigo
WHERE     (asi.Clave IN
                          (SELECT     Clave
                            FROM          dbo.spinAsientosClaves)) AND (asi.Cuenta LIKE '6%' OR
                      asi.Cuenta LIKE '7%')
GROUP BY asi.Codigo, expe.Id, expe.RefExpTramite
GO
/****** Object:  View [dbo].[AsientosExpedientesTotalesManuales]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AsientosExpedientesTotalesManuales]
AS
SELECT     TOP (100) PERCENT expe.Id AS idFormulario, asi.Codigo, SUM(ISNULL(asi.Debe, 0)) AS Ingreso, ISNULL(SUM(asi.Haber), 0) AS Gasto, expe.RefExpTramite, 
                      ISNULL(SUM(asi.Haber), 0) - ISNULL(SUM(asi.Debe), 0) AS Diferencia, (CASE WHEN ISNULL(SUM(asi.Haber), 0) = 0 THEN 0 ELSE ISNULL(SUM(asi.Debe), 0) 
                      / (CASE WHEN ISNULL(SUM(asi.Haber), 1) = 0 THEN 1 ELSE ISNULL(SUM(asi.Haber), 1) END) END) AS Porcentaje
FROM         dbo.spinAsientos AS asi INNER JOIN
                      dbo.spopexpediente AS expe ON expe.Codigo = asi.Codigo
WHERE     (asi.Diario = 'AM') AND (asi.Cuenta LIKE '6%' OR
                      asi.Cuenta LIKE '7%') AND (asi.Clave IN
                          (SELECT     Clave
                            FROM          dbo.spinAsientosClaves))
GROUP BY asi.Codigo, expe.Id, expe.RefExpTramite
GO
/****** Object:  View [dbo].[AsientosExpedientesTotalesNoManuales]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AsientosExpedientesTotalesNoManuales]
AS
SELECT     TOP (100) PERCENT expe.Id AS idFormulario, asi.Codigo, SUM(ISNULL(asi.Debe, 0)) AS Ingreso, ISNULL(SUM(asi.Haber), 0) AS Gasto, expe.RefExpTramite, 
                      ISNULL(SUM(asi.Haber), 0) - ISNULL(SUM(asi.Debe), 0) AS Diferencia, (CASE WHEN ISNULL(SUM(asi.Haber), 0) = 0 THEN 0 ELSE ISNULL(SUM(asi.Debe), 0) 
                      / (CASE WHEN ISNULL(SUM(asi.Haber), 1) = 0 THEN 1 ELSE ISNULL(SUM(asi.Haber), 1) END) END) AS Porcentaje
FROM         dbo.spinAsientos AS asi INNER JOIN
                      dbo.spopexpediente AS expe ON expe.Codigo = asi.Codigo
WHERE     (asi.Diario <> 'AM') AND (asi.Clave IN
                          (SELECT     Clave
                            FROM          dbo.spinAsientosClaves)) AND (asi.Cuenta LIKE '6%' OR
                      asi.Cuenta LIKE '7%')
GROUP BY asi.Codigo, expe.Id, expe.RefExpTramite
GO
/****** Object:  View [dbo].[AsignacionContenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AsignacionContenedores]
AS
/* UPA Ultimo presupuesto Aceptado*/ SELECT cont.matricula, um.Nombre AS Ubicacion, '' AS 'Num. Movimientos', cc.Tamanyo 'Tamaño', cc.Tipo 'Tipo', cc.PMM 'Payload', 
                      cont.FechaFabricacion 'FechaFabricacion', pm.fechamovimiento, pm.HoraMovimiento, '' 'T.Ingreso', um.ClaseContenedor 'ClaseContenedor', um.StatusCaja, 
                      UM.StatusMaquina, CONT.NumeroModeloMaquina 'Marca Motor', '' 'Fecha PTI', '' 'USDA', UPL.FechaFinReparacion 'FechaLavado', 
                      UPA_CJ.FechaAceptacion 'FechaAceptacionCaja', UPA_MQ.FechaAceptacion 'FechaAceptacionMaquina', TOTAL_OWNER.Total AS 'Costo Linea', 
                      TOTAL_CLIENTE.Total AS 'Costo Cliente', cont.Activo, cont.MotivoBloqueo, cont.IdEntidad AS IdEntidad, OBS_CJ.Notas AS ObservacionesCaja, 
                      OBS_MQ.Notas AS ObservacionesMaquina, '' EstadoFinal, cont.IdEntidadReserva AS IdEntidadReserva,  UM.IdAlmacen, UM.IdOficina
FROM         spbmcontenedor cont LEFT JOIN
                      spbmcaracteristicascontenedor cc ON 
                      cc.id = cont.idCaracteristica /*--------------------------------------------- Obtiene los datos del ultimo movimiento -------------------------------------------------------------------------*/ JOIN
                          (SELECT     c1.*, ubi.Nombre
                            FROM          spedMovimientoContenedor c1 LEFT JOIN
                                                   spbmcontenedor c ON c.matricula = c1.matriculacontenedor LEFT JOIN
                                                   spbmtipomovimiento t ON c1.idTipoMovimiento = t .tipo LEFT JOIN
                                                   spalubicaciones ubi ON ubi.id = c1.IdUbicacionDestino
                            WHERE      c1.matriculacontenedor = c.matricula AND t .Actuacion <> 'CC' AND c1.numcontadorciclo =
                                                       (SELECT     max(c2.numcontadorciclo)
                                                         FROM          spedMovimientoContenedor c2
                                                         WHERE      c2.matriculacontenedor = c.matricula) AND c1.numcontadormovimiento =
                                                       (SELECT     max(c2.numcontadormovimiento)
                                                         FROM          spedMovimientoContenedor c2
                                                         WHERE      (c2.matriculacontenedor = c.matricula AND c2.numcontadorciclo = c1.numcontadorciclo))) UM ON 
                      UM.matriculacontenedor = cont.matricula /*------------------------------------------------ Obtiene los datos del primer movimiento del ciclo actual -------------------------------------------------*/ LEFT
                       JOIN
                      spedmovimientocontenedor PM ON PM.MatriculaContenedor = UM.MatriculaContenedor AND PM.NumContadorCiclo = UM.NumContadorCiclo AND 
                      PM.NumContadorMovimiento = 1 /*------------------------------------------------ Obtiene los datos del primer movimiento del ciclo actual INSPECCIONADO  CAJA -------------------------------------------------*/ OUTER
                       apply
                          (SELECT     TOP 1 spedmovimientocontenedor.Notas
                            FROM          spedmovimientocontenedor
                            WHERE      spedmovimientocontenedor.MatriculaContenedor = UM.MatriculaContenedor AND 
                                                   spedmovimientocontenedor.NumContadorCiclo = UM.NumContadorCiclo AND spedmovimientocontenedor.SnInspeccionado = 1 AND 
                                                   spedmovimientocontenedor.Notas IS NOT NULL) 
                      OBS_CJ /*------------------------------------------------ Obtiene los datos del primer movimiento del ciclo actual INSPECCIONADO  MAQUINA -------------------------------------------------*/ OUTER 
                      apply
                          (SELECT     TOP 1 spedmovimientocontenedor.Notas
                            FROM          spedmovimientocontenedor
                            WHERE      spedmovimientocontenedor.MatriculaContenedor = UM.MatriculaContenedor AND 
                                                   spedmovimientocontenedor.NumContadorCiclo = UM.NumContadorCiclo AND spedmovimientocontenedor.SnInspeccionadoMaquina = 1 AND 
                                                   spedmovimientocontenedor.Notas IS NOT NULL) 
                      OBS_MQ /*----------------------------------------------- Ultimo Presupuesto Lavado  -----------------------------------------------------------------------------------*/ OUTER apply
                          (SELECT     TOP 1 spedPresupuestos.FechaFinReparacion, spedpresupuestos.matricula
                            FROM          spedPresupuestos LEFT JOIN
                                                   spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.ID LEFT JOIN
                                                   spedReparaciones ON spedPresupuestosReparaciones.IdReparacion = spedReparaciones.Id AND spedReparaciones.TipoReparacion IN ('LIN')
                            WHERE      spedPresupuestos.EstadoPresupuesto = 'OK' AND spedpresupuestos.matricula = cont.matricula AND 
                                                   UM.IdExpediente = spEdPresupuestos.idExpedienteContenedor
                            ORDER BY spedPresupuestos.FechaFinReparacion + spedPresupuestos.HoraFinReparacion DESC) 
                      UPL /*---------------------------------------------- Ultimo Presupuesto Aceptado CAJA ------------------------------------------------------------------------------*/ OUTER apply
                          (SELECT     TOP 1 spedPresupuestos.FechaAceptacion, spedpresupuestos.matricula
                            FROM          spedPresupuestos LEFT JOIN
                                                   spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.Id LEFT JOIN
                                                   spedReparaciones ON spedPresupuestosReparaciones.IdReparacion = spedReparaciones.Id AND spedReparaciones.TipoPresupuesto IN ('CJ')
                            WHERE      spedPresupuestos.FechaAceptacion IS NOT NULL AND spedpresupuestos.matricula = cont.matricula AND 
                                                   UM.IdExpediente = spedPresupuestos.idExpedienteContenedor AND spedPresupuestos.EstadoPresupuesto <> 'RE'
                            ORDER BY spedPresupuestos.FechaAceptacion + spedPresupuestos.HoraAceptacion DESC) 
                      UPA_CJ /*---------------------------------------------- Ultimo Presupuesto Aceptado MAQUINA  ------------------------------------------------------------------------------*/ OUTER apply
                          (SELECT     TOP 1 spedPresupuestos.FechaAceptacion, spedpresupuestos.matricula
                            FROM          spedPresupuestos LEFT JOIN
                                                   spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.ID LEFT JOIN
                                                   spedReparaciones ON spedPresupuestosReparaciones.IdReparacion = spedReparaciones.ID AND spedReparaciones.TipoPresupuesto IN ('MQ')
                            WHERE      spedPresupuestos.FechaAceptacion IS NOT NULL AND spedpresupuestos.matricula = cont.matricula AND 
                                                   UM.IdExpediente = spedPresupuestos.idExpedienteContenedor AND spedPresupuestos.EstadoPresupuesto <> 'RE'
                            ORDER BY spedPresupuestos.FechaAceptacion + spedPresupuestos.HoraAceptacion DESC) 
                      UPA_MQ /*---------------------------------------------- Coste OWNER  ------------------------------------------------------------------------------*/ OUTER apply
                          (SELECT     sum(spedpresupuestosreparaciones.total) AS TOTAL
                            FROM          spedPresupuestos LEFT JOIN
                                                   spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.ID
                            WHERE      spedPresupuestos.EstadoPresupuesto <> 'RE' AND SPEDPRESUPUESTOSREPARACIONES.AccountOF = 'O' AND 
                                                   spedpresupuestos.matricula = cont.matricula AND UM.IdExpediente = spedPresupuestos.idExpedienteContenedor
                            GROUP BY spedpresupuestos.Matricula) TOTAL_OWNER /*---------------------------------------------- Resto Coste   ------------------------------------------------------------------------------*/ OUTER 
                      apply
                          (SELECT     sum(spedpresupuestosreparaciones.total) AS TOTAL
                            FROM          spedPresupuestos LEFT JOIN
                                                   spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.ID
                            WHERE      spedPresupuestos.EstadoPresupuesto <> 'RE' AND spedPresupuestosReparaciones.AccountOF <> 'O' AND 
                                                   spedpresupuestos.matricula = cont.matricula AND UM.IdExpediente = spedPresupuestos.idExpedienteContenedor
                            GROUP BY spedpresupuestos.Matricula) TOTAL_CLIENTE
GO
/****** Object:  View [dbo].[Auditoria]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Auditoria]
AS
SELECT     id, Nombre, Observaciones, Usuario, Timestamp
FROM         dbo.spquauditoria
GO
/****** Object:  View [dbo].[AutoridadPortuaria]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AutoridadPortuaria]
AS
SELECT     Id, Nombre, CIF, Tf1, Tf2, Fax
FROM         dbo.spcoentidades
WHERE     (autoridadPortuaria = 'true') AND (Cancelado = 'false')
GO
/****** Object:  View [dbo].[Avisos1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Avisos1]
AS
SELECT     Id, CodigoAviso, Aviso
FROM         dbo.spsiavisos
GO
/****** Object:  View [dbo].[AvisosAcciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosAcciones]
AS
SELECT DISTINCT 
                         AC.id AS idFormulario, ep.Codigo, ep.idOficina, ac.ClaseAccion, ac.TipoAccion AS ClasificacionAccion, ac.ClasificacionAccion AS [SubClasificacion/Causa], 
                         ac.SubClasificacionAccion AS SubClasificacionAccion2, ac.EstadoAccion, ep.Descripcion, ep.idCliente AS idEntidad, ent.nombre AS Entidad, ent.tf1, c.TlfTrabajo AS tf2,
                          '' AS Telefono, ac.direccionEntidad AS Direccion, dent.cp,
                             (SELECT        Nombre
                               FROM            splopoblacion
                               WHERE        id = dent.poblacion) AS Ciudad, c.nombre AS NomContacto, c.Apellidos AS ApellidoContacto, us.nombre AS Responsable, 
                         dbo.ConvertFechaHora(ac.FechaInicioAccion, ac.HoraInicioAccion) AS FechaInicioAccion, dbo.ConvertFechaHora(ac.FechaFinAccion, ac.HoraFinAccion) 
                         AS FechaFinAccion, ac.FechaSeguimiento, ac.idUsuario, ac.idOportunidad, ep.Observaciones, ac.TipoEntidadActuaComo, IsNull(ac.snRequiereSeguimiento, 0) 
                         AS RequiereSeguimiento, IsNull(ac.snCausaNoConformidad, 0) AS CausaNoConformidad, IsNull(ac.snCausaRetraso, 0) AS CausaRetraso, IsNull(ac.snFacturable, 0) 
                         AS Facturable, ac.idNormaEmpresa AS NormaEmpresa, ac.Gravedad, ac.OrigenAccion, ac.Causa, ac.Correcciones, ac.OrigenCausa,
                             (SELECT        TOP 1 TipoReferenciaPadre
                               FROM            spepexpedientesrelacionados
                               WHERE        idReferenciaRelacionada = ac.id AND tiporeferenciarelacionada = 'AC' AND tipoReferenciaPadre <> 'AC') AS DocumentoOrigen,
                             (SELECT        TOP 1 expe.Codigo
                               FROM            spepexpedientesrelacionados exper INNER JOIN
                                                         spepexpediente expe ON expe.id = exper.idReferenciaRelacionada
                               WHERE        idReferenciaPadre = ac.id AND tipoReferenciaPadre = 'AC' AND tiporeferenciarelacionada = 'AT') AS Albaran, ac.Conclusiones, 
                         dbo.SubstringHastaFinal
                             ((SELECT        char(10) + u.Nombre + IsNull(' ' + u.Apellidos, '')
                                 FROM            spsiaccionesusuarios au LEFT JOIN
                                                          spsiusuario u ON u.Id = au.idUsuario
                                 WHERE        au.IdAccion = ac.Id FOR XML PATH('')), 2) AS Usuario
FROM            spsiacciones ac INNER JOIN
                         spepexpediente ep ON ep.id = ac.id LEFT JOIN
                         spepexpedienteresponsables acp ON acp.idExpediente = ac.id LEFT JOIN
                         spcoentidades ent ON ent.id = ep.idCliente LEFT JOIN
                         spcodireccionesentidades dent ON dent.identidad = ent.id AND principalfiscal = 1 LEFT JOIN
                         spcocontactosentidades c ON c.id = ac.idContacto LEFT JOIN
                         spsiusuario us ON us.id = ac.idUsuario
GO
/****** Object:  View [dbo].[AvisosAlbaranTransporte]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosAlbaranTransporte]
AS
SELECT     alb.id, alb.id AS idFormulario, entC.Nombre AS Cliente, alb.ReferenciaCliente, alb.TipoTraficoTransporte, dbo.ConvertFechaHoraString_SinSegundos(alb.FCarga, 
                      alb.HCarga) AS FechaTransporte, alb.FCarga, alb.HCarga, entCN.Nombre AS CompaniaNaviera, cc.Tipo AS TipoContenedor, cc.Tamanyo AS TamanyoContenedor, 
                      alb.RefCarga, b.Nombre AS Buque, pobO.Nombre AS PoblacionOrigen, pobD.Nombre AS PoblacionDestino, pob.Nombre AS Poblacion, alb.ContactoDestino, 
                      alb.Telefono, alb.Mercancia, alb.PesoReal, alb.PesoAlbaran, alb.SnADR, alb.Direccion, alb.Booking, alb.Escala, alb.Viaje, alb.NumDeclaracionSumaria, 
                      alb.MatriculaContenedor, alb.PrecintoContenedor, alb.RefExportador, dest.Destino, entLR.Nombre AS DepotTerminalRecogida, 
                      entLE.Nombre AS DepotTerminalEntrega, alb.ObsAlbaran, alb.idConjunto, alb.idTractora, alb.EmailContactoPortic, per.eMail AS EmailConductor
FROM         dbo.sptralbaran AS alb INNER JOIN
                      dbo.spepexpediente AS expe ON expe.id = alb.id LEFT OUTER JOIN
                      dbo.spcoentidades AS entC ON entC.Id = expe.idCliente LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS cc ON cc.Id = alb.idCaracteristicaContenedor LEFT OUTER JOIN
                      dbo.spcoentidades AS entCN ON entCN.Id = alb.IdCompania LEFT OUTER JOIN
                      dbo.spbmbuque AS b ON b.Id = alb.IdBuque LEFT OUTER JOIN
                      dbo.splopoblacion AS pobO ON pobO.Id = alb.IdPobOrigen LEFT OUTER JOIN
                      dbo.splopoblacion AS pobD ON pobD.Id = alb.IdPobDestino LEFT OUTER JOIN
                      dbo.splopoblacion AS pob ON pob.Id = alb.idPoblacion LEFT OUTER JOIN
                      dbo.sptrdestinos AS dest ON dest.Id = alb.idDestino LEFT OUTER JOIN
                      dbo.spcoentidades AS entLR ON entLR.Id = alb.idLugarRecogida LEFT OUTER JOIN
                      dbo.spcoentidades AS entLE ON entLE.Id = alb.idLugarEntrega LEFT OUTER JOIN
                      dbo.spsiusuario AS per ON per.Id = alb.idPersonal
GO
/****** Object:  View [dbo].[AvisosAlbaranTransportesIncidencias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosAlbaranTransportesIncidencias]
AS
SELECT     alb.id, alb.id AS idFormulario, entC.Nombre AS Cliente, alb.ReferenciaCliente, alb.TipoTraficoTransporte, dbo.ConvertFechaHoraString_SinSegundos(alb.FCarga, 
                      alb.HCarga) AS FechaTransporte, alb.FCarga, alb.HCarga, entCN.Nombre AS CompaniaNaviera, cc.Tipo AS TipoContenedor, cc.Tamanyo AS TamanyoContenedor, 
                      alb.RefCarga, b.Nombre AS Buque, pobO.Nombre AS PoblacionOrigen, pobD.Nombre AS PoblacionDestino, pob.Nombre AS Poblacion, alb.ContactoDestino, 
                      alb.Telefono, alb.Mercancia, alb.PesoReal, alb.PesoAlbaran, alb.SnADR, alb.Direccion, alb.Booking, alb.Escala, alb.Viaje, alb.NumDeclaracionSumaria, 
                      alb.MatriculaContenedor, alb.PrecintoContenedor, alb.RefExportador, dest.Destino, entLR.Nombre AS DepotTerminalRecogida, 
                      entLE.Nombre AS DepotTerminalEntrega, alb.ObsAlbaran, alb.idConjunto, alb.idTractora, alb.EmailContactoPortic
FROM         dbo.sptralbaran AS alb INNER JOIN
                      dbo.spepexpediente AS expe ON expe.id = alb.id INNER JOIN
                      dbo.spepexpedientesrelacionados AS expr ON expr.idReferenciaPadre = alb.id AND expr.TipoReferenciaPadre = 'AT' INNER JOIN
                      dbo.spsiacciones AS ac ON ac.id = expr.IdReferenciaRelacionada AND expr.TipoReferenciaRelacionada = 'AC' LEFT OUTER JOIN
                      dbo.spcoentidades AS entC ON entC.Id = expe.idCliente LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS cc ON cc.Id = alb.idCaracteristicaContenedor LEFT OUTER JOIN
                      dbo.spcoentidades AS entCN ON entCN.Id = alb.IdCompania LEFT OUTER JOIN
                      dbo.spbmbuque AS b ON b.Id = alb.IdBuque LEFT OUTER JOIN
                      dbo.splopoblacion AS pobO ON pobO.Id = alb.IdPobOrigen LEFT OUTER JOIN
                      dbo.splopoblacion AS pobD ON pobD.Id = alb.IdPobDestino LEFT OUTER JOIN
                      dbo.splopoblacion AS pob ON pob.Id = alb.idPoblacion LEFT OUTER JOIN
                      dbo.sptrdestinos AS dest ON dest.Id = alb.idDestino LEFT OUTER JOIN
                      dbo.spcoentidades AS entLR ON entLR.Id = alb.idLugarRecogida LEFT OUTER JOIN
                      dbo.spcoentidades AS entLE ON entLE.Id = alb.idLugarEntrega
WHERE     (ac.ClaseAccion = 'CA') AND (ac.TipoAccion = 'IN')
GO
/****** Object:  View [dbo].[AvisosBooking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosBooking]
AS
SELECT     Id, IdOficina, IdExpedienteViaje, IdExpedienteViajeSecundario, IdCliente, NombreCliente, Trafico, IdLineaTrafico, PoblOrigen, PoblCarga, PoblTransbordo, 
                      PoblDescarga, PoblDestino, IdCorresponsal, IdConsigMercanciaExport, IdConsigMercanciaImport, IdShipper, IdConsignee, NumBookingArmador, NumBLArmador, 
                      TextoShipper, TextoConsignee, Incoterm, IdOferta, Usuario, TimeStamp, RefCliente, PoblSigTransbordo, NumeroOTs, FechaReserva, FechaLocalizacion, 
                      Id AS IdFormulario
FROM         dbo.spopbooking
GO
/****** Object:  View [dbo].[AvisosConceptosExpedienteConsignacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosConceptosExpedienteConsignacion]
AS
SELECT     ex.Id, ex.Id AS IdFormulario, ex.Codigo, ex.IdOficina, ex.IdPuerto, ex.TipoExpediente, ex.TipoOperacion, ex.Estado, exc.DescripcionConcepto, exc.ImportePrevision, 
                      exc.IdDivisaPrevision, exc.ImporteCoste, exc.ImporteVenta, exc.IdDivisaVenta, exc.ImporteArmador, exc.IdDivisaArmador, exc.AFacturar, exc.Facturado, 
                      ea.FechaLlegada, dbo.ConvertFecha(ea.FechaLlegada) AS FechaLlegadaDMA
FROM         dbo.spopexpediente AS ex LEFT OUTER JOIN
                      dbo.spopexpedienteatraques AS ea ON ex.Id = ea.IdExpediente AND ea.Id =
                          (SELECT     MIN(Id) AS Expr1
                            FROM          dbo.spopexpedienteatraques
                            WHERE      (IdExpediente = ea.IdExpediente)) LEFT OUTER JOIN
                      dbo.spopexpedienteconceptos AS exc ON ex.Id = exc.IdExpediente
WHERE     (ex.Cancelado = 0)
GO
/****** Object:  View [dbo].[AvisosConceptosExpedienteFacturadosAfacturar]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosConceptosExpedienteFacturadosAfacturar]
AS
SELECT     Id, idFormulario, Expediente, ImporteVenta, DescConcepto, AFacturar, Facturado, NumFacturas
FROM         (SELECT     ce.Id, ce.IdExpediente AS idFormulario, ex.Expediente, ce.ImporteVenta, ce.DescConcepto, ce.AFacturar, ce.Facturado, ISNULL
                                                  ((SELECT     COUNT(*) AS Expr1
                                                      FROM         dbo.spfafacturaemitida AS fe INNER JOIN
                                                                            dbo.spfalineafacturaemitida AS lfe ON lfe.IdFacturaEmitida = fe.Id
                                                      WHERE     (lfe.TipoReferencia = 'EXT') AND (lfe.idReferencia = ce.Id)
                                                      GROUP BY lfe.idReferencia), 0) AS NumFacturas
                       FROM          dbo.spexconceptoexpediente AS ce INNER JOIN
                                              dbo.spexexpediente AS ex ON ex.Id = ce.IdExpediente) AS Conceptos
WHERE     (AFacturar = 'true') AND (Facturado = 'true') OR
                      (AFacturar = 'true') AND (ImporteVenta = 0) OR
                      (Facturado = 'true') AND (NumFacturas = 0) OR
                      (AFacturar = 'false') AND (Facturado = 'false') AND (ImporteVenta <> 0)
GO
/****** Object:  View [dbo].[AvisosConceptosExpedienteTransito]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosConceptosExpedienteTransito]
AS
SELECT     ex.Id, ex.Id AS IdFormulario, ex.Expediente AS Codigo, ex.IdOficina, ex.FechaInicio, dbo.ConvertFecha(ex.FechaInicio) AS FechaInicioDMA, ex.Estado, ex.TipoTrafico, 
                      ex.Responsable, exc.DescConcepto, exc.ImportePrevision, exc.IdDivisaPrevision, exc.ImporteCoste, exc.ImporteVenta, exc.IdDivisaVenta
FROM         dbo.spexexpediente AS ex LEFT OUTER JOIN
                      dbo.spexconceptoexpediente AS exc ON ex.Id = exc.IdExpediente
GO
/****** Object:  View [dbo].[AvisosConceptosTramitesFacturasRecibidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosConceptosTramitesFacturasRecibidas]
AS
SELECT     chkrel.id, expe.Id AS idFormulario, expe.Codigo AS Expediente, expe.IdOficina, expe.NumeroEscala, expe.PrefijoNumeroEscala, puer.IdPoblacion AS PoblPuerto, 
                      puer.Descripcion AS DescPuerto, chk.Descripcion, c.Nombre AS Concepto, expec.ImporteVenta, expec.IdDivisaVenta, chk.DescripcionCapitan, 
                      pchk.Descripcion AS Periodicidad, chk.snServicioBuque AS ServicioBuque, buq.Nombre AS Buque, entP.Nombre AS Proveedor, chk.ReferenciaCliente, 
                      chk.EstadoTramite, chk.GrupoFacturacion, chk.Fecha AS FechaTramite, fr.TotalFactura AS TotalFacturaProveedor, fr.IdMoneda AS DivisaFacturaProveedor, 
                      fr.Numero AS FacturaProveedor, fr.FechaFactura AS FechaFacturaProveedor, fr.Pagado AS FacturaPagada, chkrel.Usuario, chkrel.Timestamp, 
                      expec.ImportePrevision
FROM         dbo.spopexpedientechecklistadjrelacionados AS chkrel INNER JOIN
                      dbo.spopexpedientechecklist AS chk ON chkrel.idexpedientechecklist = chk.Id INNER JOIN
                      dbo.spopexpediente AS expe ON expe.Id = chk.IdExpediente INNER JOIN
                      dbo.spopperiodicidadchecklist AS pchk ON pchk.id = chk.idPeriodicidad LEFT OUTER JOIN
                      dbo.spcoentidades AS entP ON entP.Id = chk.idProveedor LEFT OUTER JOIN
                      dbo.spbmbuque AS buq ON buq.Id = expe.IdBuque LEFT OUTER JOIN
                      dbo.spcoentidades AS entCB ON entCB.Id = expe.IdConsignatarioBuque LEFT OUTER JOIN
                      dbo.spbmpuerto AS puer ON puer.Id = expe.IdPuerto LEFT OUTER JOIN
                      dbo.spopexpedienteconceptos AS expec ON expec.Id = chkrel.idReferencia LEFT OUTER JOIN
                      dbo.spcoconcepto AS c ON c.id = expec.idConcepto LEFT OUTER JOIN
                      dbo.spfadesglosefacturarecibida AS dfr ON dfr.IdReferencia = chkrel.idReferencia AND dfr.TipoReferencia = 'EXC' LEFT OUTER JOIN
                      dbo.spfalineafacturarecibida AS lfr ON dfr.IdLineaFactura = lfr.Id LEFT OUTER JOIN
                      dbo.spfafacturarecibida AS fr ON lfr.IdFacturaRecibida = fr.Id
WHERE     (chkrel.TipoReferencia = 'C')
GO
/****** Object:  View [dbo].[AvisosConfigurados]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosConfigurados]
AS
SELECT     ac.id, a.CodigoAviso, a.Aviso, ac.Descripcion, ac.FechaProximoAviso, ac.Frecuencia, ac.FrecuenciaUT, ac.TextoAviso
FROM         dbo.spsiavisosconfigurados AS ac INNER JOIN
                      dbo.spsiavisos AS a ON a.Id = ac.idAviso
GO
/****** Object:  View [dbo].[AvisosContenedorConocimiento]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosContenedorConocimiento]
AS
SELECT     dbo.spopconocimiento.Id, dbo.spopconocimientocontenedores.Id AS IdContenedor, dbo.spopconocimientocontenedores.idContenedorBooking, 
                      dbo.spopconocimientocontenedores.IdTipoTamanyoContenedor, dbo.spopconocimientocontenedores.TamanyoContenedor, 
                      dbo.spopconocimientocontenedores.TipoContenedor, dbo.spopconocimientocontenedores.ISO, dbo.spopconocimientocontenedores.Matriculacontenedor, 
                      dbo.spopconocimientocontenedores.FechaEntregaCont, dbo.spopconocimientocontenedores.HoraDevolucion, dbo.spopconocimiento.Id AS IdFormulario, 
                      dbo.spopconocimiento.Usuario
FROM         dbo.spopconocimientocontenedores LEFT OUTER JOIN
                      dbo.spopconocimiento ON dbo.spopconocimiento.Id = dbo.spopconocimientocontenedores.IdConocimiento
GO
/****** Object:  View [dbo].[AvisosDesgloseFacturasSinConceptos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosDesgloseFacturasSinConceptos]
AS
SELECT     fr.Id, fr.IdFormaPago, fr.IdEntidadProveedor, fr.NumeroFactura, fr.FechaEntrada, fr.FechaFactura, fr.FechaVencimiento, fr.FechaContabFactura, 
                      fr.TotalPagadoEUR, fr.Observaciones, fr.Anotaciones, fr.Cambio, fr.IdMoneda, fr.StatusFactura, fr.TipoFactura, fr.TotalFactura, fr.IdOficina, fr.Pagado, 
                      fr.Retencion, fr.IdSerie, fr.Numero, fr.AmbitoFactura, fr.snComision, fr.idImpuesto, fr.Usuario, fr.TimeStamp, dfr.Id AS idFormulario, lfr.Id AS Expr1, 
                      lfr.IdFacturaRecibida, lfr.IdConcepto, lfr.NomConcepto, lfr.Importe, lfr.Contravalor, lfr.CriterioDesglose, lfr.TipoImpuesto2, lfr.Orden, lfr.Usuario AS Expr2,
                       lfr.TimeStamp AS Expr3
FROM         dbo.spfadesglosefacturarecibida AS dfr INNER JOIN
                      dbo.spfalineafacturarecibida AS lfr ON lfr.Id = dfr.IdLineaFactura INNER JOIN
                      dbo.spfafacturarecibida AS fr ON fr.Id = lfr.IdFacturaRecibida
WHERE     (dfr.IdReferencia NOT IN
                          (SELECT     Id
                            FROM          dbo.spopexpedienteconceptos))
GO
/****** Object:  View [dbo].[AvisosEmailsEntidades]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosEmailsEntidades]
AS
SELECT     ea.id AS idEmail, ent.Id AS IdFormulario, ent.Id, ent.IdFormaPago, ent.Nombre, ent.CIF, ent.Tf1, ent.Tf2, ent.Fax, ent.EquivalenciaPesoVolAereo, 
                      ent.EquivalenciaPesoVolMaritimo, ent.EquivalenciaPesoVolTerrestre, ent.EquivalenciaPesoML, ent.Email, ent.MargenCliente, ent.DiaPago, ent.PaginaWeb, 
                      ent.Usuario, ent.TimeStamp, ent.Cancelado, ent.Observaciones, ent.TextoDocumentos, ent.RequiereControlEnvioDocumentacion, ent.Cliente, ent.Proveedor, 
                      ent.Transportista, ent.AgenteAduanas, ent.RemitenteDestinatario, ent.Corresponsal, ent.OtroTipo, ent.EstadoCuenta, ent.FormaJuridica, ent.NombreLegal, 
                      ent.TipoIdentificacion, ent.DuenoCuenta, ent.Facturacion, ent.LimiteCredito, ent.Divisa, ent.Industria, ent.Fuente, ent.CuentaContableCompra, ent.CuentaContableVenta, 
                      ent.CuentaBancaria, ent.Banco, ent.Oficina, ent.idPoblCuentaBancaria, ent.NumSwift, ent.NumEmpleados, ent.autoridadPortuaria, ent.terminal, ent.armador, 
                      ent.estibador, ent.agenteConsignatario, ent.logo, ent.InfoAdicional, ent.InicioVacacionesDia, ent.FinVacacionesDia, ent.PeriodicidadFacturacion, ent.ControlRiesgo, 
                      ent.PorcentajeAviso, ent.InicializacionSaldo, ent.InicializacionSaldo_SuFavor, ent.InicioVacacionesMes, ent.FinVacacionesMes, ent.aplicaretencion, ent.Depot, 
                      ent.Dia2Pago, ent.Dia3Pago, ent.DiaCobro, ent.Dia2Cobro, ent.Dia3Cobro, ent.IdFormaCobro, ent.EmpresaGrupo, ent.Transitario, ent.ClientePotencial, 
                      ent.EnvioElectronico, ent.Idioma, ent.Retencion, ent.CertificadoRetencion, ent.Leasing, ent.ObserFactu, ent.idAgenteAduanas, ent.idClienteFacturacion, 
                      ent.FechaCertificadoRetencion, ent.ScacCode, ent.CodigoEORI, ent.GastosTransferencia, ent.AltaVIES, ent.FechaActVIES, ent.NumeroDirecciones, ent.Latitud, 
                      ent.Longitud, ent.TiempoEspera, ent.UnidadNegocioRble, ent.TipoTransportistaProveedor, ent.idGrupoEntidades, ent.logoFactura, ent.ObsFacturacion, 
                      ent.ObsOperacion, ent.MOVISAT_Actualizacion, ent.InteresDeMora, ent.ContadorFactProveedor, ent.SerieFactProveedor, ent.HoraApertura, ent.HoraCierre, 
                      ent.FechaAlta, ent.FechaCancelacion, ent.SnEnviarMailDUA, ea.id AS Expr1, ea.CuentaConfigurada, ea.idOficina, ea.DirectorioAdjunto, ea.DirectorioVirtual, 
                      ea.TipoReferenciaRelacionada, ea.IdReferenciaRelacionada, ea.CodigoReferenciaRelacionada, ea.Asunto, ea.De, ea.Para, ea.CC, ea.CCO, ea.Cuerpo, ea.Fichero, 
                      ea.Asignado, ea.Usuario AS Expr2, ea.Timestamp AS Expr3
FROM         dbo.spsiEmailsFicherosAdjuntos AS ea INNER JOIN
                      dbo.spcoentidades AS ent ON ea.IdReferenciaRelacionada = ent.Id AND ea.TipoReferenciaRelacionada = 'EN'
GO
/****** Object:  View [dbo].[AvisosEmailsExpedienteConsignacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosEmailsExpedienteConsignacion]
AS
SELECT     ea.id AS idEmail, exc.Id AS idFormulario, exc.Codigo AS CodigoExpediente, b.Nombre AS Buque, p.Descripcion AS Puerto, dbo.ConvertFechaHora(exc.FechaLlegada, 
                      exc.HoraLlegada) AS FechaHoraLlegada, ea.id, ea.CuentaConfigurada, ea.idOficina, ea.DirectorioAdjunto, ea.DirectorioVirtual, ea.TipoReferenciaRelacionada, 
                      ea.IdReferenciaRelacionada, ea.CodigoReferenciaRelacionada, ea.Asunto, ea.De, ea.Para, ea.CC, ea.CCO, ea.Cuerpo, ea.Fichero, ea.Asignado, ea.Usuario, 
                      ea.Timestamp, exc.Id AS Expr1, exc.Codigo, exc.IdConsignatarioBuque, exc.IdOficina AS Expr2, exc.IdBuque, exc.IdPuerto, exc.IdCliente, exc.PrefijoNumeroEscala, 
                      exc.NumeroEscala, exc.IdPuertoInicioRuta, exc.IdPuertoAnterior, exc.IdServicioLlegada, exc.IdServicioSalida, exc.Observaciones, exc.NombreCapitan, 
                      exc.CargaMMPP, exc.DescargaMMPP, exc.MMPPABordo, exc.NingunaMMPP, exc.MovimientoTransporteEntrada, exc.MovimientoTransporteSalida, 
                      exc.RegimenSimplificado, exc.ProcedTransComunitarioSimplificadoEntrada, exc.ProcedTransComunitarioSimplificadoSalida, exc.CodigoServicioRegularEntrada, 
                      exc.CodigoServicioRegularSalida, exc.ServicioRegular, exc.PropositoEscala, exc.Usuario AS Expr3, exc.Timestamp AS Expr4, exc.Cancelado, 
                      exc.ObservacionesProforma, exc.IdCheckList, exc.TipoExpediente, exc.TipoOperacion, exc.Estado, exc.idProforma, exc.snAcuerdoRetiradaResiduos, 
                      exc.AcuerdoRetiradaResiduosDescripcion, exc.AcuerdoRetiradaResiduosEmpresa, exc.AcuerdoRetiradaResiduosPuerto, 
                      exc.AcuerdoRetiradaResiduosDescripcionSolido, exc.AcuerdoRetiradaResiduosEmpresaSolido, exc.AcuerdoRetiradaResiduosPuertoSolido, exc.snConvenioCalidad, 
                      exc.snGreenAward, exc.snInspeccionMOUPSC, exc.snMedidasProteccion, exc.MedidasProteccionObservaciones, exc.snCertificadoProteccionABordo, 
                      exc.FechaVencimientoCertificado, exc.ObservacionesEscala, exc.snTransportaCargaCrudo, exc.snBuqDobleCasco, exc.snDeclCapitanBuque, exc.snBuqAutCabotaje, 
                      exc.snBuqAfectNavMaritima, exc.snProcedimientosSeguridad, exc.ProcedimientosSeguridadDetalles, exc.NivelProteccion, exc.NivelProteccionObservaciones, 
                      exc.NumDeclSumariaImp, exc.CodigoArmador, exc.CodigoComercial, exc.NumDeclSumariaExp, exc.ExpedidorCertificado, exc.snEntradaFestivos, exc.Concierto, 
                      exc.snIGSPresentado, exc.IGSFecha, exc.CodigoImport, exc.CodigoExport, exc.IdLinea, exc.UsuarioCierreImport, exc.UsuarioCierreExport, 
                      exc.UsuarioCierreOperaciones, exc.UsuarioCierreDefinitivo, exc.FechaCierreImport, exc.FechaCierreExport, exc.FechaCierreOperaciones, exc.FechaCierreDefinitivo, 
                      exc.NConocimientoImport, exc.NConocimientoExport, exc.ContabilizarComo, exc.DespachoTiempoFecha, exc.DespachoTiempoDias, 
                      exc.DespachoTiempoPuertoCapitania, exc.snEnviarISPS, exc.IdPaisEntradaCEE, exc.snTransportaExplosivos, exc.snExentoRecogida, exc.snIAO, 
                      exc.CondicionesTanquesCarga, exc.CondicionesTanquesLastre, exc.NaturalezaCargaEntrada, exc.NaturalezaCargaSalida, exc.ReconocimientoLabores, 
                      exc.CapitanSalidaNombre, exc.CapitanSalidaNacionalidad, exc.snDespachoSalida, exc.BudgetCompra, exc.BudgetVenta, exc.FechaEstimadaSalidaPuertoAnterior, 
                      exc.RegimenSimplificadoExport, exc.RefExpTramite, exc.snNumeroEscalaBloqueado, exc.UltimoPuertoInspeccionMOU, exc.FechaInspeccionMOU, 
                      exc.NumeroDeficienciasInspeccionMOU, exc.FechaLlegada, exc.HoraLlegada, exc.FechaAlta, exc.FechaCancelacion, exc.ContactoNombre, exc.idClienteComercial, 
                      exc.EmailContacto, exc.DireccionCliente, b.Id AS Expr5, b.IdPropietario, b.Propietario, b.IdOperador, b.Operador, b.Nombre, b.AnyoConstruccion, b.Calado, 
                      b.Cancelado AS Expr6, b.Capacidad, b.Clasificacion, b.ClubPI, b.Eslora, b.Servicio, b.Manga, b.NombresAnteriores, b.NumLloydsISO, b.DistintivoLlamada, 
                      b.PuertoMatricula, b.Pais, b.TonelajeBruto, b.TonelajeNeto, b.Tripulantes, b.UMCalado, b.UMCapacidad, b.UMEslora, b.UMManga, b.UMPesoMuerto, 
                      b.UMTonelajeBruto, b.UMTonelajeNeto, b.UMVelocidad, b.Velocidad, b.Usuario AS Expr7, b.Timestamp AS Expr8, b.PesoMuerto, b.TipoBuque, b.Horas, b.Practicos, 
                      b.IdArmador, b.IdFletador, b.Siglas, b.idEntidadResponsable, b.Observaciones AS Expr9, b.Puntal, b.UMPuntal, b.snDobleCasco, p.Id AS Expr10, p.IdPoblacion, 
                      p.idAutoridadPortuaria, p.Descripcion, p.Usuario AS Expr11, p.Timestamp AS Expr12, p.Cancelado AS Expr13, p.AduanaImport, p.AduanaExport, p.logo, p.idioma, 
                      p.DireccionRutaEDI, p.TerminalConcesionCodificadaEDI, p.PrefijoMuelles, p.ColorARGB
FROM         dbo.spsiEmailsFicherosAdjuntos AS ea INNER JOIN
                      dbo.spopexpediente AS exc ON ea.IdReferenciaRelacionada = exc.Id AND ea.TipoReferenciaRelacionada = 'EXC' LEFT OUTER JOIN
                      dbo.spbmbuque AS b ON b.Id = exc.IdBuque LEFT OUTER JOIN
                      dbo.spbmpuerto AS p ON p.Id = exc.IdPuerto
GO
/****** Object:  View [dbo].[AvisosEmailsExpedienteTransito]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosEmailsExpedienteTransito]
AS
SELECT     ea.id AS idEmail, ext.Expediente AS CodigoExpediente, ent.Nombre AS Cliente, ext.Id AS idFormulario, ext.Id, ext.IdOficina, ext.FechaInicio, ext.Estado, 
                      ext.TipoTrafico, ext.IdCliente, ext.IdOferta, ext.Descripcion, ext.Incoterm, ext.IdCorresponsal, ext.IdRemitente, ext.IdDestinatario, ext.DireccionRemitente, 
                      ext.DireccionDestinatario, ext.IdServicio, ext.Usuario, ext.TimeStamp, ext.Expediente, ext.idLineaTrafico, ext.CPRemitente, ext.CPDestinatario, ext.NumBooking, 
                      ext.Via, ext.EstadoMercancia, ext.Incidencia, ext.EstadoManual, ext.IdExpedientePadre, ext.IdViaje, ext.EmbarqueAutomatico, ext.TipoExpediente, ext.Riesgo, 
                      ext.InformacionNotificacion, ext.Responsable, ext.IdPoblacionRemitente, ext.IdPoblacionDestinatario, ext.SnRiesgoBloqueado, ext.SnRiesgoActivo, 
                      ext.FechaCreacion, ext.FechaFacturacion, ext.ContactoNombre, ext.TipoGrupaje, ext.idNaviera, ext.idPobCarga, ext.idPobDescarga, ext.idClienteComercial, 
                      ext.EmailContacto, ext.DireccionCliente, ext.OpRotada, ext.OpTriangular, ext.FechaEnvioDocumentacion, ext.ObservacionesBooking, ext.ReferenciaContrato, 
                      ea.id AS Expr1, ea.CuentaConfigurada, ea.idOficina AS Expr2, ea.DirectorioAdjunto, ea.DirectorioVirtual, ea.TipoReferenciaRelacionada, ea.IdReferenciaRelacionada, 
                      ea.CodigoReferenciaRelacionada, ea.Asunto, ea.De, ea.Para, ea.CC, ea.CCO, ea.Cuerpo, ea.Fichero, ea.Asignado, ea.Usuario AS Expr3, ea.Timestamp AS Expr4
FROM         dbo.spsiEmailsFicherosAdjuntos AS ea INNER JOIN
                      dbo.spexexpediente AS ext ON ea.IdReferenciaRelacionada = ext.Id AND ea.TipoReferenciaRelacionada = 'EXT' LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ext.IdCliente
GO
/****** Object:  View [dbo].[AvisosEntidades]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosEntidades]
AS
SELECT        Id AS IdFormulario, IdFormaPago, Nombre, CIF, Tf1, Tf2, Fax, EquivalenciaPesoVolAereo, EquivalenciaPesoVolMaritimo, EquivalenciaPesoVolTerrestre, 
                         EquivalenciaPesoML, Email, MargenCliente, DiaPago, PaginaWeb, Usuario, TimeStamp, Cancelado, Observaciones, TextoDocumentos, 
                         RequiereControlEnvioDocumentacion, Cliente, Proveedor, Transportista, AgenteAduanas, RemitenteDestinatario, Corresponsal, OtroTipo, EstadoCuenta, 
                         FormaJuridica, NombreLegal, TipoIdentificacion, DuenoCuenta, Facturacion, LimiteCredito, Divisa, Industria, Fuente, CuentaContableCompra, CuentaContableVenta, 
                         CuentaBancaria, Banco, Oficina, idPoblCuentaBancaria, NumSwift, NumEmpleados, autoridadPortuaria, terminal, armador, estibador, agenteConsignatario, logo, 
                         InfoAdicional, InicioVacacionesDia, FinVacacionesDia, PeriodicidadFacturacion, ControlRiesgo, PorcentajeAviso, InicializacionSaldo, InicializacionSaldo_SuFavor, 
                         InicioVacacionesMes, FinVacacionesMes, aplicaretencion, Depot, Dia2Pago, Dia3Pago, DiaCobro, Dia2Cobro, Dia3Cobro, IdFormaCobro, EmpresaGrupo, Transitario, 
                         ClientePotencial, EnvioElectronico, Idioma, Retencion, CertificadoRetencion, Leasing, ObserFactu, idAgenteAduanas, idClienteFacturacion, 
                         REPLACE(dbo.ConvertFecha(FechaCertificadoRetencion2), '-', '/') AS Expr1, ScacCode, CodigoEORI, GastosTransferencia, AltaVIES, FechaActVIES, 
                         NumeroDirecciones, Latitud, Longitud, TiempoEspera, UnidadNegocioRble, TipoTransportistaProveedor, idGrupoEntidades, logoFactura, ObsFacturacion, 
                         ObsOperacion, ObsImpuestos, MOVISAT_Actualizacion, InteresDeMora, ContadorFactProveedor, SerieFactProveedor, HoraApertura, HoraCierre, FechaAlta, 
                         FechaCancelacion, SnEnviarMailDUA, UsuarioWebTracking, PasswordWebTracking, SnProveedorCriterioCaja, ReferenciaMandato, FechaFirmaMandato, 
                         FechaUltimoEnvio, TipoMandato, idFrecuencia, idPromotor, idConceptoProveedorDefault, SnImprimirFactura, snEnviarFactAvisos, SnBroker, idEntidadBroker
FROM            dbo.spcoentidades
GO
/****** Object:  View [dbo].[AvisosEscalasExpedienteConsignacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosEscalasExpedienteConsignacion]
AS
SELECT     dbo.spopexpediente.Id, dbo.spopexpediente.Codigo, dbo.spopexpediente.IdOficina, dbo.spopexpediente.IdConsignatarioBuque, dbo.spopexpediente.IdBuque, dbo.spbmbuque.Nombre AS Buque, 
                      dbo.spopexpediente.IdCliente, dbo.spopexpediente.IdPuerto, dbo.spopexpediente.NumeroEscala, dbo.spopexpediente.TipoExpediente, 
                      dbo.spopexpediente.Id AS idFormulario, dbo.spopexpediente.Usuario, dbo.SubstringHastaFinal
                          ((SELECT     ', ' + idUsuario
                              FROM         dbo.spopexpedienteresponsables
                              WHERE     (dbo.spopexpedienteresponsables.idexpediente = dbo.spopexpediente.id) FOR XML PATH('')), 3) AS Responsable, 
                      dbo.ConvertFechaHoraString_SinSegundos(spopexpedienteatraques.FechaLlegada, spopexpedienteatraques.HoraLlegada) AS Atraque, 
                      dbo.ConvertFechaHoraString_SinSegundos(spopexpedienteatraques.FechaSalida, spopexpedienteatraques.HoraSalida) AS Desatraque, 
                      dbo.NumConceptosPendientesFacturar_EC(dbo.spopexpediente.Id) AS NumConceptosPendientesFacturar, 
                      CASE Requerimiento WHEN 'RFP' THEN 1 ELSE 0 END AS FueraPuerto, dbo.spopexpediente.Estado
FROM         dbo.spopexpediente LEFT OUTER JOIN
                      dbo.spbmpuerto ON dbo.spopexpediente.IdPuerto = dbo.spbmpuerto.Id LEFT OUTER JOIN
                      dbo.spbmbuque ON dbo.spopexpediente.IdBuque = dbo.spbmbuque.Id LEFT OUTER JOIN
                      dbo.spcoentidades ON dbo.spopexpediente.IdCliente = dbo.spcoentidades.Id AND dbo.spbmbuque.IdPropietario = dbo.spcoentidades.Id INNER JOIN
                      spopexpedienteatraques ON dbo.spopexpediente.ID = spopexpedienteatraques.IDEXPEDIENTE
GO
/****** Object:  View [dbo].[AvisosExpedientesTransito]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosExpedientesTransito]
AS
SELECT     ex.Id, ex.Id AS idFormulario, ex.Expediente, ex.IdOficina, ex.Descripcion, ex.EstadoMercancia, ex.Incidencia, ex.Responsable,
                          (SELECT     dbo.ConvertFechaHoraString(FechaCambioEstado, HoraCambioEstado) AS Expr1
                            FROM          dbo.spexestadoexpediente
                            WHERE      (Id = ex.Id)) AS FechaCambioEstadoMercancia, ent.Nombre AS Cliente, dbo.ConvertFechaHoraString(ex.FechaInicio, '000000') AS FechaInicio, 
                      dbo.NumConceptosPendientesFacturar_ET(ex.Id) AS NumConceptosPendientesFacturar,
                          (SELECT     SUM(ImporteCalculadoPrevisionRentabilidad) AS Expr1
                            FROM          dbo.spexconceptoexpediente
                            WHERE      (IdExpediente = ex.Id)) AS PrevisionCoste,
                          (SELECT     SUM(ImporteCalculadoVentaRentabilidad) AS Expr1
                            FROM          dbo.spexconceptoexpediente AS spexconceptoexpediente_1
                            WHERE      (IdExpediente = ex.Id)) AS PrevisionVenta,
                          (SELECT     SUM(lfe.ImporteCalculadoRentabilidad) AS Expr1
                            FROM          dbo.spfalineafacturaemitida AS lfe INNER JOIN
                                                   dbo.spexconceptoexpediente AS ce ON ce.Id = lfe.idReferencia AND lfe.TipoReferencia = 'EXT'
                            WHERE      (ce.IdExpediente = ex.Id)) AS ImporteVenta,
                          (SELECT     SUM(df.ImporteEUR) AS Expr1
                            FROM          dbo.spfadesglosefacturarecibida AS df INNER JOIN
                                                   dbo.spexconceptoexpediente AS ce ON ce.Id = df.IdReferencia AND df.TipoReferencia = 'EXT'
                            WHERE      (ce.IdExpediente = ex.Id)) +
                          (SELECT     SUM(ImporteCoste) AS Expr1
                            FROM          dbo.spexconceptoexpediente AS spexconceptoexpediente_2
                            WHERE      (IdExpediente = ex.Id) AND (NOT (Id IN
                                                       (SELECT     IdReferencia
                                                         FROM          dbo.spfadesglosefacturarecibida
                                                         WHERE      (TipoReferencia = 'EXT'))))) AS ImporteCoste, ex.snADR, ex.snManipulacion,
                          (SELECT     ISNULL(SUM(ImportePrevision), 0.00) AS Expr1
                            FROM          dbo.spexconceptoexpediente AS spexconceptoexpediente_3
                            WHERE      (IdExpediente = ex.Id) AND (IdConcepto =
                                                       (SELECT     TOP (1) ISNULL(Valor, 0) AS Valor
                                                         FROM          dbo.spsiconfiguracion
                                                         WHERE      (Item = 'ConceptoRepartoManipulacion') AND (Grupo = 'Exp. Transito') AND (Oficina = ex.IdOficina OR
                                                                                Oficina IS NULL)
                                                         ORDER BY Oficina DESC))) AS ImporteManipulacion
FROM         dbo.spexexpediente AS ex LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ex.IdCliente
GO
/****** Object:  View [dbo].[AvisosExpedientesTransitoControlDocumentacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosExpedientesTransitoControlDocumentacion]
AS
SELECT     ex.Id, ex.Id AS idFormulario, ex.Expediente, ex.IdOficina, ex.Descripcion, ex.Responsable, ex.FechaEnvioDocumentacion, 
                      dbo.ConvertFechaHoraString(ex.FechaEnvioDocumentacion, '000000') AS FechaEnvioDocumentacionDMA, ent.RequiereControlEnvioDocumentacion, 
                      ent.Nombre AS Cliente, ex.FechaInicio, dbo.ConvertFechaHoraString(ex.FechaInicio, '000000') AS FechaInicioDMA,
                          (SELECT     TOP (1) fe.FechaFactura
                            FROM          dbo.spfafacturaemitida AS fe INNER JOIN
                                                   dbo.spfalineafacturaemitida AS lfe ON lfe.IdFacturaEmitida = fe.Id INNER JOIN
                                                   dbo.spexconceptoexpediente AS ce ON ce.Id = lfe.idReferencia AND lfe.TipoReferencia = 'EXT'
                            WHERE      (ce.IdExpediente = ex.Id) AND (fe.StatusFactura IN ('E', 'C'))
                            ORDER BY fe.Id) AS FechaPrimeraFactura,
                          (SELECT     TOP (1) sf.CodigoSerie + fe.NumeroFacturaFormateado AS Expr1
                            FROM          dbo.spfafacturaemitida AS fe INNER JOIN
                                                   dbo.spfalineafacturaemitida AS lfe ON lfe.IdFacturaEmitida = fe.Id INNER JOIN
                                                   dbo.spexconceptoexpediente AS ce ON ce.Id = lfe.idReferencia AND lfe.TipoReferencia = 'EXT' INNER JOIN
                                                   dbo.spfaseriefactura AS sf ON sf.Id = fe.IdSerieFactura
                            WHERE      (ce.IdExpediente = ex.Id) AND (fe.StatusFactura IN ('E', 'C'))
                            ORDER BY fe.Id) AS NumeroFacturaFormateado
FROM         dbo.spexexpediente AS ex LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ex.IdCliente
GO
/****** Object:  View [dbo].[AvisosExpedientesTransitoDocumentos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosExpedientesTransitoDocumentos]
AS
SELECT     ex.Id, ex.Id AS idFormulario, ex.Expediente, ex.IdOficina, ex.Descripcion, ex.EstadoMercancia, ex.Incidencia, ex.Responsable, ex.Via, ex.TipoTrafico, ex.Incoterm, 
                      ic.TipoInfoClasificada AS IC_Tipo, ic.SubTipoInfoClasificada AS IC_SubTipo, ic.Texto AS IC_Texto,
                          (SELECT     dbo.ConvertFechaHoraString(FechaCambioEstado, HoraCambioEstado) AS Expr1
                            FROM          dbo.spexestadoexpediente
                            WHERE      (Id = ex.Id)) AS FechaCambioEstadoMercancia, ent.Nombre AS Cliente, ex.FechaInicio, dbo.ConvertFechaHoraString(ex.FechaInicio, '000000') 
                      AS FechaInicioDMA,
                          (SELECT     COUNT(*) AS Expr1
                            FROM          dbo.spexordentransporte
                            WHERE      (idExpedienteTransito = ex.Id)) AS NumOTs,
                          (SELECT     COUNT(DISTINCT dbo.spexmbl.Id) AS Expr1
                            FROM          dbo.spexmbl INNER JOIN
                                                   dbo.spexpartidambl ON dbo.spexmbl.Id = dbo.spexpartidambl.idmbl AND dbo.spexmbl.Tipo = 'H'
                            WHERE      (dbo.spexpartidambl.idPadre IN
                                                       (SELECT     Id
                                                         FROM          dbo.spexembarque
                                                         WHERE      (IdPartida IN
                                                                                    (SELECT     id
                                                                                      FROM          dbo.spexpartida
                                                                                      WHERE      (IdExpediente = ex.Id))))) AND (dbo.spexpartidambl.TablaPadre = 'E') OR
                                                   (dbo.spexpartidambl.idPadre IN
                                                       (SELECT     id
                                                         FROM          dbo.spexpartida AS spexpartida_1
                                                         WHERE      (IdExpediente = ex.Id))) AND (dbo.spexpartidambl.TablaPadre = 'P')) AS NumBLHouse,
                          (SELECT     COUNT(DISTINCT spexmbl_2.Id) AS Expr1
                            FROM          dbo.spexmbl AS spexmbl_2 INNER JOIN
                                                   dbo.spexpartidambl AS spexpartidambl_2 ON spexmbl_2.Id = spexpartidambl_2.idmbl AND spexmbl_2.Tipo = 'M'
                            WHERE      (spexpartidambl_2.idPadre IN
                                                       (SELECT     Id
                                                         FROM          dbo.spexembarque AS spexembarque_2
                                                         WHERE      (IdPartida IN
                                                                                    (SELECT     id
                                                                                      FROM          dbo.spexpartida AS spexpartida_3
                                                                                      WHERE      (IdExpediente = ex.Id))))) AND (spexpartidambl_2.TablaPadre = 'E') OR
                                                   (spexpartidambl_2.idPadre IN
                                                       (SELECT     id
                                                         FROM          dbo.spexpartida AS spexpartida_1
                                                         WHERE      (IdExpediente = ex.Id))) AND (spexpartidambl_2.TablaPadre = 'P')) AS NumBLMaster,
                          (SELECT     COUNT(DISTINCT spexmbl_1.Id) AS Expr1
                            FROM          dbo.spexmbl AS spexmbl_1 INNER JOIN
                                                   dbo.spexpartidambl AS spexpartidambl_1 ON spexmbl_1.Id = spexpartidambl_1.idmbl AND spexmbl_1.Tipo = 'I'
                            WHERE      (spexpartidambl_1.idPadre IN
                                                       (SELECT     Id
                                                         FROM          dbo.spexembarque AS spexembarque_1
                                                         WHERE      (IdPartida IN
                                                                                    (SELECT     id
                                                                                      FROM          dbo.spexpartida AS spexpartida_2
                                                                                      WHERE      (IdExpediente = ex.Id))))) AND (spexpartidambl_1.TablaPadre = 'E') OR
                                                   (spexpartidambl_1.idPadre IN
                                                       (SELECT     id
                                                         FROM          dbo.spexpartida AS spexpartida_1
                                                         WHERE      (IdExpediente = ex.Id))) AND (spexpartidambl_1.TablaPadre = 'P')) AS NumInstruccionesEmbarque
FROM         dbo.spexexpediente AS ex LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ex.IdCliente LEFT OUTER JOIN
                      dbo.spexexpedienteinfoclasificada AS ic ON ex.Id = ic.idExpediente AND ic.Id =
                          (SELECT     MAX(Id) AS Expr1
                            FROM          dbo.spexexpedienteinfoclasificada
                            WHERE      (idExpediente = ex.Id))
GO
/****** Object:  View [dbo].[AvisosFacturasConsignacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosFacturasConsignacion]
AS
SELECT     fe.Id, fe.Id AS idFormulario, fe.IdFormaPago, fe.IdEntidadCliente, fe.IdSerieFactura, sf.CodigoSerie, fe.NumeroFacturaFormateado, fe.StatusFactura, fe.FechaFactura, 
                      dbo.ConvertFecha(fe.FechaFactura) AS FechaFacturaDMA, fe.FechaContabFactura, fe.FechaVencimiento, dbo.ConvertFecha(fe.FechaVencimiento) 
                      AS FechaVencimientoDMA, fe.Observaciones, fe.Referencia, fe.Usuario, fe.TimeStamp, fe.FechaEntrada, fe.ObservPie, fe.Anotaciones, fe.TotalFactura, fe.IdOficina, 
                      fe.Cobrado, fe.idDivisa, fe.Asegurada, fe.Agrupada, fe.DireccionFacturacion, fe.AmbitoFactura, fe.IdRegimenAduanal, fe.Idioma, fe.ImporteVenc, fe.FechaVencimiento2, 
                      fe.ImporteVenc2, fe.FechaVencimiento3, fe.ImporteVenc3, fe.FechaVencimiento4, fe.ImporteVenc4, fe.VencimientoManual, fe.DigitoNumFactura, fe.idDireccionCliente, 
                      ent.Nombre AS Cliente,
                          (SELECT     COUNT(Id) AS Expr1
                            FROM          dbo.spfafacturaemitida AS fe1
                            WHERE      (IdEntidadCliente = fe.IdEntidadCliente)) AS NumeroTotalesFacturasCliente,
                          (SELECT     MAX(FechaFactura) AS Expr1
                            FROM          dbo.spfafacturaemitida AS fe1
                            WHERE      (IdEntidadCliente = fe.IdEntidadCliente)) AS FechaUltimaFacturaCliente,
                          (SELECT     ControlRiesgo
                            FROM          dbo.spcoentidades
                            WHERE      (Id = fe.IdEntidadCliente)) AS controlRiesgo, fe.TotalFacturaEUR, fe.MotivoExencionImpuestos, dent.EmailContacto AS EmailContactoReclamacion, 
                      dent.Contacto AS ContactoReclamacion,
                          (SELECT     TOP (1) Id
                            FROM          dbo.spcocontactosentidades
                            WHERE      (IdEntidad = ent.Id) AND (SnNotify = 'true')) AS idContactoNotificacion,
                          (SELECT     TOP (1) Nombre
                            FROM          dbo.spcocontactosentidades AS spcocontactosentidades_1
                            WHERE      (IdEntidad = ent.Id) AND (SnNotify = 'true')) AS ContactoNotificacion, ex.TipoExpediente, ex.TipoOperacion, ex.Estado, ex.Id AS idExpediente
FROM         dbo.spfafacturaemitida AS fe INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = fe.IdEntidadCliente LEFT OUTER JOIN
                      dbo.spcodireccionesentidades AS dent ON dent.Id = fe.idDireccionCliente LEFT OUTER JOIN
                      dbo.spfaseriefactura AS sf ON sf.Id = fe.IdSerieFactura INNER JOIN
                      dbo.spfalineafacturaemitida AS lfe ON lfe.IdFacturaEmitida = fe.Id AND lfe.TipoReferencia = 'EXC' LEFT OUTER JOIN
                      dbo.spopexpedienteconceptos AS exc ON lfe.idReferencia = exc.Id LEFT OUTER JOIN
                      dbo.spopexpediente AS ex ON ex.Id = exc.IdExpediente
GO
/****** Object:  View [dbo].[AvisosFacturasRecibidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosFacturasRecibidas]
AS
SELECT     fr.Id, fr.Id AS idFormulario, fp.Id AS idFormaPago, fp.Descripcion AS FormaPago, fr.IdEntidadProveedor, fr.IdSerie, fr.Numero AS NumeroFacturaSolport, 
                      fr.NumeroFactura, fr.StatusFactura, fr.FechaFactura, fr.FechaContabFactura, fr.FechaVencimiento, fr.Usuario, fr.TimeStamp, fr.FechaEntrada, fr.TotalFactura, 
                      fr.IdMoneda, fr.IdOficina, fr.Pagado, fr.Retencion, fr.snComision, fr.SnFacturaAutonomo, fr.Cambio, dent.EmailContacto, dent.Contacto, ent.Nombre AS Proveedor,
                          (SELECT     COUNT(Id) AS Expr1
                            FROM          dbo.spfafacturarecibida AS fr1
                            WHERE      (IdEntidadProveedor = fr.IdEntidadProveedor)) AS NumeroTotalesFacturasCliente,
                          (SELECT     MAX(FechaFactura) AS Expr1
                            FROM          dbo.spfafacturarecibida AS fr1
                            WHERE      (IdEntidadProveedor = fr.IdEntidadProveedor)) AS FechaUltimaFacturaProveedor, dent.EmailContacto AS EmailContactoReclamacion, 
                      dent.Contacto AS ContactoReclamacion,
                          (SELECT     TOP (1) Id
                            FROM          dbo.spcocontactosentidades
                            WHERE      (IdEntidad = ent.Id) AND (SnNotify = 'true')) AS idContactoNotificacion,
                          (SELECT     TOP (1) Nombre
                            FROM          dbo.spcocontactosentidades AS spcocontactosentidades_1
                            WHERE      (IdEntidad = ent.Id) AND (SnNotify = 'true')) AS ContactoNotificacion
FROM         dbo.spfafacturarecibida AS fr INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = fr.IdEntidadProveedor LEFT OUTER JOIN
                      dbo.spcodireccionesentidades AS dent ON dent.IdEntidad = ent.Id AND dent.PrincipalFiscal = 'true' LEFT OUTER JOIN
                      dbo.spfaformapago AS fp ON fp.Id = fr.IdFormaPago
GO
/****** Object:  View [dbo].[AvisosFantasma]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosFantasma]
AS
SELECT     0 AS Id, 0 AS idFormulario
GO
/****** Object:  View [dbo].[AvisosLineasFacturasSinConceptos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosLineasFacturasSinConceptos]
AS
SELECT     fe.Id, fe.IdFormaPago, fe.IdEntidadCliente, fe.Ejercicio, fe.IdSerieFactura, fe.NumeroFactura, fe.PrefijoFactura, fe.NumeroFacturaFormateado, 
                      fe.StatusFactura, fe.FechaFactura, fe.FechaContabFactura, fe.FechaVencimiento, fe.Observaciones, fe.Referencia, fe.Usuario, fe.TimeStamp, 
                      fe.FechaEntrada, fe.ObservPie, fe.Anotaciones, fe.TotalFactura, fe.IdOficina, fe.Cobrado, fe.idDivisa, fe.Asegurada, fe.Agrupada, 
                      fe.DireccionFacturacion, fe.AmbitoFactura, fe.IdRegimenAduanal, fe.Idioma, fe.ImporteVenc, fe.FechaVencimiento2, fe.ImporteVenc2, 
                      fe.FechaVencimiento3, fe.ImporteVenc3, fe.FechaVencimiento4, fe.ImporteVenc4, fe.VencimientoManual, fe.DigitoNumFactura, fe.idDireccionCliente, 
                      fe.idImpuesto, fe.xx, lf.Id AS idFormulario, lf.Id AS Expr1, lf.IdFacturaEmitida, lf.IdConcepto, lf.IdDivisa AS Expr2, lf.Unidades, lf.TipoImpuesto2, 
                      lf.ImporteUnitario, lf.NomConcepto, lf.ReferenciaCliente, lf.IdProveedor, lf.Orden, lf.TipoReferencia, lf.idReferencia, lf.ConceptoFusion, 
                      lf.Usuario AS Expr3, lf.TimeStamp AS Expr4, lf.OtrasReferencias, lf.ImporteCalculadoRentabilidad
FROM         dbo.spfalineafacturaemitida AS lf INNER JOIN
                      dbo.spfafacturaemitida AS fe ON fe.Id = lf.IdFacturaEmitida
WHERE     (lf.idReferencia NOT IN
                          (SELECT     Id
                            FROM          dbo.spopexpedienteconceptos))
GO
/****** Object:  View [dbo].[AvisosMensajeriaExpedientesPlantilla]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosMensajeriaExpedientesPlantilla]
AS
SELECT     TABLA.idFormulario, TABLA.TipoReferencia, TABLA.Codigo, TABLA.EstadoReferencia AS Estado, TABLA.TipoMensaje, hme.Estado AS EstadoMensaje, 
                      hme.Observaciones
FROM         (SELECT     e.id AS idFormulario, e.TipoExpediente AS TipoReferencia, e.Codigo, me.TipoMensaje, (CASE e.TipoExpediente WHEN 'AT' THEN
                                                  (SELECT     TOP 1 Estado
                                                    FROM          sptralbaran
                                                    WHERE      Id = e.Id) ELSE '' END) AS EstadoReferencia,
                                                  (SELECT     TOP (1) Id AS IdHistorico
                                                    FROM          dbo.spmehistoricomensajeria
                                                    WHERE      (idFichero = me.Id)
                                                    ORDER BY IdHistorico DESC) AS IdHistorico
                       FROM          dbo.spepexpediente AS e INNER JOIN
                                              dbo.spmemensajeria AS me ON me.idReferencia = e.id) AS TABLA LEFT OUTER JOIN
                      dbo.spmehistoricomensajeria AS hme ON hme.Id = TABLA.IdHistorico
GO
/****** Object:  View [dbo].[AvisosMensajesPendientes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosMensajesPendientes]
AS
SELECT     DATEDIFF(mi, dbo.ConvertFechaHora(his.Fecha, his.Hora), GETDATE()) AS TotalMinutosPendiente, FLOOR(DATEDIFF(ss, dbo.ConvertFechaHora(his.Fecha, his.Hora), 
                      GETDATE()) / 86400) AS dias, FLOOR(DATEDIFF(ss, dbo.ConvertFechaHora(his.Fecha, his.Hora), GETDATE()) % 86400 / 3600.0) AS horas, FLOOR(DATEDIFF(ss, 
                      dbo.ConvertFechaHora(his.Fecha, his.Hora), GETDATE()) % 86400 % 3600.0 / 60.0) AS minutos, me.TipoMensaje, me.idOficina, his.Usuario, his.NombreFichero, 
                      his.ReferenciaEmisor, his.ReferenciaModificacion, his.FuncionMensaje, his.Estado, me.Id AS 'idFormulario'
FROM         dbo.spmehistoricomensajeria AS his INNER JOIN
                      dbo.spmemensajeria AS me ON me.Id = his.idFichero
WHERE     (SUBSTRING(his.Estado, 2, 2) = 'EN')
GO
/****** Object:  View [dbo].[AvisosMMPP]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosMMPP]
AS
SELECT     mmpp.id, mmpp.id AS idFormulario, book.NumBLArmador, mmpp.NombreExpedidor, mmpp.NombreReceptor, mmpp.DomicilioExpedidor, mmpp.DomicilioReceptor, 
                      mmpp.PoblacionExpedidor, mmpp.PoblacionReceptor, mmpp.CPExpedidor, mmpp.CPReceptor, mmpp.TelfExpedidor, mmpp.TelfReceptor, mmpp.CIFExpedidor, 
                      mmpp.CIFReceptor, mmpp.PersonaContactoExpedidor, mmpp.PersonaContactoReceptor, mmpp.IdPaisExpedidor, mmpp.IdPaisReceptor, 
                      dbo.ConvertFechaHoraString(mmpp.FechaCargaBuque, mmpp.HoraCargaBuque) AS FechaCargaBuque, dbo.ConvertFechaHoraString(mmpp.FechaDescargaBuque, 
                      mmpp.HoraDescargaBuque) AS FechaDescargaBuque, dbo.ConvertFechaHoraString(mmpp.FechaLlegadaMercancia, mmpp.HoraLlegadaMercancia) 
                      AS FechaLLegadaMercancia, dbo.ConvertFechaHoraString(mmpp.FechaSalidaMercancia, mmpp.HoraSalidaMercancia) AS FechaSalidaMercancia, mmpp.FCLLCL,
                          (SELECT     TOP (1) IdUsuario
                            FROM          dbo.spopexpedienteresponsables AS exR
                            WHERE      (IdExpediente = ex.Id)) AS ResponsableTOP1, dbo.SubstringHastaFinal
                          ((SELECT     ', ' + idUsuario
                              FROM         dbo.spopexpedienteresponsables
                              WHERE     (dbo.spopexpedienteresponsables.idexpediente = ex.id) FOR XML PATH('')), 3) AS Responsable
FROM         dbo.spopsolicitudmmpp AS mmpp INNER JOIN
                      dbo.spopbooking AS book ON book.Id = mmpp.idBooking INNER JOIN
                      dbo.spopexpedienteviajes AS via ON book.IdExpedienteViaje = via.Id INNER JOIN
                      dbo.spopexpediente AS ex ON ex.Id = via.IdExpediente
GO
/****** Object:  View [dbo].[AvisosMovimiento]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosMovimiento]
AS
SELECT     MatriculaContenedor, TipoMovimiento, Estado, FechaMovimiento, Precintos, Observaciones, Depot, Transportista, id AS idFormulario, id, Oficina, 
                      HoraMovimiento
FROM         dbo.SpBmMovimientoContenedor
GO
/****** Object:  View [dbo].[AvisosMovimientoIlogico]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosMovimientoIlogico]
AS
SELECT     MatriculaContenedor, TipoMovimiento, Estado, FechaMovimiento, Precintos, Observaciones, Depot, Transportista, id AS idFormulario, id, Oficina, 
                      HoraMovimiento
FROM         dbo.SpBmMovimientoIlogicoContenedor
GO
/****** Object:  View [dbo].[AvisosOfertas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosOfertas]
AS
SELECT     ofe.Id, ofe.IdOficina, ofe.IdEntidad, ofe.FechaAlta, ofe.FechaCaducidad, ofe.oferta, ofe.Estado, ent.Nombre AS cliente, ofe.Id AS idFormulario, 
                      prov.Nombre AS Proveedor, ofe.idProveedor, ofe.snPlantilla, ofe.PersonaContacto, ofe.eMailContacto,
                          (SELECT     TOP (1) Id
                            FROM          dbo.spcocontactosentidades
                            WHERE      (IdEntidad = ent.Id) AND (SnNotify = 'true')) AS idContactoNotificacion,
                          (SELECT     TOP (1) Nombre
                            FROM          dbo.spcocontactosentidades AS spcocontactosentidades_1
                            WHERE      (IdEntidad = prov.Id) AND (SnNotify = 'true')) AS ContactoProveedorNotificacion,
                          (SELECT     TOP (1) Id
                            FROM          dbo.spcocontactosentidades AS spcocontactosentidades_2
                            WHERE      (IdEntidad = prov.Id) AND (SnNotify = 'true')) AS idContactoProveedorNotificacion,
                          (SELECT     TOP (1) Nombre
                            FROM          dbo.spcocontactosentidades AS spcocontactosentidades_1
                            WHERE      (IdEntidad = ent.Id) AND (SnNotify = 'true')) AS ContactoNotificacion, ofe.Asunto, ofe.Anotaciones, ofe.ObservCabecera, ofe.ObservPie, ofe.idComercial, 
                      com.Nombre AS Comercial
FROM         dbo.spcooferta AS ofe LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ofe.IdEntidad LEFT OUTER JOIN
                      dbo.spcoentidades AS prov ON prov.Id = ofe.idProveedor LEFT OUTER JOIN
                      dbo.spsiusuario AS com ON com.Id = ofe.idComercial
GO
/****** Object:  View [dbo].[AvisosPartidasExpTransito]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosPartidasExpTransito]
AS
SELECT     P.id AS idPartida, P.IdExpediente AS idFormulario, P.Descripcion, P.IdEmbalaje, P.Bultos, P.PesoNeto, P.PesoBruto, P.Volumen, P.Ancho, P.Largo, P.Alto, 
                      P.ReferenciaCorresponsal, P.ReferenciaCliente, P.ReferenciaFabricante, P.IdAgenteAduanas, P.Marcas, dbo.ConvertFechaHoraString(P.FechaInicioRecogida, 
                      P.HoraInicioRecogida) AS FechaInicioRecogida, dbo.ConvertFecha(P.FechaLimiteEntrega) AS FechaLimiteEntrega, P.IdOrigen, P.IdDestino, P.Observaciones, 
                      P.ValorMercancia, P.IdDivisa, P.ImporteSeguro, P.FechaSeguro, P.Aseguradora, P.ValorDeclarado, P.Usuario, P.TimeStamp, 
                      dbo.ConvertFechaHoraString(P.HoraLimiteRecogida, P.FechaLimiteRecogida) AS FechaLimiteRecogida, dbo.ConvertFechaHoraString(P.FechaCargaContenedor, 
                      P.HoraCargaContenedor) AS FechaCargaContenedor, P.FechaDespacho, P.MetrosLineales, P.pesoTasable, P.ZonaOrigen, P.ZonaDestino, P.Despacho, 
                      P.ImporteVinculacion, P.Transportista, P.Transportista1, P.pesoTasableTransportista, P.pesoTasableCorresponsal, P.NumDeclaracionSumaria, P.NumPartida, 
                      P.idArancel, P.HBL, P.NumMercosur, dbo.ConvertFecha(P.FechaRealEntrega) AS FechaRealEntrega, EX.IdOficina, EX.FechaInicio, EX.Estado, EX.TipoTrafico, 
                      EX.IdCliente, EX.IdOferta, EX.Descripcion AS DescripcionExpediente, EX.Incoterm, EX.IdCorresponsal, EX.IdRemitente, EX.IdDestinatario, EX.DireccionRemitente, 
                      EX.DireccionDestinatario, EX.IdServicio, EX.Expediente, EX.idLineaTrafico, EX.CPRemitente, EX.CPDestinatario, EX.NumBooking, EX.Via, EX.EstadoMercancia, 
                      EX.Incidencia, EX.EstadoManual, EX.IdExpedientePadre, EX.IdViaje, EX.EmbarqueAutomatico, EX.TipoExpediente, EX.Riesgo, EX.InformacionNotificacion, 
                      EX.Responsable, EX.IdPoblacionRemitente, EX.IdPoblacionDestinatario, entcli.Nombre AS Cliente, entrem.Nombre AS Remitente, entdes.Nombre AS Destinatario, 
                      emba.Descripcion AS Embalaje,
                          (SELECT     TOP (1) Id
                            FROM          dbo.spcocontactosentidades
                            WHERE      (IdEntidad = entcli.Id) AND (SnNotify = 'true')) AS idContacto,
                          (SELECT     TOP (1) Nombre
                            FROM          dbo.spcocontactosentidades AS spcocontactosentidades_1
                            WHERE      (IdEntidad = entcli.Id) AND (SnNotify = 'true')) AS Contacto
FROM         dbo.spexpartida AS P INNER JOIN
                      dbo.spexexpediente AS EX ON P.IdExpediente = EX.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS entcli ON entcli.Id = EX.IdCliente LEFT OUTER JOIN
                      dbo.spcoentidades AS entrem ON entrem.Id = EX.IdRemitente LEFT OUTER JOIN
                      dbo.spcoentidades AS entdes ON entdes.Id = EX.IdDestinatario LEFT OUTER JOIN
                      dbo.spbmembalaje AS emba ON emba.Id = P.IdEmbalaje
GO
/****** Object:  View [dbo].[AvisosReservaGenerada]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosReservaGenerada]
AS
SELECT     rc.id AS idFormulario, r.id, r.idOficina, r.idAlmacen, r.idCliente, r.TipoReserva, r.Booking, r.NumEDI, r.OtraReferencia, r.FechaAlta, r.HoraAlta, r.FechaReserva, 
                      r.HoraReserva, r.FechaCaducidad, r.HoraCaducidad, r.Estado, r.Observaciones, r.Usuario, r.Timestamp, r.snGeneradaAuto, r.idAgenteCarga, r.idBuque, r.Viaje, 
                      r.IdPuertoDestino, r.IdPuertoDestinoFinal, r.idConsolidador, r.idOperador, r.idAgenteAduana, r.Producto, r.SubProducto, r.TipoBultos, r.Peso, r.SnImo, r.NumeroIMO, 
                      r.EmbarqueVia, r.MovilizadoA, r.LocalAsignado, r.CondicionOrigen, r.snCargaConsolidada, r.snServicioIntegral, rc.id AS Expr1, rc.idReserva, rc.idMovimiento, 
                      rc.Matricula, rc.TipoContenedor, rc.TamañoContenedor, rc.Referencia, rc.idTransportista, rc.Transportista, rc.MatriculaCamion, rc.NIFConductor, rc.Conductor, 
                      rc.snEntregadoRecibido, rc.FechaEstimada, rc.HoraEstimada, rc.ExtraAlto, rc.ExtraAncho, rc.ExtraLargo, rc.UMMedida, rc.PesoBruto, rc.Observaciones AS Expr2, 
                      rc.Usuario AS Expr3, rc.Timestamp AS Expr4, rc.Temperatura, rc.UnidadMedidaTemperatura, rc.Humedad, rc.Ventilacion, rc.snEnCampa, rc.Precintos, 
                      rc.Estado AS Expr5, rc.FechaEnCampa, rc.HoraEnCampa, rc.FechaAsignacion, rc.HoraAsignacion, rc.snPagado, rc.FechaPagado, rc.HoraPagado, rc.OtrosPrecintos, 
                      rc.FechaMovimiento, rc.HoraMovimiento, rc.snPreasignado
FROM         dbo.spedreservas AS r LEFT OUTER JOIN
                      dbo.spedreservasContenedor AS rc ON rc.idReserva = r.id
GO
/****** Object:  View [dbo].[AvisosTraspasoCG]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosTraspasoCG]
AS
SELECT     dbo.spintransmisionhistorico.id AS idFormulario, dbo.spintransmisionhistorico.idTransmision, dbo.spintransmisionhistorico.Accion, 
                      dbo.spintransmisionhistorico.Procesado, dbo.spintransmisionhistorico.Observaciones, dbo.spintransmisionhistorico.Usuario, 
                      dbo.spintransmisionhistorico.Timestamp, dbo.spintransmision.id AS idTrans, dbo.spintransmision.NumTransmision, 
                      dbo.spintransmision.TipoTransmision, dbo.spintransmision.Usuario AS UsuarioTrans
FROM         dbo.spintransmisionhistorico INNER JOIN
                      dbo.spintransmision ON dbo.spintransmisionhistorico.idTransmision = dbo.spintransmision.id
GO
/****** Object:  View [dbo].[AvisosUltimosMovimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AvisosUltimosMovimientos]
AS
SELECT        mv.id AS IdFormulario, mv.MatriculaContenedor, mv.Oficina, mv.NumContadorCiclo, mv.NumContadorMovimiento, mv.TipoMovimiento, mv.Mecanismo, mv.Estado, 
                         mv.FechaMovimiento, mv.HoraMovimiento, mv.ActuacionEnCiclo, mv.Origen, mv.Destino, mv.Depot, mv.Precintos, mv.SnReservado, mv.SnCicloAbierto, 
                         mv.SnAveriado, mv.Observaciones, mv.Buque, mv.Viaje, mv.NumConocimArmador, mv.FechaTransmision, mv.HoraTransmision, mv.Usuario, mv.Armador, 
                         mv.UbicacionOrigen, mv.UbicacionDestino, mv.Transportista, mv.MatriculaCamion, mv.SnTransmitidoArmador, mv.TimeStamp, mv.PresupuestoAveria, 
                         mv.PesoMercancia, mv.Precinto, mv.Temperatura, mv.TemperaturaMinima, mv.TemperaturaMaxima, mv.UnidadMedidaTemperatura, mv.snAveriadoChasis, 
                         mv.snAveriadoGenerador, mv.MatriculaGenerador, c.idEntidad, c.Activo, entD.Nombre AS NombreDepot
FROM            dbo.SpBmMovimientoContenedor AS mv INNER JOIN
                             (SELECT        MatriculaContenedor, MAX(NumContadorCiclo) AS numContadorCiclo,
                                                             (SELECT        MAX(NumContadorMovimiento) AS Expr1
                                                               FROM            dbo.SpBmMovimientoContenedor
                                                               WHERE        (NumContadorCiclo = MAX(mc.NumContadorCiclo)) AND (MatriculaContenedor = mc.MatriculaContenedor)) 
                                                         AS NumContadorMovimiento
                               FROM            dbo.SpBmMovimientoContenedor AS mc
                               GROUP BY MatriculaContenedor) AS TABLA ON TABLA.MatriculaContenedor = mv.MatriculaContenedor AND TABLA.numContadorCiclo = mv.NumContadorCiclo AND
                          TABLA.NumContadorMovimiento = mv.NumContadorMovimiento LEFT OUTER JOIN
                         dbo.SpBmContenedor AS c ON c.Matricula = mv.MatriculaContenedor LEFT OUTER JOIN
                         dbo.spcoentidades AS entD ON entD.Id = mv.Depot
GO
/****** Object:  View [dbo].[AX_ClientesNoProcesadas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AX_ClientesNoProcesadas]
AS
SELECT     entd.IdEntidad, ent.Nombre, t.id, t.NumTransmision, t.TipoTransmision, t.IdEnviado, t.Usuario, t.Timestamp, th.Accion, th.Procesado, th.Observaciones
FROM         dbo.spintransmision AS t INNER JOIN
                      dbo.spintransmisionhistorico AS th ON th.idTransmision = t.id INNER JOIN
                      dbo.spcodireccionesentidades AS entd ON t.IdEnviado = entd.Id INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = entd.IdEntidad
WHERE     (t.TipoTransmision = 'AC' OR
                      t.TipoTransmision = 'MC') AND (th.Procesado = 'false') AND (th.Accion = 'PR')
GO
/****** Object:  View [dbo].[AX_ClientesSinCuentaContable]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AX_ClientesSinCuentaContable]
AS
SELECT DISTINCT empe.Nombre AS Empresa, entpc.idEntidad, ent.Nombre AS Cliente, entpc.CuentaContableVenta
FROM         dbo.spcoentidadplanescontables AS entpc INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = entpc.idEntidad INNER JOIN
                      dbo.spsiempresa AS empe ON empe.idPlanContable = entpc.idPlanContable
WHERE     (entpc.CuentaContableVenta IS NULL) AND (entpc.idPlanContable <> 20) AND (entpc.idPlanContable IN
                          (SELECT     idPlanContable
                            FROM          dbo.spsiempresa
                            WHERE      (Id IN
                                                       (SELECT     Empresa
                                                         FROM          dbo.spsioficina
                                                         WHERE      (Id IN
                                                                                    (SELECT     IdOficina
                                                                                      FROM          dbo.spcoentidadesoficinas
                                                                                      WHERE      (IdEntidad = entpc.idEntidad))))))) AND (ent.Cliente = 'true')
GO
/****** Object:  View [dbo].[AX_ProveedoresNoProcesados]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[AX_ProveedoresNoProcesados]
AS
SELECT     entd.IdEntidad, ent.Nombre, t.id, t.NumTransmision, t.TipoTransmision, t.IdEnviado, t.Usuario, t.Timestamp, th.Accion, th.Procesado, th.Observaciones
FROM         dbo.spintransmision AS t INNER JOIN
                      dbo.spintransmisionhistorico AS th ON th.idTransmision = t.id INNER JOIN
                      dbo.spcodireccionesentidades AS entd ON t.IdEnviado = entd.Id INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = entd.IdEntidad
WHERE     (t.TipoTransmision = 'AP' OR
                      t.TipoTransmision = 'MP') AND (th.Procesado = 'false') AND (th.Accion = 'PR')
GO
/****** Object:  View [dbo].[Ax_ProveedoresSinCuentaContable]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Ax_ProveedoresSinCuentaContable]
AS
SELECT DISTINCT empe.Nombre AS Empresa, entpc.idEntidad, ent.Nombre AS Cliente, entpc.CuentaContableCompra
FROM         dbo.spcoentidadplanescontables AS entpc INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = entpc.idEntidad INNER JOIN
                      dbo.spsiempresa AS empe ON empe.idPlanContable = entpc.idPlanContable
WHERE     (ent.Proveedor = 'true') AND (entpc.CuentaContableCompra IS NULL) AND (entpc.idPlanContable <> 20) AND (entpc.idPlanContable IN
                          (SELECT     idPlanContable
                            FROM          dbo.spsiempresa
                            WHERE      (Id IN
                                                       (SELECT     Empresa
                                                         FROM          dbo.spsioficina
                                                         WHERE      (Id IN
                                                                                    (SELECT     IdOficina
                                                                                      FROM          dbo.spcoentidadesoficinas
                                                                                      WHERE      (IdEntidad = entpc.idEntidad)))))))
GO
/****** Object:  View [dbo].[Booking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Booking]
AS
SELECT     Id, IdExpedienteViaje, IdCliente, NombreCliente, PoblOrigen, PoblCarga, PoblTransbordo, PoblDescarga, PoblDestino, IdShipper, IdConsignee, 
                      TextoShipper, TextoConsignee, Trafico, IdOficina, NumBookingArmador, NumBLArmador
FROM         dbo.spopbooking
GO
/****** Object:  View [dbo].[BookingsReservasDepot]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[BookingsReservasDepot]
AS
SELECT     dbo.spedreservas.TipoReserva, dbo.spedreservas.id AS idReserva, dbo.spedreservas.Booking, dbo.spedreservas.NumEDI, dbo.spedreservas.OtraReferencia, 
                      dbo.spedreservas.idOficina, dbo.spedreservas.idAlmacen, dbo.spedreservas.idCliente, dbo.spedreservas.idClienteSecundario
FROM         dbo.spedreservas INNER JOIN
                      dbo.spedreservasContenedor ON dbo.spedreservas.id = dbo.spedreservasContenedor.idReserva
GROUP BY dbo.spedreservas.TipoReserva, dbo.spedreservas.id, dbo.spedreservas.Booking, dbo.spedreservas.NumEDI, dbo.spedreservas.OtraReferencia, 
                      dbo.spedreservas.idOficina, dbo.spedreservas.idAlmacen, dbo.spedreservas.idCliente, dbo.spedreservas.idClienteSecundario
GO
/****** Object:  View [dbo].[Buques]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Buques]
AS
SELECT     Id, Nombre, Siglas, TipoBuque, Calado, TonelajeBruto, Manga, Eslora, Capacidad, Clasificacion
FROM         dbo.spbmbuque
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[caDocumentosBancos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[caDocumentosBancos]
AS
SELECT     TOP (1000) doc.Id, doc.ModoPago, ofi.codigoBanco, ofi.codigoOficina, ofi.NombreBanco, doc.Documentos
FROM         dbo.spcadocumentosbancos AS doc INNER JOIN
                      dbo.spcaoficinasbancarias AS ofi ON ofi.id = doc.idBanco
GO
/****** Object:  View [dbo].[CaractCont]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CaractCont]
AS
SELECT     cc.Id, cc.Tamanyo, cc.Tipo, cc.Descripcion, cc.Tara, cc.PMM, v.Nombre AS UnidadesFacturacion
FROM         dbo.spbmcaracteristicascontenedor AS cc LEFT OUTER JOIN
                      dbo.spcovariable AS v ON v.Id = cc.idVariable
WHERE     (cc.SnCancelado = 0)
GO
/****** Object:  View [dbo].[CaractCont2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CaractCont2]
AS
SELECT     Id, Descripcion AS Nombre, Tamanyo, Tipo, CodigoInternacional AS ISO, Altura, Anchura, Longitud, Tara, PMM
FROM         dbo.spbmcaracteristicascontenedor
GO
/****** Object:  View [dbo].[CaracteristicasContenedoresISO]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CaracteristicasContenedoresISO]
AS
SELECT     Id, CodigoInternacional AS ISO, Tamanyo AS Tamaño, Tipo, Descripcion AS Descripción, Tara, PMM
FROM         dbo.spbmcaracteristicascontenedor
WHERE     (CodigoInternacional IS NOT NULL) AND (SnCancelado = 0)
GO
/****** Object:  View [dbo].[CheckList]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CheckList] as Select Id,Descripcion,IdServicio,Defecto from spopchecklist 
GO
/****** Object:  View [dbo].[CheckListExpPlantilla]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CheckListExpPlantilla]
AS
SELECT     dbo.sptgchecklist.Id, dbo.sptgchecklist.Descripcion, dbo.sptgchecklist.TipoReferencia, dbo.sptgchecklist.TipoTrafico, dbo.sptgchecklist.Via, 
                      dbo.sptgchecklist.IdServicio, s.Codigo AS CodigoServicio, s.Descripcion AS DescServicio, dbo.sptgchecklist.Cancelado
FROM         dbo.sptgchecklist LEFT OUTER JOIN
                      dbo.spopservicios AS s ON s.Id = dbo.sptgchecklist.IdServicio
GO
/****** Object:  View [dbo].[CheckListItems]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CheckListItems]
AS
SELECT     id, descripcion
FROM         dbo.spopitemchecklist
WHERE     (Cancelado <> 'true')
GO
/****** Object:  View [dbo].[ChecklistTramites]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ChecklistTramites]
AS
SELECT     Id, Descripcion, TipoReferencia, Cancelado
FROM         dbo.sptgchecklist
GO
/****** Object:  View [dbo].[Cierres]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Cierres]
AS
SELECT     id, TipoCierre, idOficina, Mes, Año, Usuario, Timestamp
FROM         dbo.spsicierres
GO
/****** Object:  View [dbo].[ClaseTarifa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ClaseTarifa] as
Select Id,Codigo,Descripcion,idConcepto From spbaclasetarifa
GO
/****** Object:  View [dbo].[ClausulaBL]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ClausulaBL]
AS
SELECT     id, TextoClausula, Fuente, Tamanyo, CodigoINTTRA
FROM         dbo.spopclausulabl
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[Clientes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Clientes]
AS
SELECT        ent.Id, ent.Nombre, ent.CIF, REPLACE(REPLACE(ISNULL(dir.DireccionConfigurada, dir.Direccion), CHAR(13), '|'), CHAR(10), '') AS Direccion, dir.Poblacion, dir.CP, dir.Id AS IdDireccion, dir.Cancelado
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad
WHERE        (ent.Cliente = 'true') AND (ent.Cancelado = 'false') OR
                         (ent.Cliente = 'true') AND (ent.Cancelado = 'false') AND (dir.Cancelado = 'false')
GO
/****** Object:  View [dbo].[ClientesClientesPotenciales]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[ClientesClientesPotenciales]
AS
SELECT     ent.Id, ent.Nombre, ent.CIF,replace(dir.direccion,char(10),' | ') 'Direccion',dir.poblacion,dir.cp
FROM         dbo.spcoentidades ent left outer join dbo.spcodireccionesentidades dir on ent.id=dir.identidad
WHERE     (Cliente = 'true') AND (ent.Cancelado = 'false') OR
                      (ClientePotencial = 'true')
GO
/****** Object:  View [dbo].[CliOtros]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CliOtros]
AS
SELECT     Id, Nombre, CIF
FROM         dbo.spcoentidades
WHERE     (Cliente = 'true') AND (Cancelado = 'false') OR
                      (OtroTipo = 'true') AND (Cancelado = 'false')
GO
/****** Object:  View [dbo].[CLPeriod]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CLPeriod] as Select id,Descripcion from spopperiodicidadchecklist 
GO
/****** Object:  View [dbo].[Cobros]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Cobros] as Select Id,IdSerie,Referencia from spcacobros 
GO
/****** Object:  View [dbo].[CODECOSErroneos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CODECOSErroneos]
AS
SELECT     0 AS idFormulario
GO
/****** Object:  View [dbo].[CodigosPostales1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CodigosPostales1]
AS
SELECT     dbo.splocodpostal.Id, dbo.splocodpostal.Codigo, dbo.splocodpostal.Nombre, dbo.sploprovincias.Id AS IdProvincia, dbo.sploprovincias.Provincia, 
                      dbo.splopoblacion.Id AS IdPoblacion, dbo.splopoblacion.Nombre AS Poblacion, dbo.splopais.Nombre AS Pais
FROM         dbo.splocodpostal INNER JOIN
                      dbo.sploprovincias ON dbo.splocodpostal.IdProvincia = dbo.sploprovincias.Id INNER JOIN
                      dbo.splopais ON dbo.sploprovincias.IdPais = dbo.splopais.Id LEFT OUTER JOIN
                      dbo.splopoblacion ON dbo.splocodpostal.IdPoblacion = dbo.splopoblacion.Id
GO
/****** Object:  View [dbo].[CombinacionesTransbordo]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CombinacionesTransbordo]
AS
SELECT     Id, IdOFicina AS Oficina, TipoTrafico,
                          (SELECT     Nombre
                            FROM          dbo.splopoblacion
                            WHERE      (Id = dbo.spopcombinacionestransbordo.PoblDescarga)) AS [Pobl. Descarga],
                          (SELECT     Nombre
                            FROM          dbo.splopoblacion AS splopoblacion_3
                            WHERE      (Id = dbo.spopcombinacionestransbordo.PoblDestino)) AS [Pobl. Destino],
                          (SELECT     Nombre
                            FROM          dbo.splopoblacion AS splopoblacion_2
                            WHERE      (Id = dbo.spopcombinacionestransbordo.PuertoTransbordo)) AS [Pto. Transbordo],
                          (SELECT     Nombre
                            FROM          dbo.splopoblacion AS splopoblacion_1
                            WHERE      (Id = dbo.spopcombinacionestransbordo.PoblDescargaTrans)) AS [Pobl. Descarga Transbordo]
FROM         dbo.spopcombinacionestransbordo
GO
/****** Object:  View [dbo].[CompaniaAerea1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CompaniaAerea1]
AS
SELECT     Nombre, Pais
FROM         dbo.spbacompaniaaerea
GO
/****** Object:  View [dbo].[CompaniaAerea2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CompaniaAerea2]
AS
SELECT        TOP (100) PERCENT cia.Nombre, cia.Direccion, cia.Pais, cia.CodigoNum, cia.CodigoAlf, enER.Nombre AS EntidadReferencia, enTC.Nombre AS TerminalCarga, 
                         cia.IATA, cia.IdTerminalCarga, cia.IdEntidadReferencia, cia.Id
FROM            dbo.spbacompaniaaerea AS cia LEFT OUTER JOIN
                         dbo.spcoentidades AS enTC ON enTC.Id = cia.IdTerminalCarga LEFT OUTER JOIN
                         dbo.spcoentidades AS enER ON enER.Id = cia.IdEntidadReferencia
WHERE        (cia.Cancelado = 0)
ORDER BY cia.Nombre
GO
/****** Object:  View [dbo].[CompaniaLeasing]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CompaniaLeasing]
AS
SELECT     Id, Nombre, CIF, Tf1, Tf2
FROM         dbo.spcoentidades
WHERE     (Leasing = 'true') AND (Cancelado = 'false')
GO
/****** Object:  View [dbo].[Concepto1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Concepto1]
AS
SELECT     id, Nombre
FROM         dbo.spcoconcepto
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[ConceptosTransporte]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConceptosTransporte]
AS
SELECT     id, Nombre
FROM         dbo.spcoconcepto
WHERE     (Cancelado = 0) AND (IdTipoConcepto = 'TT' OR
                      IdTipoConcepto IS NULL OR
                      IdTipoConcepto = '0')
GO
/****** Object:  View [dbo].[ConcExplor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConcExplor]
AS
SELECT     Nombre, Observaciones, DesgloseSugerido
FROM         dbo.spcoconcepto
GO
/****** Object:  View [dbo].[Conductores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Conductores]
AS
SELECT     c.Id, c.Conductor, c.Camion, c.NIFConductor, c.IdEmpresaTransporte, ISNULL(ent.Nombre, c.Empresa) AS EmpresaTransporte
FROM         dbo.spedconductores AS c LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = c.IdEmpresaTransporte
GO
/****** Object:  View [dbo].[ConfigDireccion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConfigDireccion]
AS
SELECT        Id, TipoMantenimiento, Nombre, Texto, SnPorDefecto AS [Por Defecto]
FROM            dbo.spsiconfiguraciondirecciones
GO
/****** Object:  View [dbo].[ConfigMail]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConfigMail]
AS
SELECT     Descripcion, TipoDoc, Destinatarios, Asunto, Cuerpo, Id, GrupoBoton, Orden
FROM         dbo.spsiconfiguracionemails
GO
/****** Object:  View [dbo].[ConfiguracionImportacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConfiguracionImportacion]
AS
SELECT     Id, idOficina, Nombre, TipoDoc
FROM         dbo.spsiconfiguracionimportacion
GO
/****** Object:  View [dbo].[ConfiguracionImpresoras]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConfiguracionImpresoras]
AS
SELECT     Id, TipoDocumento, IdOficina, IdUsuario, snImpresionDirecta, Impresora, Usuario, Timestamp
FROM         dbo.spSiConfiguracionImpresoras
GO
/****** Object:  View [dbo].[ConfiguracionPanorama]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConfiguracionPanorama]
AS
SELECT     id, Nombre, Usuario, Timestamp
FROM         dbo.sppapanorama
GO
/****** Object:  View [dbo].[ConjuntosActivos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConjuntosActivos]
AS
SELECT     dbo.sptrconjuntos.Id, dbo.sptrconjuntos.Codigo, dbo.spsiusuario.Nombre AS Conductor, dbo.sptrtractoras.Codigo AS Tractora, 
                      dbo.sptrplataformas.Codigo AS Plataforma
FROM         dbo.sptrconjuntos LEFT OUTER JOIN
                      dbo.spsiusuario ON dbo.sptrconjuntos.idConductor = dbo.spsiusuario.Id LEFT OUTER JOIN
                      dbo.sptrplataformas ON dbo.sptrconjuntos.idPlataforma = dbo.sptrplataformas.Id LEFT OUTER JOIN
                      dbo.sptrtractoras ON dbo.sptrconjuntos.idTractora = dbo.sptrtractoras.Id
WHERE     (dbo.sptrconjuntos.SnActivo = 1)
GO
/****** Object:  View [dbo].[ConjuntosAlbaran]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConjuntosAlbaran]
AS
SELECT     dbo.sptrconjuntos.Id, dbo.sptrconjuntos.Codigo, dbo.sptrtractoras.Id AS IdTractora, dbo.sptrtractoras.Codigo AS Tractora, dbo.sptrplataformas.Id AS IdPlataforma, 
                      dbo.sptrplataformas.Codigo AS Plataforma, dbo.spsiusuario.Id AS IdConductor, dbo.spsiusuario.Nombre AS Conductor
FROM         dbo.sptrconjuntos LEFT OUTER JOIN
                      dbo.spsiusuario ON dbo.sptrconjuntos.idConductor = dbo.spsiusuario.Id LEFT OUTER JOIN
                      dbo.sptrplataformas ON dbo.sptrconjuntos.idPlataforma = dbo.sptrplataformas.Id LEFT OUTER JOIN
                      dbo.sptrtractoras ON dbo.sptrconjuntos.idTractora = dbo.sptrtractoras.Id
WHERE     (dbo.sptrconjuntos.SnActivo = 1)
GO
/****** Object:  View [dbo].[Conocimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Conocimientos]
AS
SELECT        TOP (100) PERCENT c.Id, c.IdBooking, c.PoblCarga, c.PoblDescarga, c.NomPoblCargaBL, c.NomPoblDescargaBL, c.FechaBL, c.EstadoConocimiento, 
                         c.NumBLArmador, b.IdOficina
FROM            dbo.spopconocimiento AS c INNER JOIN
                         dbo.spopbooking AS b ON b.Id = c.IdBooking
ORDER BY c.Id DESC
GO
/****** Object:  View [dbo].[ConocimientosProyecto]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConocimientosProyecto]
AS
SELECT     con.Id, rel.idReferenciaPadre AS IdProyecto
FROM         dbo.spepexpedientesrelacionados AS rel INNER JOIN
                      dbo.spopexpedienteviajes AS expv ON expv.IdExpediente = rel.IdReferenciaRelacionada AND rel.TipoReferenciaPadre = 'EP' AND 
                      rel.TipoReferenciaRelacionada = 'EXC' AND rel.IdReferenciaRelacionada >= 1700 INNER JOIN
                      dbo.spopbooking AS boo ON boo.IdExpedienteViaje = expv.Id INNER JOIN
                      dbo.spopconocimiento AS con ON con.IdBooking = boo.Id
GO
/****** Object:  View [dbo].[Consignatario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Consignatario]
AS
SELECT     Id, Nombre, CIF
FROM         dbo.spcoentidades
WHERE     (agenteConsignatario = 'true') AND (Cancelado = 'False')
GO
/****** Object:  View [dbo].[ConsignatarioContactos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConsignatarioContactos]
AS
SELECT DISTINCT ent.Id, ent.Nombre, ent.CIF, cent.Nombre + ISNULL(' ' + cent.Apellidos, '') AS Contacto, cent.Email
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad LEFT OUTER JOIN
                         dbo.spcocontactosentidades AS cent ON cent.idDireccion = dir.Id
WHERE        (ent.agenteConsignatario = 1) AND (ISNULL(dir.Cancelado, 0) = 0) AND (ISNULL(ent.Cancelado, 0) = 0)
GO
/****** Object:  View [dbo].[ContactosEntidades]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ContactosEntidades]
AS
SELECT     ce.Id, ent.Id AS Entidad, ce.Nombre, ce.Apellidos, ce.Email
FROM         dbo.spcocontactosentidades AS ce INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ce.IdEntidad
WHERE     (ce.Cancelado = 'False')
GO
/****** Object:  View [dbo].[ContactosEntidadesINTTRA]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ContactosEntidadesINTTRA]
AS
SELECT     ce.Id, ent.Id AS Entidad, ce.Nombre + IsNull(' ' + ce.Apellidos,'') as Contacto
FROM         dbo.spcocontactosentidades AS ce INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ce.IdEntidad
WHERE     ce.Cancelado = 0
GO
/****** Object:  View [dbo].[ContadorDocumentos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  ALTER VIEW [dbo].[ContadorDocumentos] as
  select id, TipoDocumento, NombreContador, FormatoContador, idOficina
  from spsiContadorDocumentos
GO
/****** Object:  View [dbo].[Contenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Contenedores]
AS
SELECT     c.Matricula, cc.Tipo, cc.Tamanyo AS Tamaño, c.Activo, ent.Nombre AS Cliente, c.idArmador, c.Tipo AS TipoEquipamiento, c.Danyado, c.idEntidad, c.IdCaracteristica, 
                      c.id, ISNULL(c.Tara, cc.Tara) AS Tara, cc.CodigoInternacional AS ISO, c.Tipo AS IdTipoEquipamiento
FROM         dbo.SpBmContenedor AS c LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS cc ON cc.Id = c.IdCaracteristica LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = c.idEntidad
GO
/****** Object:  View [dbo].[ConversionesArmador]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConversionesArmador]
AS
SELECT     id, tipo, CodigoEntidad, CodigoSP, idEntidad
FROM         dbo.spsiconversiones
WHERE     (tipo = 'APB')
GO
/****** Object:  View [dbo].[ConversionesCaracteristicasISO]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ConversionesCaracteristicasISO]
AS
SELECT     TOP (100) PERCENT dbo.spsiconversiones.CodigoEntidad, car.Descripcion, dbo.spsiconversiones.CodigoSP
FROM         dbo.spsiconversiones LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS car ON car.Id = dbo.spsiconversiones.CodigoSP
WHERE     (dbo.spsiconversiones.tipo = 'TTC') AND (dbo.spsiconversiones.idEntidad = 'ISO')
ORDER BY dbo.spsiconversiones.CodigoEntidad
GO
/****** Object:  View [dbo].[Corresponsal]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Corresponsal]
AS
SELECT     Id, Nombre, CIF
FROM         dbo.spcoentidades
WHERE     (Corresponsal = 'true') AND (Cancelado = 'false')
GO
/****** Object:  View [dbo].[CuentaBancaria]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CuentaBancaria]
AS
SELECT     Id, Descripcion, NumCuenta
FROM         dbo.spcacuentasbancarias
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[CuentasBancariasEntidad]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CuentasBancariasEntidad]
AS
SELECT     dbo.spcacuentasbancarias.Id AS Cuenta, dbo.spcacuentasbancarias.Descripcion AS [Desc.Cuenta], dbo.spcacuentasbancariasoficinas.IdOficina AS Oficina
FROM         dbo.spcacuentasbancarias INNER JOIN
                      dbo.spcacuentasbancariasoficinas ON dbo.spcacuentasbancarias.Id = dbo.spcacuentasbancariasoficinas.IdCuentaBancaria
GO
/****** Object:  View [dbo].[CuentasEmails]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[CuentasEmails]
AS
SELECT     id, Nombre, Email, Usuario, Timestamp
FROM         dbo.spsicuentasemails
GO
/****** Object:  View [dbo].[DatosAdicionalesPlantilla]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[DatosAdicionalesPlantilla]
AS
SELECT     id, Plantilla
FROM         dbo.spopfactsplantilla
WHERE     (snDatoAdicional = 'true')
GO
/****** Object:  View [dbo].[DepotTerminal]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[DepotTerminal]
AS
SELECT     Id, Nombre
FROM         dbo.spcoentidades
WHERE     (Depot = 'true') AND (Cancelado = 'false') OR
                      (terminal = 'true') AND (Cancelado = 'false')
GO
/****** Object:  View [dbo].[Despachos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Despachos]
AS
SELECT     Id, IdMercancia, DescrMercanciaArancel, IdArancel, TipoEmbarque, NumBultos, FechaDespacho,
                          (SELECT     TOP (1) dbo.spopbooking.IdOficina
                            FROM          dbo.spopbooking INNER JOIN
                                                   dbo.spopconocimiento ON dbo.spopbooking.Id = dbo.spopconocimiento.IdBooking INNER JOIN
                                                   dbo.spopconocimientomercancias ON dbo.spopconocimiento.Id = dbo.spopconocimientomercancias.IdConocimiento
                            WHERE      (dbo.spopconocimientodespachos.IdMercancia = dbo.spopconocimientomercancias.Id)) AS IdOficina
FROM         dbo.spopconocimientodespachos
GO
/****** Object:  View [dbo].[Destinos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Destinos]
AS
SELECT     dbo.sptrdestinos.Id, dbo.sptrdestinos.Codigo, dbo.sptrdestinos.Destino, dbo.sptrdestinos.Direccion, dbo.sptrdestinos.idCodigoPostal, 
                      dbo.splocodpostal.Codigo AS [Cod.Postal], dbo.sptrdestinos.idPoblacion, dbo.splopoblacion.Nombre AS Población, dbo.sptrdestinos.idProvincia, 
                      dbo.sploprovincias.Provincia, dbo.sptrdestinos.NomContacto AS Contacto, dbo.sptrdestinos.TelContacto AS Teléfono, dbo.sptrdestinos.Observaciones
FROM         dbo.sptrdestinos LEFT OUTER JOIN
                      dbo.splocodpostal ON dbo.sptrdestinos.idCodigoPostal = dbo.splocodpostal.Id LEFT OUTER JOIN
                      dbo.splopoblacion ON dbo.sptrdestinos.idPoblacion = dbo.splopoblacion.Id LEFT OUTER JOIN
                      dbo.sploprovincias ON dbo.sptrdestinos.idProvincia = dbo.sploprovincias.Id
WHERE     (dbo.sptrdestinos.Cancelado = 0)
GO
/****** Object:  View [dbo].[Direcciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Direcciones]
AS
SELECT     dir.Id, ent.Id AS IdEntidad, ent.Nombre, ISNULL(dir.DireccionConfigurada, dir.Direccion) AS Direccion, pais.Nombre AS Pais, dir.Provincia, 
                      pob.Nombre AS Poblacion
FROM         dbo.spcodireccionesentidades AS dir LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = dir.IdEntidad LEFT OUTER JOIN
                      dbo.splopais AS pais ON dir.Pais = pais.Id LEFT OUTER JOIN
                      dbo.splopoblacion AS pob ON dir.Poblacion = pob.Id
GO
/****** Object:  View [dbo].[DireccionesFacturacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[DireccionesFacturacion]
AS
SELECT        D.Id, D.IdEntidad, D.PrincipalFacturacion, D.Facturacion, D.Direccion, D.CP, pob.Nombre AS Poblacion, pa.Nombre AS Pais, D.DireccionConfigurada, D.Idioma, 
                         D.Poblacion AS IdPoblacion
FROM            dbo.spcodireccionesentidades AS D LEFT OUTER JOIN
                         dbo.splopoblacion AS pob ON pob.Id = D.Poblacion LEFT OUTER JOIN
                         dbo.splopais AS pa ON pa.Id = D.Pais
WHERE        (D.Cancelado = 0)
GO
/****** Object:  View [dbo].[DistanciasKilometricas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[DistanciasKilometricas]
AS
SELECT     dk.id, dk.IdPoblOrigen, dk.IdPoblDestino, dk.Distancia, pob1.Nombre AS PoblacionOrigen, pob2.Nombre AS PoblacionDestino, dk.Usuario, 
                      dk.Timestamp
FROM         dbo.sploDistKilomet AS dk LEFT OUTER JOIN
                      dbo.splopoblacion AS pob1 ON pob1.Id = dk.IdPoblOrigen LEFT OUTER JOIN
                      dbo.splopoblacion AS pob2 ON pob2.Id = dk.IdPoblDestino
GO
/****** Object:  View [dbo].[divisas1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[divisas1] as Select Id,Nombre from spfadivisa 
GO
/****** Object:  View [dbo].[DocsSitAduanera]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[DocsSitAduanera]
AS
SELECT     Id, TipoDocAsociado, SituacionAduanera, DescripcionDocumento, Mascara
FROM         dbo.spaddocsitaduanera
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[Embalaje2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Embalaje2]
AS
SELECT     Id, Descripcion AS Nombre, DescripcionCastellano AS Descripcion, esBilbaoPort, esPortel, esPortic, esValenciaPort, DescripcionBilbaoPort, DescripcionPortel, 
                      DescripcionPortic, DescripcionValenciaPort
FROM         dbo.spbmembalaje
GO
/****** Object:  View [dbo].[Embalajes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Embalajes]
AS
SELECT     Id, Descripcion AS Nombre, DescripcionCastellano AS Descripcion, esBilbaoPort, esPortel, esPortic, esValenciaPort, DescripcionBilbaoPort, DescripcionPortel, 
                      DescripcionPortic, DescripcionValenciaPort
FROM         dbo.spbmembalaje
GO
/****** Object:  View [dbo].[Embalajes2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Embalajes2]
AS
SELECT     Id, Descripcion AS Nombre, DescripcionCastellano AS Descripcion, esBilbaoPort, esPortel, esPortic, esValenciaPort, DescripcionBilbaoPort, DescripcionPortel, 
                      DescripcionPortic, DescripcionValenciaPort
FROM         dbo.spbmembalaje
GO
/****** Object:  View [dbo].[Empresas1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Empresas1]
AS
SELECT     Id, Nombre, CIF
FROM         dbo.spsiempresa
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[EntExplor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EntExplor] as Select Id,Nombre,Tf1,Fax,Email,LimiteCredito,EstadoCuenta,MargenCliente,CIF from spcoentidades 
GO
/****** Object:  View [dbo].[EntidadArmadores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER VIEW [dbo].[EntidadArmadores]
AS
SELECT     ent.Id, ent.Nombre, ent.CIF,ent.tf1,ent.tf2,replace(dir.direccion,char(10),' | ') 'Direccion',dir.poblacion,dir.cp
FROM         dbo.spcoentidades ent left outer join dbo.spcodireccionesentidades dir on ent.id=dir.identidad
WHERE     (ent.Cancelado = 'false') and dir.cancelado='false' and ent.armador='true'

GO
/****** Object:  View [dbo].[EntidadArmadoresFacturables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EntidadArmadoresFacturables]
AS
SELECT        ent.Id, ent.Nombre, ent.CIF, ent.Tf1, ent.Tf2, REPLACE(dir.Direccion, CHAR(10), ' | ') AS Direccion, dir.Poblacion, dir.CP
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad
WHERE        (ent.armador = 1) AND (ent.Cancelado = 0) AND (ent.Cliente = 1) AND (dir.Cancelado = 0)
GO
/****** Object:  View [dbo].[EntidadBancaria]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EntidadBancaria]
AS
SELECT        codigoBanco AS Codigo,
                             (SELECT        TOP (1) NombreBanco
                               FROM            dbo.spcaoficinasbancarias
                               WHERE        (codigoBanco = tabla.codigoBanco)) AS Entidad
FROM            (SELECT DISTINCT codigoBanco
                          FROM            dbo.spcaoficinasbancarias AS spcaoficinasbancarias_1) AS tabla
GO
/****** Object:  View [dbo].[EntidadDireccionDoc]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EntidadDireccionDoc] as
select en.Id, en.Nombre , dir.Direccion
from spcoentidades en
left join spcodireccionesentidades dir on en.id = dir.idEntidad
where dir.PrincipalDocumentacion = 1
GO
/****** Object:  View [dbo].[Entidades]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Entidades]
AS
SELECT DISTINCT TOP (100) PERCENT ent.Id, ent.Nombre, ent.CIF, REPLACE(REPLACE(ISNULL(dir.DireccionConfigurada, dir.Direccion), CHAR(13), '|'), CHAR(10), '') AS Direccion, dir.Poblacion, dir.CP, ent.ScacCode, ent.CodigoEORI
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad
WHERE        (ent.Cancelado = 'false') AND (ISNULL(dir.Cancelado, 0) = 0)
ORDER BY ent.Id
GO
/****** Object:  View [dbo].[EntidadesBroker]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[EntidadesBroker]
AS
SELECT DISTINCT e.Id, e.Nombre, e.CIF,replace(dir.direccion,char(10),' | ') 'Direccion',dir.poblacion,dir.cp
FROM         dbo.spcoentidades AS e LEFT OUTER JOIN
                      dbo.spcoentidadesoficinas AS eo ON eo.IdEntidad = e.Id left outer join
                      dbo.spcodireccionesentidades dir on e.id=dir.identidad
WHERE     (e.Cancelado = 'false') AND (e.SnBroker = 1)
GO
/****** Object:  View [dbo].[EntidadesCodigo]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[EntidadesCodigo]
AS
SELECT     ent.Id AS Codigo, ent.Nombre, ent.CIF, ent.Cancelado,replace(dir.direccion,char(10),' | ') 'Direccion',dir.poblacion,dir.cp
FROM         dbo.spcoentidades ent left outer join
                      dbo.spcodireccionesentidades dir on ent.id=dir.identidad
GO
/****** Object:  View [dbo].[EntidadesContactos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EntidadesContactos]
AS
SELECT     ent.Id AS 'CodigoEntidad', ent.Nombre AS 'NombreEntidad', ent.CIF, ent.Email, entC.Id AS 'IdContacto', entC.Nombre AS 'NombreContacto', 
                      entC.Apellidos AS 'ApellidosContacto', entC.Email AS 'EmailContacto'
FROM         dbo.spcoentidades AS ent LEFT OUTER JOIN
                      dbo.spcocontactosentidades AS entC ON ent.Id = entC.IdEntidad
WHERE     (NOT (entC.Email IS NULL)) AND (ent.Cancelado <> 1) AND (entC.Cancelado <> 1)
GO
/****** Object:  View [dbo].[EntidadesParticipesOT]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EntidadesParticipesOT]
AS
SELECT DISTINCT 
                         TOP (100) PERCENT ent.Id, ent.Nombre, ent.CIF, REPLACE(dir.Direccion, CHAR(10), ' | ') AS Direccion, dir.Poblacion, dir.CP, ent.ScacCode, ent.CodigoEORI, entfact.CIF AS CIFClienteFacturacion, ent.Transportista, ent.terminal, 
                         ent.estibador, ent.Depot, ent.agenteConsignatario, ent.Transitario, ent.Cliente, ent.Proveedor, ent.AgenteAduanas, ent.armador
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad LEFT OUTER JOIN
                         dbo.spcoentidades AS entfact ON entfact.Id = ent.idClienteFacturacion
WHERE        (ent.Cancelado = 'false') AND (ISNULL(dir.Cancelado, 0) = 0)
ORDER BY ent.Id
GO
/****** Object:  View [dbo].[EntidadesRemDest]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[EntidadesRemDest]
AS
SELECT     ent.Id, ent.Nombre, ent.CIF, ent.Cancelado,replace(dir.direccion,char(10),' | ') 'Direccion',dir.poblacion,dir.cp
FROM         dbo.spcoentidades ent left outer join
                      dbo.spcodireccionesentidades dir on ent.id=dir.identidad
WHERE     (RemitenteDestinatario = 1) AND (ent.Cancelado = 'false')
GO
/****** Object:  View [dbo].[EntidadesRiesgo]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EntidadesRiesgo]
AS
SELECT     r.Id, ent.Nombre AS Entidad, emp.Nombre AS Empresa, r.Activo, r.LimiteCredito, r.PorcAviso, r.Asegurado, r.Timestamp AS FechaUltimaModificacion, r.idEntidad, 
                      r.idEmpresa
FROM         dbo.spcoentidadesriesgo AS r INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = r.idEntidad INNER JOIN
                      dbo.spsiempresa AS emp ON emp.Id = r.idEmpresa
WHERE     (r.Id IN
                          (SELECT     TOP (1) Id
                            FROM          dbo.spcoentidadesriesgo
                            WHERE      (idEntidad = r.idEntidad) AND (idEmpresa = r.idEmpresa)
                            ORDER BY Timestamp DESC))
GO
/****** Object:  View [dbo].[EntidadesTerminalDepot]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[EntidadesTerminalDepot]
AS
SELECT     ent.Id, ent.Nombre, ent.CIF, ent.Cancelado,replace(dir.direccion,char(10),' | ') 'Direccion',dir.poblacion,dir.cp
FROM         dbo.spcoentidades ent left outer join
                      dbo.spcodireccionesentidades dir on ent.id=dir.identidad
WHERE     (ent.terminal = 1) OR
                      (ent.Depot = 1)
GO
/****** Object:  View [dbo].[EquipamientosChasis]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EquipamientosChasis]
AS
SELECT     c.Matricula, cc.Tipo, cc.Tamanyo, c.Activo, ent.Nombre AS Cliente, c.idArmador, c.Tipo AS TipoEquipamiento, c.Danyado, c.idEntidad
FROM         dbo.SpBmContenedor AS c LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS cc ON cc.Id = c.IdCaracteristica LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = c.idEntidad
WHERE     (c.Tipo = 'C')
GO
/****** Object:  View [dbo].[EquipamientosGeneradores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EquipamientosGeneradores]
AS
SELECT     c.Matricula, cc.Tipo, cc.Tamanyo, c.Activo, ent.Nombre AS Cliente, c.idArmador, c.Tipo AS TipoEquipamiento, c.Danyado, c.idEntidad
FROM         dbo.SpBmContenedor AS c LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS cc ON cc.Id = c.IdCaracteristica LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = c.idEntidad
WHERE     (c.Tipo = 'G')
GO
/****** Object:  View [dbo].[Estibador]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Estibador]
AS
SELECT     Id, Nombre, CIF, Tf1
FROM         dbo.spcoentidades
WHERE     (Cancelado = 'false') AND (estibador = 1) OR
                      (Cancelado = 'false') AND (terminal = 1)
GO
/****** Object:  View [dbo].[EvaluacionEntidad]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EvaluacionEntidad]
AS
SELECT     dbo.spquEvaluacionEntidad.id, dbo.spquEvaluacionEntidad.Codigo, dbo.spquEvaluacionEntidad.fechaEvaluacion, dbo.spquEvaluacionEntidad.PuntuacionGeneral, 
                      dbo.spquEvaluacionEntidad.Usuario, dbo.spquEvaluacionEntidad.TimeStamp, dbo.spcoentidades.Nombre
FROM         dbo.spquEvaluacionEntidad INNER JOIN
                      dbo.spcoentidades ON dbo.spquEvaluacionEntidad.Codigo = dbo.spcoentidades.Id
GO
/****** Object:  View [dbo].[EXP_AlbaranRecogida]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EXP_AlbaranRecogida]
AS
SELECT     Id, Codigo, CodigoExterno, Tipo AS TipoAlbaran, Descripcion, Transportista, Fecha, Estado AS EstadoAlbaran, Remitente, Destinatario, IdOficina, Observaciones
FROM         dbo.spalalbaran
WHERE     (Tipo = 'R')
GO
/****** Object:  View [dbo].[Exp_ReparacionesCab]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp_ReparacionesCab]
AS
SELECT     TOP (100) PERCENT Grupo, Codigo, Descripcion, DescripcionIngles, id, TipoReparacion, TipoContenedor, TamanyoContenedor, TipoPresupuesto
FROM         dbo.spedreparaciones
GO
/****** Object:  View [dbo].[Exp-Aeropuertos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Aeropuertos]
AS
SELECT     a.CodigoIATA, a.Nombre, a.Id, a.Cancelado, a.IdPoblacion, pob.Nombre AS Poblacion, pa.Id AS IdPais, pa.Nombre AS Pais
FROM         dbo.spbaaeropuertos AS a LEFT OUTER JOIN
                      dbo.splopoblacion AS pob ON pob.Id = a.IdPoblacion LEFT OUTER JOIN
                      dbo.splopais AS pa ON a.IdPais = pa.Id
GO
/****** Object:  View [dbo].[Exp-AgenteCarga]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-AgenteCarga] as Select Nombre,CodigoIATA,Cancelado from spbaagentecarga 
GO
/****** Object:  View [dbo].[EXP-Albaran]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EXP-Albaran]
AS
SELECT     Id, Codigo, CodigoExterno, Tipo AS TipoAlbaran, Descripcion, Transportista, Fecha, Estado AS EstadoAlbaran, Remitente, Destinatario, IdOficina, Observaciones
FROM         dbo.spalalbaran
GO
/****** Object:  View [dbo].[EXP-AlbaranEntrega]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EXP-AlbaranEntrega]
AS
SELECT     Id, Codigo, CodigoExterno, Tipo AS TipoAlbaran, Descripcion, Transportista, Fecha, Estado AS EstadoAlbaran, Remitente, Destinatario, IdOficina, Observaciones
FROM         dbo.spalalbaran
WHERE     (Tipo = 'E')
GO
/****** Object:  View [dbo].[EXP-AlbaranRecogida]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EXP-AlbaranRecogida]
AS
SELECT     Id, Codigo, CodigoExterno, Tipo AS TipoAlbaran, Descripcion, Transportista, Fecha, Estado AS EstadoAlbaran, Remitente, Destinatario, IdOficina, Observaciones
FROM         dbo.spalalbaran
WHERE     (Tipo = 'R')
GO
/****** Object:  View [dbo].[Exp-Almacenes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Almacenes]
AS
SELECT     Id, Codigo, Nombre, idOficina
FROM         dbo.spalalmacenes
GO
/****** Object:  View [dbo].[Exp-AplicaTarifas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-AplicaTarifas] as Select Id,Descripcion,TipoTrafico,Variable,Observaciones,Codigo from spcoaplicaciontarifas 
GO
/****** Object:  View [dbo].[Exp-AplicConceptos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-AplicConceptos]
AS
SELECT     ac.Id, ac.Descripcion, ac.TipoTrafico, ac.IdEntidad, ac.IdConcepto, c.CodigoConcepto, c.Nombre AS Concepto, ac.FormulaCondicion, ac.Codigo, 
                      ac.FormulaCalculadaCoste, ac.FormulaCalculadaVenta, ac.FechaEntrada, ac.FechaCaducidad, ac.GrupoOferta
FROM         dbo.spcoaplicacionconceptos AS ac INNER JOIN
                      dbo.spcoconcepto AS c ON c.id = ac.IdConcepto
GO
/****** Object:  View [dbo].[Exp-AreasGeograficas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-AreasGeograficas]
AS
SELECT     Id, Codigo, Descripcion, Cancelado
FROM         dbo.sploareageografica
GO
/****** Object:  View [dbo].[Exp-Articulos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Articulos]
AS
SELECT     Codigo, Nombre, idCliente, RefCliente, Id
FROM         dbo.spalarticulos
GO
/****** Object:  View [dbo].[Exp-Ayuda]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Ayuda]
AS
SELECT     id, Codigo, Nombre
FROM         dbo.spsiayuda
GO
/****** Object:  View [dbo].[Exp-Buques]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Buques]
AS
SELECT DISTINCT 
                         b.Id, b.Nombre, dva.descripcion AS TipoBuque, ISNULL(b.Calado, 0.00) AS Calado, ISNULL(b.TonelajeBruto, 0.00) AS TonelajeBruto, ISNULL(b.Manga, 0.00) 
                         AS Manga, ISNULL(b.Eslora, 0.00) AS Eslora, ISNULL(b.Capacidad, 0.00) AS Capacidad, b.Clasificacion, ISNULL(b.Cancelado, CONVERT(bit, 0)) AS Cancelado
FROM            dbo.spbmbuque AS b LEFT OUTER JOIN
                         dbo.spsiclavesvaloresaplicacion AS cva ON cva.clave = ISNULL(b.TipoBuque, NULL) AND cva.idVA =
                             (SELECT        id
                               FROM            dbo.spsivaloresaplicacion
                               WHERE        (TipoVA = 'TIPOSBUQUE')) LEFT OUTER JOIN
                         dbo.spsidescripcionidiomasvaloresaplicacion AS dva ON dva.idCVA = cva.id AND dva.idioma = 'ES'
GO
/****** Object:  View [dbo].[Exp-Calendario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Calendario]
AS
SELECT     Id, Codigo, Nombre
FROM         dbo.spsicalendario
GO
/****** Object:  View [dbo].[Exp-CargosAWBL]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-CargosAWBL]
AS
SELECT     Id, Codigo, Descripcion
FROM         dbo.spbaclasetarifa
GO
/****** Object:  View [dbo].[expCheckList]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[expCheckList] as Select Id,Descripcion,IdServicio,Defecto,Cancelado from spopchecklist 
GO
/****** Object:  View [dbo].[expCheckListItems]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[expCheckListItems] as Select id,descripcion,Cancelado from spopitemchecklist 
GO
/****** Object:  View [dbo].[expCLPeriod]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[expCLPeriod] as Select id,Descripcion,Cancelado from spopperiodicidadchecklist 
GO
/****** Object:  View [dbo].[Exp-CompaniaAerea]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-CompaniaAerea]
AS
SELECT     CodigoAlf, Nombre, Pais, CodigoNum, Direccion, IdEntidadReferencia, IATA, Cancelado
FROM         dbo.spbacompaniaaerea
GO
/****** Object:  View [dbo].[Exp-Conceptos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Conceptos]
AS
SELECT DISTINCT 
                      c.id, c.Nombre, c.CodigoConcepto, c.Observaciones, c.DesgloseSugerido, c.Cancelado, c.Coste, c.IdTipoConcepto, c.SnVoucher, c.Manifestable, c.ComisionCliente, 
                      c.OtrasComisiones, c.Facturable, c.PrecioUnitario, c.ConceptosContenedor, c.UnidadCambioFactura, c.AutorizacionVariarPrecio, c.ConceptosEspeciales, 
                      c.ConceptosOperativa,
                          (SELECT DISTINCT (CASE
                                                       (SELECT     COUNT(DISTINCT cpc.CuentaContableVenta)
                                                         FROM          spcoconceptoplanescontables cpc
                                                         WHERE      idConcepto = c.id AND CuentaContableVenta IS NOT NULL) WHEN 0 THEN NULL 
                                                   WHEN 1 THEN cpc.CuentaContableVenta ELSE 'VARIOS' END) AS CuentaContableVenta
                            FROM          dbo.spcoconceptoplanescontables AS cpc
                            WHERE      (idConcepto = c.id) AND (CuentaContableVenta IS NOT NULL)) AS [Cuenta Contable Venta],
                          (SELECT DISTINCT (CASE
                                                       (SELECT     COUNT(DISTINCT cpc.CuentaContableCompra)
                                                         FROM          spcoconceptoplanescontables cpc
                                                         WHERE      idConcepto = c.id AND CuentaContableCompra IS NOT NULL) WHEN 0 THEN NULL 
                                                   WHEN 1 THEN cpc.CuentaContableCompra ELSE 'VARIOS' END) AS CuentaContableCompra
                            FROM          dbo.spcoconceptoplanescontables AS cpc
                            WHERE      (idConcepto = c.id) AND (CuentaContableCompra IS NOT NULL)) AS [Cuenta Contable Compra]
FROM         dbo.spcoconcepto AS c LEFT OUTER JOIN
                      dbo.spcoconceptooficinas AS co ON co.idConcepto = c.id
GO
/****** Object:  View [dbo].[Exp-Conjuntos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Conjuntos]
AS
SELECT     con.Id, con.Codigo, usu.Nombre + ISNULL(' ' + usu.Apellidos, '') AS Conductor, tra.Codigo AS Tractora, pla.Codigo AS Plataforma, 
                      con.SnActivo AS Activo, ent.Nombre AS [Empresa Titular], cal.Nombre AS Calendario, ISNULL(con.Ranking, 0.00) AS [Factor Ponderación], 
                      ISNULL(con.RankingKM, 0.00) AS [Factor Kilómetros], con.Id AS Expr1, con.Codigo AS Expr2, con.idTractora, con.idPlataforma, con.idConductor, 
                      con.idCalendario, con.EmpresaTitular, con.FechaAlta, con.TipoAmbito, con.Ranking, con.RankingKM, con.CodigoGIF, con.SnActivo, con.SnGif, 
                      con.Observaciones, con.Usuario, con.TimeStamp
FROM         dbo.spsiusuario AS usu RIGHT OUTER JOIN
                      dbo.sptrconjuntos AS con ON usu.Id = con.idConductor LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON con.EmpresaTitular = ent.Id LEFT OUTER JOIN
                      dbo.spsicalendario AS cal ON con.idCalendario = cal.Id LEFT OUTER JOIN
                      dbo.sptrtractoras AS tra ON con.idTractora = tra.Id LEFT OUTER JOIN
                      dbo.sptrplataformas AS pla ON con.idPlataforma = pla.Id
GO
/****** Object:  View [dbo].[exp-Conocimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[exp-Conocimientos]
AS
SELECT     TOP (100) PERCENT c.Id, c.IdBooking, c.PoblCarga, c.PoblDescarga, c.FechaBL, c.FechaBL AS Fecha, c.FechaMuelle, c.EstadoConocimiento, b.IdOficina, 
                      ent.Nombre AS Cliente, bu.Nombre AS Buque, c.ObservacionesBL AS Observaciones, c.NumBLArmador
FROM         dbo.spopconocimiento AS c INNER JOIN
                      dbo.spopbooking AS b ON b.Id = c.IdBooking LEFT OUTER JOIN
                      dbo.spopexpedienteviajes AS ev ON ev.Id = b.IdExpedienteViaje LEFT OUTER JOIN
                      dbo.spopexpediente AS exp ON exp.Id = ev.IdExpediente LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = c.IdCliente LEFT OUTER JOIN
                      dbo.spbmbuque AS bu ON bu.Id = exp.IdBuque
ORDER BY c.Id DESC
GO
/****** Object:  View [dbo].[Exp-ContabilizarLineas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-ContabilizarLineas]
AS
SELECT     dbo.spopcontabilizarlinea.Id, dbo.spopcontabilizarlinea.Codigo, dbo.spopcontabilizarlinea.idOficina, dbo.spoplineas.Descripcion, 
                      dbo.spopcontabilizarlinea.ContabilizarComo
FROM         dbo.spopcontabilizarlinea INNER JOIN
                      dbo.spoplineas ON dbo.spopcontabilizarlinea.idLineaComercial = dbo.spoplineas.Id
GO
/****** Object:  View [dbo].[exp-Contactos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[exp-Contactos]
AS
SELECT     Nombre, Apellidos, TlfTrabajo, ExtensionTelefono, TlfMovil, TlfHogar, Resumen, Descripcion, FechaNacimiento, Genero, Nif, Observaciones, Email, IdEntidad, Id
FROM         dbo.spcocontactosentidades
WHERE     (ISNULL(Cancelado, 0) = 0)
GO
/****** Object:  View [dbo].[Exp-Contador]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Contador]
AS
SELECT     id, item
FROM         dbo.spsicontador
GO
/****** Object:  View [dbo].[ExpContenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpContenedores]
AS
SELECT     c.Matricula, cc.Tipo, cc.Tamanyo, c.Activo, c.idEntidad, c.idArmador, c.Tipo AS TipoEquipamiento, c.Danyado, cc.Tara, cc.CodigoInternacional AS ISO
FROM         dbo.SpBmContenedor AS c LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS cc ON cc.Id = c.IdCaracteristica
WHERE     (ISNULL(c.Activo, 0) = 1)
GO
/****** Object:  View [dbo].[Exp-Conversiones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Conversiones]
AS
SELECT     id, tipo, CodigoSP, CodigoEntidad, idEntidad, idOficina AS Oficina
FROM         dbo.spsiconversiones
GO
/****** Object:  View [dbo].[Exp-CuentaBan]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-CuentaBan]
AS
SELECT     Id, Descripcion, Cancelado
FROM         dbo.spcacuentasbancarias
GO
/****** Object:  View [dbo].[Exp-DocsItAduanera]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  ALTER VIEW [dbo].[Exp-DocsItAduanera]
AS SELECT [Id], [TipoDocAsociado], [SituacionAduanera], [DescripcionDocumento]
FROM [spaddocsitaduanera]
GO
/****** Object:  View [dbo].[Expediciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Expediciones]
AS
SELECT     exp.id, exp.Codigo, exp.idOficina, alm.Codigo AS CodigoAlmacen, alm.Nombre AS Almacen, exp.Descripcion
FROM         dbo.spalexpedicion AS expr INNER JOIN
                      dbo.spepexpediente AS exp ON exp.id = expr.id LEFT OUTER JOIN
                      dbo.spalalmacenes AS alm ON alm.Id = expr.idAlmacen
GO
/****** Object:  View [dbo].[Expedidor/Receptor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Expedidor/Receptor]
AS
SELECT     id, Denominacion, Nif, Telefono, Direccion, Poblacion, Provincia, CodPostal, idPuerto, PersonaContacto, CanalComunicacion, NumeroComunicacion, IdPais
FROM         dbo.spExpDestMMPP
GO
/****** Object:  View [dbo].[ExpedienteDepot]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedienteDepot]
AS
SELECT     expp.id AS idFormulario, expp.idOficina, expp.idCliente, entC.Nombre AS Cliente, expp.Fecha AS FechaAlta, expc.Estado, expc.Matricula AS Equipamiento, cc.Tipo, 
                      cc.Tamanyo AS Tamaño
FROM         dbo.spepexpediente AS expp INNER JOIN
                      dbo.spedExpediente AS expc ON expp.id = expc.id LEFT OUTER JOIN
                      dbo.spcoentidades AS entC ON entC.Id = expp.idCliente LEFT OUTER JOIN
                      dbo.SpBmContenedor AS cont ON cont.Matricula = expc.Matricula LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS cc ON cc.Id = cont.IdCaracteristica
GO
/****** Object:  View [dbo].[ExpedienteEnviadosViaje]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedienteEnviadosViaje]
AS
SELECT     IdExpediente,
                          (SELECT     CASE WHEN EXISTS
                                                       (SELECT     id
                                                         FROM          spmeCabeceraDeclSum cab
                                                         WHERE      exv.id = cab.idViajeExpediente AND TipoDoc = '785') THEN 1 ELSE 0 END AS AnyData) AS CabeceraDecl,
                          (SELECT     CASE WHEN EXISTS
                                                       (SELECT     id
                                                         FROM          spmeCabeceraDeclSum cab
                                                         WHERE      exv.id = cab.idViajeExpediente AND TipoDoc = '785') THEN 1 ELSE 0 END AS AnyData) AS CabeceraManif
FROM         dbo.spopexpedienteviajes AS exv
GO
/****** Object:  View [dbo].[ExpedienteProyectos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedienteProyectos]
AS
SELECT     TOP (100) PERCENT pr.id, pr.Estado, ex.Codigo, ex.idOficina, ex.Descripcion, dbo.spcoentidades.Nombre AS Cliente, ex.idCliente
FROM         dbo.spepexpediente AS ex INNER JOIN
                      dbo.spprproyectos AS pr ON ex.id = pr.id LEFT OUTER JOIN
                      dbo.spcoentidades ON ex.idCliente = dbo.spcoentidades.Id
GO
/****** Object:  View [dbo].[ExpedienteProyectosGT]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedienteProyectosGT]
AS
SELECT     TOP (100) PERCENT pr.id, pr.TipoProyecto, pr.EstadoProyecto, pr.Aplicacion, pr.Modulo AS Modulos, ex.Codigo, ex.idOficina, ex.Descripcion, 
                      dbo.spcoentidades.Nombre AS Cliente, ex.idCliente
FROM         dbo.spepexpediente AS ex INNER JOIN
                      dbo.spprproyectosGT AS pr ON ex.id = pr.id LEFT OUTER JOIN
                      dbo.spcoentidades ON ex.idCliente = dbo.spcoentidades.Id
GO
/****** Object:  View [dbo].[ExpedientesAlmacen]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedientesAlmacen]
AS
SELECT     exp.id, exp.Codigo, exp.idOficina, alm.Codigo AS CodigoAlmacen, alm.Nombre AS Almacen, cli.Nombre AS Cliente, exp.Descripcion
FROM         dbo.spalexpediente AS expr INNER JOIN
                      dbo.spepexpediente AS exp ON exp.id = expr.id LEFT OUTER JOIN
                      dbo.spcoentidades AS cli ON cli.Id = exp.idCliente LEFT OUTER JOIN
                      dbo.spalalmacenes AS alm ON alm.Id = expr.idAlmacen
GO
/****** Object:  View [dbo].[ExpedientesContenedor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedientesContenedor]
AS
SELECT     exp.Codigo, expr.Matricula AS Equipamiento, exp.idOficina, cc.Tipo AS TipoContenedor, cc.Tamanyo AS TamanyoContenedor, cli.Nombre AS Cliente, exp.id, 
                      exp.Fecha, exp.Observaciones
FROM         dbo.spedExpediente AS expr INNER JOIN
                      dbo.spepexpediente AS exp ON exp.id = expr.id LEFT OUTER JOIN
                      dbo.spcoentidades AS cli ON cli.Id = exp.idCliente LEFT OUTER JOIN
                      dbo.SpBmContenedor AS cont ON cont.Matricula = expr.Matricula LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS cc ON cc.Id = cont.IdCaracteristica
GO
/****** Object:  View [dbo].[ExpedientesPersonal]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedientesPersonal]
AS
SELECT     exp.id, exp.Codigo, exp.idOficina, dbo.spcoentidades.Nombre AS Cliente, REPLACE(dbo.ConvertFecha(exp.Fecha), '-', '/') AS Fecha
FROM         dbo.spplexpedientepersonal AS expr INNER JOIN
                      dbo.spepexpediente AS exp ON exp.id = expr.id INNER JOIN
                      dbo.spcoentidades ON exp.idCliente = dbo.spcoentidades.Id
GO
/****** Object:  View [dbo].[ExpedientesRoundTrip]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedientesRoundTrip]
AS
SELECT     exp.id, exp.Codigo, exp.idOficina, buq.Nombre AS Buque, arm.Nombre AS Armador, expr.FechaInicial AS FechaLlegada, expr.FechaFin AS FechaSalida, 
                      exp.Descripcion
FROM         dbo.spopexpedienteroundtrip AS expr INNER JOIN
                      dbo.spepexpediente AS exp ON exp.id = expr.id LEFT OUTER JOIN
                      dbo.spbmbuque AS buq ON buq.Id = expr.idBuque LEFT OUTER JOIN
                      dbo.spcoentidades AS arm ON arm.Id = expr.idArmador
GO
/****** Object:  View [dbo].[ExpedientesRoundTripRouting]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedientesRoundTripRouting]
AS
SELECT     expe.Codigo AS Expediente, exprtr.id, exprtr.idPuerto, p.IdPoblacion AS PoblPuerto, p.Descripcion AS DescPuerto, exprtr.DireccionViaje
FROM         dbo.spopexpedienteroundtriprouting AS exprtr INNER JOIN
                      dbo.spopexpedienteroundtrip AS rt ON rt.id = exprtr.idExpediente INNER JOIN
                      dbo.spopexpediente AS expe ON expe.Id = rt.id LEFT OUTER JOIN
                      dbo.spbmpuerto AS p ON p.Id = exprtr.idPuerto
GO
/****** Object:  View [dbo].[ExpedientesServicios]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedientesServicios]
AS
SELECT     exp.id, exp.Codigo, exp.idOficina, dbo.spcoentidades.Nombre AS Cliente, REPLACE(dbo.ConvertFecha(exp.Fecha), '-', '/') AS Fecha
FROM         dbo.spplexpedienteservicios AS expr INNER JOIN
                      dbo.spepexpediente AS exp ON exp.id = expr.id INNER JOIN
                      dbo.spcoentidades ON exp.idCliente = dbo.spcoentidades.Id
GO
/****** Object:  View [dbo].[ExpedientesTransito]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedientesTransito]
AS
SELECT        TOP (100) PERCENT ex.Id, ex.IdOficina, ex.Expediente, ex.TipoTrafico, ex.Descripcion, ent.Nombre AS Cliente, entRem.Nombre AS Remitente, 
                         entDes.Nombre AS Destinatario, ex.NumBooking, ex.Via, v.Descripcion AS Viaje, ex.FechaInicio, ex.idExpPlantilla, ex.IdCliente
FROM            dbo.spexexpediente AS ex LEFT OUTER JOIN
                         dbo.spcoentidades AS ent ON ent.Id = ex.IdCliente LEFT OUTER JOIN
                         dbo.spcoentidades AS entRem ON entRem.Id = ex.IdRemitente LEFT OUTER JOIN
                         dbo.spcoentidades AS entDes ON entDes.Id = ex.IdDestinatario LEFT OUTER JOIN
                         dbo.spexviaje AS v ON v.Id = ex.IdViaje
GO
/****** Object:  View [dbo].[ExpedientesTransitoSinViaje]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedientesTransitoSinViaje]
AS
SELECT     ex.Id, ex.IdOficina, ex.Expediente, ex.TipoTrafico, ex.Descripcion, ent.Nombre AS Cliente, entRem.Nombre AS Remitente, entDes.Nombre AS Destinatario, 
                      ex.NumBooking, ex.Via, dbo.ConvertFechaStringToDate(ex.FechaInicio) AS FechaInicio
FROM         dbo.spexexpediente AS ex LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ex.IdCliente LEFT OUTER JOIN
                      dbo.spcoentidades AS entRem ON entRem.Id = ex.IdRemitente LEFT OUTER JOIN
                      dbo.spcoentidades AS entDes ON entDes.Id = ex.IdDestinatario
WHERE     (ex.IdViaje IS NULL) AND (ex.Id IN
                          (SELECT     IdExpediente
                            FROM          dbo.spexpartida)) AND (ex.FechaInicio > '20100401')
GO
/****** Object:  View [dbo].[ExpedientesTransportes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpedientesTransportes]
AS
SELECT     exp.id, exp.Codigo, exp.idOficina, dbo.spcoentidades.Nombre AS Cliente, REPLACE(dbo.ConvertFecha(exp.Fecha), '-', '/') AS Fecha, expr.Origen, expr.Destino, 
                      expr.CompañiaTransporte
FROM         dbo.spplexpedientetransportes AS expr INNER JOIN
                      dbo.spepexpediente AS exp ON exp.id = expr.id INNER JOIN
                      dbo.spcoentidades ON exp.idCliente = dbo.spcoentidades.Id
GO
/****** Object:  View [dbo].[Exp-EfectosCartera]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-EfectosCartera]
AS
SELECT        dbo.spcaefectos.Id, dbo.spcaefectos.EntidadBancaria AS [Codigo Bancario], (CASE
                             (SELECT        COUNT(*)
                               FROM            spcaoficinasbancarias
                               WHERE        CodigoBanco = EntidadBancaria) WHEN 0 THEN 'OTROS' ELSE
                             (SELECT        TOP (1) NombreBanco
                               FROM            dbo.spcaoficinasbancarias
                               WHERE        codigoBanco = dbo.spcaefectos.EntidadBancaria) END) AS [Entidad Bancaria],
                             (SELECT        TOP (1) dcva.descripcion
                               FROM            dbo.spsivaloresaplicacion AS va LEFT OUTER JOIN
                                                         dbo.spsiclavesvaloresaplicacion AS cva ON cva.idVA = va.id LEFT OUTER JOIN
                                                         dbo.spsidescripcionidiomasvaloresaplicacion AS dcva ON dcva.idCVA = cva.id
                               WHERE        (va.TipoVA = 'TipoCartera') AND (cva.clave = dbo.spcaefectos.Tipo) AND (dcva.idioma = 'ES')) AS Tipo, dbo.spcaefectos.Importe, 
                         dbo.spcaefectos.IdDivisa, REPLACE(dbo.ConvertFecha(dbo.spcaefectos.Fecha), '-', '/') AS Fecha, REPLACE(dbo.ConvertFecha(dbo.spcaefectos.FechaVencimiento), '-', 
                         '/') AS FechaVencimiento, dbo.spcaefectos.Referencia, dbo.spcaefectos.ImportePendiente, dbo.spcaefectos.IdEntidad, ent.Nombre AS NomEntidad,
                             (SELECT        TOP (1) dcva.descripcion
                               FROM            dbo.spsivaloresaplicacion AS va LEFT OUTER JOIN
                                                         dbo.spsiclavesvaloresaplicacion AS cva ON cva.idVA = va.id LEFT OUTER JOIN
                                                         dbo.spsidescripcionidiomasvaloresaplicacion AS dcva ON dcva.idCVA = cva.id
                               WHERE        (va.TipoVA = 'ESTADOEFECTOSCARTERA') AND (cva.clave = dbo.spcaefectos.Estado) AND (dcva.idioma = 'ES')) AS Estado, 
                         dbo.spcaefectos.IdRemesa AS Remesa
FROM            dbo.spcaefectos LEFT OUTER JOIN
                         dbo.spcoentidades AS ent ON ent.Id = dbo.spcaefectos.IdEntidad
GO
/****** Object:  View [dbo].[Exp-Embalajes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Embalajes]
AS
SELECT     Id, Descripcion AS Nombre, DescripcionCastellano AS Descripcion, esBilbaoPort, esPortel, esPortic, DescripcionBilbaoPort, DescripcionPortel, 
                      DescripcionPortic
FROM         dbo.spbmembalaje
GO
/****** Object:  View [dbo].[Exp-Empresas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Empresas] as Select Id,Nombre,CIF,Cancelado from spsiempresa 
GO
/****** Object:  View [dbo].[Exp-Entidad]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[Exp-Entidad]
AS
SELECT     en.Id, en.Nombre, en.Tf1, en.Fax, en.Email, fpc.Descripcion AS FormaCobro, fpp.Descripcion AS FormaPago, en.EstadoCuenta, en.MargenCliente, en.CIF, 
                      en.Cancelado, en.Cliente, en.Proveedor, en.Transportista, en.AgenteAduanas, en.RemitenteDestinatario, en.Corresponsal, en.OtroTipo, en.autoridadPortuaria, 
                      en.terminal, en.armador, en.estibador, en.agenteConsignatario, en.Depot, en.Transitario, en.ClientePotencial,
                      replace(dir.direccion,char(10),' | ') 'Direccion',dir.poblacion,dir.cp
FROM         dbo.spcoentidades AS en LEFT OUTER JOIN
                      dbo.spfaformapago AS fpc ON en.IdFormaCobro = fpc.Id LEFT OUTER JOIN
                      dbo.spfaformapago AS fpp ON en.IdFormaPago = fpp.Id LEFT OUTER JOIN
					dbo.spcodireccionesentidades dir on en.id=dir.identidad
GO
/****** Object:  View [dbo].[Exp-Expedientes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Expedientes]
AS
SELECT        TOP (100) PERCENT dbo.spopexpediente.Id, dbo.spopexpediente.Codigo, dbo.spopexpediente.IdBuque, dbo.spbmbuque.Nombre AS Buque, 
                         dbo.spopexpediente.NumeroEscala, dbo.spopexpediente.IdOficina, dbo.spopexpediente.Observaciones, ent.Nombre AS Cliente,
                             (SELECT        TOP (1) FechaLlegada
                               FROM            dbo.spopexpedienteatraques AS exa
                               WHERE        (IdExpediente = dbo.spopexpediente.Id)) AS Fecha, dbo.spopexpediente.TipoExpediente
FROM            dbo.spopexpediente LEFT OUTER JOIN
                         dbo.spbmbuque ON dbo.spopexpediente.IdBuque = dbo.spbmbuque.Id LEFT OUTER JOIN
                         dbo.spcoentidades AS ent ON ent.Id = dbo.spopexpediente.IdCliente
GO
/****** Object:  View [dbo].[Exp-ExpedientesCAdministracion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-ExpedientesCAdministracion]
AS
SELECT     dbo.spopexpediente.Id, dbo.spopexpediente.Codigo, dbo.spopexpediente.IdBuque, dbo.spbmbuque.Nombre AS Buque, dbo.spopexpediente.NumeroEscala, 
                      dbo.spopexpediente.IdOficina, dbo.spopexpediente.Observaciones, ent.Nombre AS Cliente,
                          (SELECT     TOP (1) FechaLlegada
                            FROM          dbo.spopexpedienteatraques AS exa
                            WHERE      (IdExpediente = dbo.spopexpediente.Id)) AS Fecha
FROM         dbo.spopexpediente LEFT OUTER JOIN
                      dbo.spbmbuque ON dbo.spopexpediente.IdBuque = dbo.spbmbuque.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = dbo.spopexpediente.IdCliente
WHERE     (dbo.spopexpediente.TipoExpediente = 'AD')
GO
/****** Object:  View [dbo].[ExpExplorTransitos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpExplorTransitos]
AS
SELECT     Expediente, IdCliente, TipoTrafico, Estado, Descripcion, Incoterm, IdServicio, IdOferta, FechaInicio, Id, IdOficina
FROM         dbo.spexexpediente
GO
/****** Object:  View [dbo].[Exp-Familias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Familias]
AS
SELECT     Codigo, Nombre, Descripcion, Id
FROM         dbo.spalfamilias
GO
/****** Object:  View [dbo].[Exp-FormasPago]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-FormasPago]
AS
SELECT     fp.Id AS Codigo, fp.Descripcion, fp.Cancelado, td.Nombre AS TipoDocumento
FROM         dbo.spfaformapago AS fp LEFT OUTER JOIN
                      dbo.spfatipodocumento AS td ON fp.IdTipoDocumento = td.Id
GO
/****** Object:  View [dbo].[Exp-GrupoEntidades]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-GrupoEntidades]
AS
SELECT     Id, Codigo
FROM         dbo.spcogrupoentidades
GO
/****** Object:  View [dbo].[Exp-GrupoMercancia]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-GrupoMercancia]
AS
SELECT     Id, Descripcion AS Descripción
FROM         dbo.spILVAGrupoMercancia
GO
/****** Object:  View [dbo].[Exp-GrupoUsuarios]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-GrupoUsuarios] as Select Id,Nombre,Cancelado from SpSiGrupoUsuarios 
GO
/****** Object:  View [dbo].[Exp-Idiomas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Idiomas]
AS
SELECT     Codigo, Descripcion AS Descripción
FROM         dbo.spsiidiomas
GO
/****** Object:  View [dbo].[Exp-Impuestos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Impuestos]
AS
SELECT     Id, Codigo, Cancelado
FROM         dbo.spfaimpuestos
GO
/****** Object:  View [dbo].[Exp-JornadaLaboral]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-JornadaLaboral]
AS
SELECT     Id, IdConductor AS Personal, SUBSTRING(Fecha, 7, 2) + '/' + SUBSTRING(Fecha, 5, 2) + '/' + SUBSTRING(Fecha, 0, 5) AS Fecha, SUBSTRING(HoraInicio, 1, 2) 
                      + ':' + SUBSTRING(HoraInicio, 3, 2) AS HoraInicio, SUBSTRING(HoraFinal, 1, 2) + ':' + SUBSTRING(HoraFinal, 3, 2) AS HoraFinal, Descripcion AS Descripción, 
                      Observaciones, ImporteLibre AS [Importe Libre], SnADR AS ADR, SnOtros AS Otros
FROM         dbo.sptrjornadalaboral
GO
/****** Object:  View [dbo].[exp-lineastrafico]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[exp-lineastrafico]
AS
SELECT     id, descripcion, TipoTrafico, cancelado
FROM         dbo.spexlineastrafico
GO
/****** Object:  View [dbo].[exp-manuales]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[exp-manuales]
AS
SELECT     Nombre, Descripción, version, NombreFichero
FROM         dbo.spsimanuales
WHERE     (Tipo = 'MAN')
GO
/****** Object:  View [dbo].[Exp-MatPelMaritimas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-MatPelMaritimas]
AS
SELECT     NumOnu, Clase, Substancia, GrupoEnvasado, NombreEmbarqueApropiado, ProperShippingName, id, Cancelado
FROM         dbo.spmmppmaritimas
WHERE     (Cancelado = 0)
GO
/****** Object:  View [dbo].[Exp-MotivosExencion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-MotivosExencion]
AS
SELECT        Id, Descripcion, Trafico, Ambito, Idioma, Tipo, Motivo
FROM            dbo.spfaconfmotivosexencion
GO
/****** Object:  View [dbo].[Exp-MovimientoContenedorDepot]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-MovimientoContenedorDepot]
AS
SELECT     id, idExpediente, idAlmacen, idOficina, idCliente, MatriculaContenedor, Precintos, Tara, PMM, NumContadorCiclo, NumContadorMovimiento, idTipoMovimiento, 
                      Mecanismo, Estado, EstadoMaquina, FechaMovimiento, HoraMovimiento, Booking, NumeroEDI, NumeroEDI2, Observaciones, ObservacionesEDI, FechaTransmision, 
                      HoraTransmision, idUbicacionOrigen, idUbicacionDestino, idTransportista, MatriculaCamion, NIFConductor, Conductor, SnTransmitidoArmador, Temperatura, 
                      TemperaturaMinima, TemperaturaMaxima, UnidadMedidaTemperatura, Ventilacion, MatriculaGenerador, ModeloGenerador, Autonomia, NivelGenerador, SnAveriado, 
                      snSucio, snAveriadoChasis, snAveriadoGenerador, Usuario, TimeStamp
FROM         dbo.spedMovimientoContenedor
GO
/****** Object:  View [dbo].[ExpMovimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpMovimientos] as Select Tipo,Descripcion,Actuacion,TipoMovimiento,Cancelado from SpBmTipoMovimiento 
GO
/****** Object:  View [dbo].[ExpMovimientoSig]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpMovimientoSig] as Select MovimientoInicial,EstadoInicial,MovimientoFinal,EstadoFinal,id,cancelado from SpBmMovimientoSiguiente 
GO
/****** Object:  View [dbo].[Exp-MPAereas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-MPAereas]
AS
SELECT     id, NumOnu, Clase, Descripcion, GrupoEnvasado AS [Grupo Embalaje], Cancelado
FROM         dbo.spmmppaereas
GO
/****** Object:  View [dbo].[Exp-MPTerrestres]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-MPTerrestres] as Select NumOnu,Descripcion,Clase,GrupoEnvasado,Cancelado,Id from spmmppterrestres 
GO
/****** Object:  View [dbo].[ExpMuelles]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpMuelles] as Select id,Codigo,Descripcion,Alineacion,IdPuerto,Cancelado from spbmmuelle 
GO
/****** Object:  View [dbo].[Exp-ObservacionesFijas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-ObservacionesFijas]
AS
SELECT        Id,
                             (SELECT        dva.descripcion
                               FROM            dbo.spsivaloresaplicacion AS va INNER JOIN
                                                         dbo.spsiclavesvaloresaplicacion AS cva ON cva.idVA = va.id INNER JOIN
                                                         dbo.spsidescripcionidiomasvaloresaplicacion AS dva ON dva.idCVA = cva.id
                               WHERE        (va.TipoVA = 'TIPOOBSERVACIONESFIJAS') AND (dva.idioma = 'ES') AND (cva.clave = dbo.spsiobservacionesfijas.Tipo)) AS Tipo, Descripcion, 
                         Observaciones, SnPorDefecto AS [Por Defecto], Tipo AS Codigo, Idioma
FROM            dbo.spsiobservacionesfijas
GO
/****** Object:  View [dbo].[Exp-Oferta]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Oferta]
AS
SELECT     Id, oferta, IdOficina, Usuario, TimeStamp
FROM         dbo.spcooferta
GO
/****** Object:  View [dbo].[Exp-OfiBanc]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-OfiBanc] as Select id,NombreBanco,codigoBanco,codigoOficina,Cancelado from spcaoficinasbancarias 
GO
/****** Object:  View [dbo].[Exp-Paises]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Paises] as Select Id,Nombre,CE from splopais 
GO
/****** Object:  View [dbo].[exp-partidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[exp-partidas]
AS
SELECT     p.Bultos, p.IdEmbalaje, p.PesoBruto, p.Ancho, p.Largo, p.Alto, p.ReferenciaCorresponsal, p.ReferenciaCliente, p.ReferenciaFabricante, 
                      p.FechaInicioRecogida, p.IdOrigen, p.IdDestino, p.MetrosLineales, p.Observaciones, p.IdExpediente, e.IdOficina
FROM         dbo.spexpartida AS p INNER JOIN
                      dbo.spexexpediente AS e ON e.Id = p.IdExpediente
GO
/****** Object:  View [dbo].[Exp-Patrones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Patrones]
AS
SELECT     dbo.spfapatrones.Id, dbo.spfapatrones.Descripcion, dbo.spfapatrones.TipoTrafico, dbo.spfapatrones.Cliente, dbo.spfapatrones.Ambito
                ,dbo.SubstringHastaFinal(
                (SELECT ', ' + idOficina FROM  dbo.spfapatronesoficinas 
                where(dbo.spfapatrones.Id = dbo.spfapatronesoficinas.idPatron) 
                FOR XML PATH('') ) ,3) as Oficinas
FROM         dbo.spfapatrones
GO
/****** Object:  View [dbo].[Exp-PatronesTransporte]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-PatronesTransporte]
AS
SELECT     Id, Codigo, Nombre, TipoTrafico AS [Tipo Tráfico]
FROM         dbo.sptrpatrones
GO
/****** Object:  View [dbo].[exp-pdfversiones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[exp-pdfversiones]
AS
SELECT        TOP (100) PERCENT Nombre, version, NombreFichero, Descripción
FROM            dbo.spsimanuales
WHERE        (Tipo = 'VER')
ORDER BY id DESC
GO
/****** Object:  View [dbo].[Exp-Personal]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Personal]
AS
SELECT     dbo.spsiusuario.Id, dbo.spsiusuario.Nombre, dbo.spsiusuario.Apellidos, dbo.spsiusuario.DniNif, dbo.spcoentidades.Nombre AS [Empresa Titular], 
                      dbo.spsiusuario.Cancelado, dbo.ConvertFecha(dbo.spsiusuario.FechaNacimiento) AS [Fecha Nacimiento], dbo.ConvertFecha(dbo.spsiusuario.FechaDNI) 
                      AS [Fecha DNI], dbo.ConvertFecha(dbo.spsiusuario.FechaExtracomunitario) AS [Fecha Extracomunitario], dbo.ConvertFecha(dbo.spsiusuario.FechaCAP) 
                      AS [Fecha CAP], dbo.ConvertFecha(dbo.spsiusuario.FechaADR) AS [Fecha ADR], dbo.ConvertFecha(dbo.spsiusuario.FechaConducir) AS [Fecha Conducir], 
                      dbo.ConvertFecha(dbo.spsiusuario.FechaTacografo) AS [Fecha Tacógrafo], dbo.ConvertFecha(dbo.spsiusuario.FechaPuerto) AS [Fecha Puerto], 
                      dbo.spsicalendario.Nombre AS Calendario
FROM         dbo.spsiusuario LEFT OUTER JOIN
                      dbo.spsicalendario ON dbo.spsiusuario.idCalendario = dbo.spsicalendario.Id LEFT OUTER JOIN
                      dbo.spcoentidades ON dbo.spsiusuario.EmpresaTitular = dbo.spcoentidades.Id
WHERE     (dbo.spsiusuario.SnUsuarioSuite = 0)
GO
/****** Object:  View [dbo].[Exp-PiezasPendientesFacturarILVATransportes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-PiezasPendientesFacturarILVATransportes]
AS
SELECT     ex.Id, ex.Codigo, ex.IdBuque, co.NumBLArmador, co.PoblDestino, bo.NombreCliente, cm.DescrMercanciaBL, cm.NumSeriePieza, cm.PesoBruto, cm.MatriculaILVA, 
                      cm.Albaran, dbo.ConvertFecha(cm.FechaSalida) AS FechaSalida, dbo.ConvertFecha(cm.FechaTransmision) AS FechaTransmision, cm.SnTransmision
FROM         dbo.spopconocimientomercancias AS cm LEFT OUTER JOIN
                      dbo.spopconocimiento AS co ON co.Id = cm.IdConocimiento LEFT OUTER JOIN
                      dbo.spopbooking AS bo ON bo.Id = co.IdBooking LEFT OUTER JOIN
                      dbo.spopexpedienteviajes AS ev ON bo.IdExpedienteViaje = ev.Id LEFT OUTER JOIN
                      dbo.spopexpediente AS ex ON ex.Id = ev.IdExpediente
WHERE     (ex.IdOficina = 'MADILV') AND (cm.SnEnFactura_TRA = 0) AND (cm.SnPiezaFacturada_TRA = 0) AND (cm.SnPiezaFacturadaAntigua_TRA = 0)
GO
/****** Object:  View [dbo].[Exp-Plataformas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Plataformas]
AS
SELECT     pla.Id, pla.Codigo, ent.Nombre AS [Empresa Titular], pla.Modelo, dbo.ConvertFecha(pla.FechaADR) AS [Fecha ADR], dbo.ConvertFecha(pla.FechaITV) AS [Fecha ITV], 
                      dbo.ConvertFecha(pla.FechaSeguro) AS [Fecha Seguro], pla.NumEjes, pla.SnActivo AS Activo, pla.SnSuspension AS [Suspensión neumática], pla.SnReefer AS Reefer, 
                      cal.Nombre AS Calendario, con.Codigo AS Conjunto, usu.Nombre + ISNULL(' ' + usu.Apellidos, '') AS Conductor, tra.Codigo AS Tractora
FROM         dbo.sptrplataformas AS pla LEFT OUTER JOIN
                      dbo.spsicalendario AS cal ON pla.idCalendario = cal.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON pla.EmpresaTitular = ent.Id LEFT OUTER JOIN
                      dbo.sptrconjuntos AS con ON pla.Id = con.idPlataforma LEFT OUTER JOIN
                      dbo.spsiusuario AS usu ON usu.Id = con.idConductor LEFT OUTER JOIN
                      dbo.sptrtractoras AS tra ON tra.Id = con.idTractora
GO
/****** Object:  View [dbo].[exp-Poblaciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[exp-Poblaciones]
AS
SELECT     po.Id, po.Nombre, pa.Nombre AS Pais, po.Maritima, po.IdPais, po.IdLinea, lin.Codigo AS CodigoLinea, lin.Descripcion AS DescripcionLinea, po.Cancelado, 
                      po.IdPoblacionTransbordoCarga, pobtcarga.Nombre AS NomPoblacionTransbordoCarga, po.IdPoblacionTransbordoDescarga, 
                      pobtdescarga.Nombre AS NomPoblacionTransbordoDescarga
FROM         dbo.splopoblacion AS po LEFT OUTER JOIN
                      dbo.splopais AS pa ON pa.Id = po.IdPais LEFT OUTER JOIN
                      dbo.spoplineas AS lin ON lin.Id = po.IdLinea LEFT OUTER JOIN
                      dbo.splopoblacion AS pobtcarga ON pobtcarga.Id = po.IdPoblacionTransbordoCarga LEFT OUTER JOIN
                      dbo.splopoblacion AS pobtdescarga ON pobtdescarga.Id = po.IdPoblacionTransbordoDescarga
WHERE     (ISNULL(po.Cancelado, 0) = 0)
GO
/****** Object:  View [dbo].[Exp-Proforma]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Proforma]
AS
SELECT     pro.Id, pro.IdOficina, pro.IdPuerto, pro.IdBuque, bu.Nombre AS Buque, pro.NombreArmador, pro.Fecha, pro.Observaciones, pro.Codigo
FROM         dbo.spcoproforma AS pro LEFT OUTER JOIN
                      dbo.spbmbuque AS bu ON bu.Id = pro.IdBuque
GO
/****** Object:  View [dbo].[EXpPuerto]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[EXpPuerto] as Select Id,IdPoblacion,idAutoridadPortuaria,Descripcion,Cancelado from spbmpuerto 
GO
/****** Object:  View [dbo].[Exp-Recargos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Recargos]
AS
SELECT     Id, Codigo, Incidencia AS Recargo,
                          (SELECT     dva.descripcion
                            FROM          dbo.spsiclavesvaloresaplicacion AS cva LEFT OUTER JOIN
                                                   dbo.spsidescripcionidiomasvaloresaplicacion AS dva ON dva.idCVA = cva.id LEFT OUTER JOIN
                                                   dbo.spsivaloresaplicacion AS va ON va.id = cva.idVA
                            WHERE      (va.TipoVA = 'TIPOINCIDENCIATRANSPORTE') AND (cva.clave = dbo.sptrrecargos.TipoIncidencia) AND (dva.idioma = 'ES')) AS 'Tipo Recargo'
FROM         dbo.sptrrecargos
GO
/****** Object:  View [dbo].[Exp-Remesas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Remesas]
AS
SELECT        r.Id, r.IdOficina AS Oficina, ob.codigoBanco, cb.Descripcion AS CuentaBancaria,
                             (SELECT        TOP (1) dcva.descripcion
                               FROM            dbo.spsivaloresaplicacion AS va LEFT OUTER JOIN
                                                         dbo.spsiclavesvaloresaplicacion AS cva ON cva.idVA = va.id LEFT OUTER JOIN
                                                         dbo.spsidescripcionidiomasvaloresaplicacion AS dcva ON dcva.idCVA = cva.id
                               WHERE        (va.TipoVA = 'TIPOEFECTOREMESA') AND (cva.clave = r.TipoEfecto) AND (dcva.idioma = 'ES')) AS [Tipo Efecto],
                             (SELECT        TOP (1) dcva.descripcion
                               FROM            dbo.spsivaloresaplicacion AS va LEFT OUTER JOIN
                                                         dbo.spsiclavesvaloresaplicacion AS cva ON cva.idVA = va.id LEFT OUTER JOIN
                                                         dbo.spsidescripcionidiomasvaloresaplicacion AS dcva ON dcva.idCVA = cva.id
                               WHERE        (va.TipoVA = 'ESTADOREMESASCARTERA') AND (cva.clave = r.Estado) AND (dcva.idioma = 'ES')) AS Estado, dbo.ConvertFecha(r.Fecha) AS Fecha, 
                         r.ImporteTotal
FROM            dbo.spcaremesas AS r LEFT OUTER JOIN
                         dbo.spcacuentasbancarias AS cb ON cb.Id = r.IdCuentaBancaria LEFT OUTER JOIN
                         dbo.spcaoficinasbancarias AS ob ON ob.id = cb.IdOficina
GO
/****** Object:  View [dbo].[Exp-Reparaciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Reparaciones]
AS
SELECT     TOP (100) PERCENT dbo.spedreparaciones.Grupo, dbo.spedreparaciones.Codigo, dbo.spedreparaciones.Descripcion, dbo.spedreparaciones.DescripcionIngles, 
                      re.Parte, re.Elemento, re.DMG, re.RepairCode, BR.Largo, BR.Ancho, BR.UnidadesBase, BR.TiempoBase, BR.CosteMaterialBase, BR.UnidadesBaseIncremento, 
                      BR.TiempoBaseIncremento, BR.CosteMaterialBaseIncremento, dbo.spedreparaciones.id, dbo.spedreparaciones.TipoReparacion, 
                      dbo.spedreparaciones.TipoContenedor, dbo.spedreparaciones.TamanyoContenedor, dbo.spedreparaciones.TipoPresupuesto, re.TipoTransmision, re.id AS IdEDi, 
                      BR.id AS IdBaremo, dbo.spedreparaciones.SnHabitual, dbo.spedreparaciones.idOficina
FROM         dbo.spedreparaciones LEFT OUTER JOIN
                      dbo.spedreparacionesEdi AS re ON re.idReparacion = dbo.spedreparaciones.id LEFT OUTER JOIN
                      dbo.spedreparacionbaremos AS BR ON BR.idReparacion = dbo.spedreparaciones.id
ORDER BY re.Parte, re.Elemento, re.DMG
GO
/****** Object:  View [dbo].[Exp-ReparacionesCab]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-ReparacionesCab]
AS
SELECT     TOP (100) PERCENT Grupo, Codigo, Descripcion, DescripcionIngles, id, TipoReparacion, TipoContenedor, TamanyoContenedor, TipoPresupuesto, CriterioCalculo, 
                      idOficina
FROM         dbo.spedreparaciones
GO
/****** Object:  View [dbo].[Exp-Secciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Secciones] AS
 SELECT sec.Id,sec.Codigo,sec.Nombre,sec.TipoSeccion,al.Codigo AS CodigoAlmacen 
 FROM spalsecciones sec LEFT OUTER JOIN spalalmacenes AS al ON al.Id = sec.IdAlmacen 
GO
/****** Object:  View [dbo].[Exp-SerieCart]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-SerieCart]
AS
SELECT        dbo.spcaseries.id, dbo.spcaseries.IdOficina, dbo.spcaseries.tipo, dbo.spcaseries.Codigo, dbo.spcaseries.descripcion, dbo.spcaseriesoficinas.Cancelado
FROM            dbo.spcaseries INNER JOIN
                         dbo.spcaseriesoficinas ON dbo.spcaseries.id = dbo.spcaseriesoficinas.idSerie
WHERE        (dbo.spcaseriesoficinas.Cancelado = 'false')
GO
/****** Object:  View [dbo].[Exp-SeriesCobro]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-SeriesCobro]
AS
SELECT     dbo.spcaseries.id, dbo.spcaseries.Codigo, dbo.spcaseries.CodigoSerie, dbo.spcaseries.descripcion, dbo.spcaseriesoficinas.idOficina
FROM         dbo.spcaseries INNER JOIN
                      dbo.spcaseriesoficinas ON dbo.spcaseries.id = dbo.spcaseriesoficinas.idSerie
WHERE     (dbo.spcaseries.tipo = 'C')
GO
/****** Object:  View [dbo].[Exp-SeriesPagos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-SeriesPagos]
AS
SELECT     dbo.spcaseries.id, dbo.spcaseries.Codigo, dbo.spcaseries.CodigoSerie, dbo.spcaseries.descripcion, dbo.spcaseriesoficinas.idOficina
FROM         dbo.spcaseries INNER JOIN
                      dbo.spcaseriesoficinas ON dbo.spcaseries.id = dbo.spcaseriesoficinas.idSerie
WHERE     (dbo.spcaseries.tipo = 'P')
GO
/****** Object:  View [dbo].[Exp-TipoDespacho]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-TipoDespacho]
AS
SELECT     Id, Codigo, Descripcion, SnTieneImpuestos AS [Tiene Impuestos]
FROM         dbo.sptrtipodespacho
GO
/****** Object:  View [dbo].[Exp-TipoDocumentoFormaPago]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-TipoDocumentoFormaPago]
AS
SELECT     Id, Nombre
FROM         dbo.spfatipodocumento
GO
/****** Object:  View [dbo].[Exp-TipoMercancia]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-TipoMercancia]
AS
SELECT     LFET.Id, dbo.spILVAGrupoMercancia.Descripcion AS [Grupo Mercancía], LFET.Descripcion AS [Tipo Mercancía]
FROM         dbo.spILVATipoMercancia AS LFET INNER JOIN
                      dbo.spILVAGrupoMercancia ON LFET.IdGrupo = dbo.spILVAGrupoMercancia.Id
GO
/****** Object:  View [dbo].[Exp-TipoTarea]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-TipoTarea]
AS
SELECT     Id, Codigo, Descripcion,
                          (SELECT     dva.descripcion
                            FROM          dbo.spsidescripcionidiomasvaloresaplicacion AS dva LEFT OUTER JOIN
                                                   dbo.spsiclavesvaloresaplicacion AS cva ON cva.id = dva.idCVA LEFT OUTER JOIN
                                                   dbo.spsivaloresaplicacion AS va ON va.id = cva.idVA
                            WHERE      (dva.idioma = 'ES') AND (va.TipoVA = 'SITUACIONTRANSPORTE') AND (cva.clave = dbo.sptrtipotarea.Situacion)) AS Situacion
FROM         dbo.sptrtipotarea
GO
/****** Object:  View [dbo].[Exp-Tractoras]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Tractoras]
AS
SELECT     tra.Id, tra.Codigo, ent.Nombre AS [Empresa Titular], tra.Modelo, dbo.ConvertFecha(tra.FechaADR) AS [Fecha ADR], dbo.ConvertFecha(tra.FechaITV) AS [Fecha ITV], 
                      SUBSTRING(dbo.ConvertFecha(tra.FVisadoTarjeta), 2, LEN(dbo.ConvertFecha(tra.FVisadoTarjeta))) AS [Fecha Visado], dbo.ConvertFecha(tra.FechaRevisionTacografo) 
                      AS [Fecha Tacógrafo], dbo.ConvertFecha(tra.FechaResiduos) AS [Fecha Residuos], dbo.ConvertFecha(tra.FechaComunitario) AS [Fecha Comunitario], 
                      dbo.ConvertFecha(tra.FechaSeguro) AS [Fecha Seguro], dbo.ConvertFecha(tra.FechaEspecial) AS [Fecha Especial], tra.NumEjes, tra.SnActivo AS Activo, 
                      cal.Nombre AS Calendario, con.Codigo AS Conjunto, usu.Nombre + ISNULL(' ' + usu.Apellidos, '') AS Conductor, pla.Codigo AS Plataforma
FROM         dbo.sptrtractoras AS tra LEFT OUTER JOIN
                      dbo.spsicalendario AS cal ON tra.idCalendario = cal.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON tra.EmpresaTitular = ent.Id LEFT OUTER JOIN
                      dbo.sptrconjuntos AS con ON tra.Id = con.idTractora LEFT OUTER JOIN
                      dbo.spsiusuario AS usu ON usu.Id = con.idConductor LEFT OUTER JOIN
                      dbo.sptrplataformas AS pla ON pla.Id = con.idTractora
GO
/****** Object:  View [dbo].[ExpTramites]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ExpTramites]
AS
SELECT     id, Descripcion, TipoReferencia, Cancelado
FROM         dbo.sptgtramite
GO
/****** Object:  View [dbo].[Exp-Ubicaciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Ubicaciones]
AS
SELECT     ub.Id, ub.Codigo, ub.Nombre, ub.Pasillo, ub.Columna, ub.Altura, ub.SuperficieMaxima, sec.Codigo AS CodigoSeccion, al.Codigo AS CodigoAlmacen
FROM         dbo.spalubicaciones AS ub 
			 LEFT OUTER JOIN dbo.spalsecciones AS sec ON sec.Id = ub.IdSeccion
             LEFT OUTER JOIN dbo.spalalmacenes AS al ON al.Id = sec.IdAlmacen 
GO
/****** Object:  View [dbo].[Exp-Usuarios]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Usuarios]
AS
SELECT     Id, Nombre, Apellidos, IdGrupo, IdOficina, Cancelado, SnUsuarioSuite AS [Usuario Suite]
FROM         dbo.spsiusuario

GO
/****** Object:  View [dbo].[Exp-Vehiculos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Vehiculos] as Select Id,Matricula,Tipo,PMA from spbtvehiculos 
GO
/****** Object:  View [dbo].[Exp-VersionesInstaladas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-VersionesInstaladas]
AS
SELECT     Numero, Fecha AS [Fecha Instalacion]
FROM         dbo.spsiVersiones
GO
/****** Object:  View [dbo].[Exp-Viajes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-Viajes]
AS
SELECT     v.Id, exp.Codigo, v.IdExpediente, dbo.spbmbuque.Nombre AS Buque, exp.NumeroEscala, v.Direccion, v.Numero, exp.IdOficina, 
                      dbo.ConvertFechaHoraString_SinSegundos(expA.FechaLlegada, expA.HoraLlegada) AS [Fecha Llegada], 
                      dbo.ConvertFechaHoraString_SinSegundos(expA.FechaSalida, expA.HoraSalida) AS [Fecha Salida]
FROM         dbo.spopexpedienteviajes AS v INNER JOIN
                      dbo.spopexpediente AS exp ON exp.Id = v.IdExpediente INNER JOIN
                      dbo.spopexpedienteatraques AS expA ON expA.IdExpediente = exp.Id INNER JOIN
                      dbo.spbmbuque ON exp.IdBuque = dbo.spbmbuque.Id
GO
/****** Object:  View [dbo].[Exp-ViajesTransito]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Exp-ViajesTransito]
AS
SELECT     Id, via, Descripcion, referencia, idOficina
FROM         dbo.spexviaje
GO
/****** Object:  View [dbo].[ext-OpCom]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ext-OpCom]
AS
SELECT     id, SUBSTRING(Descripcion, 1, 50) AS Descripcion, IdOficina, Tipo AS TipoNegociacion, Campanya, Estado AS EstadoOferta, OrigenComercial, 
                      Probabilidad
FROM         dbo.spcooportunidad
GO
/****** Object:  View [dbo].[Facts]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Facts]
AS
SELECT     id, Fact, ValorDefecto
FROM         dbo.spopfacts
GO
/****** Object:  View [dbo].[FactsPlantilla]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[FactsPlantilla]
AS
SELECT     id, Plantilla
FROM         dbo.spopfactsplantilla
WHERE     (snDatoAdicional = 'false') OR
                      (snDatoAdicional IS NULL)
GO
/****** Object:  View [dbo].[FacturasEmitidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[FacturasEmitidas]
AS
SELECT        fe.Id, fe.IdOficina, dbo.ConvertFechaStringToDate(fe.FechaFactura) AS Fecha, fe.NumeroFacturaFormateado AS NumeroFactura, ent.Nombre AS cliente, 
                         fe.Observaciones, fe.IdEntidadCliente AS IdCliente, fe.TotalFactura, fe.TotalFacturaEUR
FROM            dbo.spfafacturaemitida AS fe LEFT OUTER JOIN
                         dbo.spcoentidades AS ent ON fe.IdEntidadCliente = ent.Id
WHERE        (ent.Id <> '1') AND (fe.IdOficina <> 'TRABCN') AND (fe.IdOficina <> 'INCMAD') AND (fe.IdOficina <> 'SOLBCN')
GO
/****** Object:  View [dbo].[FacturasRecibidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[FacturasRecibidas]
AS
SELECT     fe.Id, fe.IdOficina, fe.FechaFactura AS Fecha, fe.Numero AS NumeroFacturaProveedor, fe.NumeroFactura, ent.Nombre AS Proveedor, fe.Observaciones, 
                      fe.IdEntidadProveedor AS IdProveedor
FROM         dbo.spfafacturarecibida AS fe LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON fe.IdEntidadProveedor = ent.Id
GO
/****** Object:  View [dbo].[FacturasRecibidasSinDesglose]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[FacturasRecibidasSinDesglose]
AS
SELECT     Id AS idFactura, IdOficina, NumeroFactura, Observaciones, TotalFactura, Numero, FechaFactura, dbo.ConvertFecha(FechaFactura) AS FechaFacturaDMA
FROM         dbo.spfafacturarecibida AS fr
WHERE     (NOT (Id IN
                          (SELECT     lfr.IdFacturaRecibida
                            FROM          dbo.spfalineafacturarecibida AS lfr INNER JOIN
                                                   dbo.spfadesglosefacturarecibida AS dfr ON lfr.Id = dfr.IdLineaFactura)))
GO
/****** Object:  View [dbo].[Familias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Familias]
AS
SELECT     Id, Codigo, Nombre, Descripcion
FROM         dbo.spalfamilias
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[FicherosAdjuntos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[FicherosAdjuntos]
AS
SELECT     ep.id, ep.Codigo, ep.idOficina, ep.idCliente AS idEntidad, ent.Nombre AS Entidad, ep.Fecha, ep.Descripcion, ep.Observaciones, ep.Usuario, ep.Timestamp, 
                      exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, ep.TipoExpediente AS TipoReferencia, exfa.Fichero, exfa.Tipo AS TipoFichero, 
                      exfa.FechaHistorico
FROM         dbo.spepexpediente AS ep INNER JOIN
                      dbo.spepexpedienteficherosadjuntos AS exfa ON exfa.idExpediente = ep.id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ep.idCliente
UNION
SELECT     fe.Id, IsNull(IsNull(s.CodigoSerie, s.Codigo) + ' ', '') + fe.NumeroFacturaFormateado AS Codigo, fe.IdOficina, fe.IdEntidadCliente AS idEntidad, ent.Nombre AS Entidad, 
                      fe.FechaFactura AS Fecha, '' AS Descripcion, fe.Observaciones, fe.Usuario, fe.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 
                      'FE' AS TipoReferencia, exfa.Fichero, exfa.Tipo AS TipoFichero, NULL AS FechaHistorico
FROM         dbo.spfafacturaemitidaadjuntos AS exfa INNER JOIN
                      dbo.spfafacturaemitida AS fe ON fe.Id = exfa.IdPadre LEFT JOIN
                      dbo.spcoentidades AS ent ON ent.Id = fe.IdEntidadCliente LEFT JOIN
                      spfaseriefactura s ON s.id = fe.IdSerieFactura
UNION
SELECT     fr.Id, fr.Numero AS Codigo, fr.IdOficina, fr.IdEntidadProveedor AS idEntidad, ent.Nombre AS Entidad, fr.FechaFactura AS Fecha, '' AS Descripcion, fr.Observaciones, 
                      fr.Usuario, fr.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 'FR' AS TipoReferencia, exfa.Fichero, 
                      exfa.Tipo AS TipoFichero, NULL AS FechaHistorico
FROM         dbo.spfafacturarecibidaadjuntos AS exfa INNER JOIN
                      dbo.spfafacturarecibida AS fr ON fr.Id = exfa.IdPadre LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = fr.IdEntidadProveedor
UNION
SELECT     bo.Id, bo.NumBLArmador AS Codigo, bo.IdOficina, bo.IdCliente AS idEntidad, ent.Nombre AS Entidad, bo.FechaReserva AS Fecha, '' AS Descripcion, 
                      '' AS Observaciones, bo.Usuario, bo.TimeStamp, exfa.Nombre AS NombreFichero, exfa.descripcion AS DescripcionFichero, 'BO' AS TipoReferencia, exfa.Fichero, 
                      exfa.Tipo AS TipoFichero, exfa.FechaHistorico
FROM         dbo.spopbooking AS bo INNER JOIN
                      dbo.spopbookingadjuntos AS exfa ON exfa.IdPadre = bo.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = bo.IdCliente
UNION
SELECT     co.Id, co.NumBLArmador AS Codigo, bo.IdOficina, co.IdCliente AS idEntidad, ent.Nombre AS Entidad, co.FechaBL AS Fecha, '' AS Descripcion, '' AS Observaciones, 
                      co.Usuario, co.TimeStamp, exfa.Nombre AS NombreFichero, exfa.descripcion AS DescripcionFichero, 'BL' AS TipoReferencia, exfa.Fichero, exfa.Tipo AS TipoFichero, 
                      exfa.FechaHistorico
FROM         dbo.spopconocimiento AS co INNER JOIN
                      dbo.spopconocimientoadjuntos AS exfa ON exfa.IdPadre = co.Id LEFT OUTER JOIN
                      dbo.spopbooking AS bo ON bo.Id = co.IdBooking LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = co.IdCliente
UNION
SELECT     expe.Id, expe.Codigo, expe.IdOficina, expe.IdCliente AS idEntidad, ent.Nombre AS Entidad,
                          (SELECT     TOP (1) FechaLlegada
                            FROM          dbo.spopexpedienteatraques
                            WHERE      (IdExpediente = expe.Id)) AS Fecha, '' AS Descripcion, expe.Observaciones, expe.Usuario, expe.Timestamp, exfa.Nombre AS NombreFichero, 
                      exfa.descripcion AS DescripcionFichero, 'EXC' AS TipoReferencia, exfa.Fichero, exfa.Tipo AS TipoFichero, exfa.FechaHistorico
FROM         dbo.spopexpediente AS expe INNER JOIN
                      dbo.spopexpedienteadjuntos AS exfa ON exfa.IdPadre = expe.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = expe.IdCliente
UNION
SELECT     0 AS id, ent.Nombre AS Codigo, '' AS idOficina, ent.Id AS idEntidad, ent.Nombre AS Entidad, '' AS Fecha, '' AS Descripcion, ent.Observaciones, ent.Usuario, 
                      ent.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 'ENT' AS TipoReferencia, exfa.Fichero, exfa.Tipo AS TipoFichero, 
                      exfa.FechaHistorico
FROM         dbo.spcoentidades AS ent INNER JOIN
                      dbo.spcoficherosentidades AS exfa ON exfa.IdPadre = ent.Id
UNION
SELECT     ofe.Id, ofe.oferta AS Codigo, ofe.IdOficina, ofe.IdEntidad, ent.Nombre AS Entidad, ofe.FechaAlta AS Fecha, ofe.Asunto AS Descripcion, 
                      ofe.ObservCabecera AS Observaciones, ofe.Usuario, ofe.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 
                      'OF' AS TipoReferencia, exfa.Fichero, exfa.Tipo AS TipoFichero, exfa.FechaHistorico
FROM         dbo.spcooferta AS ofe INNER JOIN
                      dbo.spcoficherosofertas AS exfa ON exfa.IdPadre = ofe.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ofe.IdEntidad
UNION
SELECT     pr.Id, '' AS Codigo, pr.IdOficina, pr.IdArmador AS idEntidad, ent.Nombre AS Entidad, pr.Fecha, pr.Asunto AS Descripcion, pr.Observaciones, pr.Usuario, pr.Timestamp, 
                      exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 'PR' AS TipoReferencia, exfa.Fichero, exfa.Tipo AS TipoFichero, exfa.FechaHistorico
FROM         dbo.spcoproforma AS pr INNER JOIN
                      dbo.spcoficherosproformas AS exfa ON exfa.IdPadre = pr.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = pr.IdArmador
UNION
SELECT     ep.Id, ep.Expediente AS Codigo, ep.IdOficina, ep.IdCliente AS idEntidad, ent.Nombre AS Entidad, ep.FechaInicio AS Fecha, ep.Descripcion, '' AS Observaciones, 
                      ep.Usuario, ep.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 'EXT' AS TipoReferencia, exfa.Fichero, 
                      exfa.Tipo AS TipoFichero, NULL AS FechaHistorico
FROM         dbo.spexexpediente AS ep INNER JOIN
                      dbo.spexficherosexpediente AS exfa ON exfa.IdPadre = ep.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ep.IdCliente
UNION
SELECT     ep.Id, ep.Expediente AS Codigo, ep.IdOficina, ep.IdCliente AS idEntidad, ent.Nombre AS Entidad, ep.FechaInicio AS Fecha, ep.Descripcion, '' AS Observaciones, 
                      ep.Usuario, ep.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 'PA' AS TipoReferencia, exfa.Fichero, 
                      exfa.Tipo AS TipoFichero, NULL AS FechaHistorico
FROM         dbo.spexpartida AS par INNER JOIN
                      dbo.spexexpediente AS ep ON ep.Id = par.IdExpediente INNER JOIN
                      dbo.spexficherospartidas AS exfa ON exfa.IdPadre = par.id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ep.IdCliente
UNION
SELECT     ep.Id, ep.Expediente AS Codigo, ep.IdOficina, ep.IdCliente AS idEntidad, ent.Nombre AS Entidad, ep.FechaInicio AS Fecha, ep.Descripcion, '' AS Observaciones, 
                      ep.Usuario, ep.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 'VI' AS TipoReferencia, exfa.Fichero, 
                      exfa.Tipo AS TipoFichero, NULL AS FechaHistorico
FROM         dbo.spexviaje AS vi INNER JOIN
                      dbo.spexexpediente AS ep ON ep.IdViaje = vi.Id INNER JOIN
                      dbo.spexficherosviajes AS exfa ON exfa.IdPadre = vi.id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = ep.IdCliente
UNION
SELECT     vi.Id, vi.Codigo, NULL AS IdOficina, vi.EmpresaTitular AS idEntidad, ent.Nombre AS Entidad, NULL AS Fecha, NULL AS Descripcion, vi.Observaciones, vi.Usuario, 
                      vi.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 'CNJ' AS TipoReferencia, exfa.Fichero, exfa.Tipo AS TipoFichero, NULL 
                      AS FechaHistorico
FROM         dbo.sptrconjuntos AS vi INNER JOIN
                      dbo.sptrconjuntosadjuntos AS exfa ON exfa.IdPadre = vi.id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = vi.EmpresaTitular
UNION
SELECT     fr.Id AS Id, CONVERT(varchar, fr.Id) AS Codigo, fr.IdOficina, fr.IdCliente AS idEntidad, ent.Nombre AS Entidad, fr.FechaAlta AS Fecha, '' AS Descripcion, 
                      fr.Observaciones, fr.Usuario, fr.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 'RD' AS TipoReferencia, exfa.Fichero, 
                      exfa.Tipo AS TipoFichero, exfa.FechaHistorico
FROM         spedreservasficherosadjuntos AS exfa INNER JOIN
                      spedreservas AS fr ON fr.Id = exfa.idPadre LEFT JOIN
                      spcoentidades AS ent ON ent.Id = fr.IdCliente
UNION
SELECT     fr.Id AS Id, CONVERT(varchar, fr.Id) AS Codigo, fr.IdOficina, fr.IdCliente AS idEntidad, ent.Nombre AS Entidad, fr.FechaMovimiento AS Fecha, '' AS Descripcion, 
                      fr.Observaciones, fr.Usuario, fr.TimeStamp, exfa.Nombre AS NombreFichero, exfa.Descripcion AS DescripcionFichero, 'MVC' AS TipoReferencia, exfa.Fichero, 
                      exfa.Tipo AS TipoFichero, exfa.FechaHistorico
FROM         spedmovimientocontenedorficherosadjuntos AS exfa INNER JOIN
                      spedMovimientoContenedor AS fr ON fr.Id = exfa.idPadre LEFT JOIN
                      spcoentidades AS ent ON ent.Id = fr.IdCliente
GO
/****** Object:  View [dbo].[FormasLogisticas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[FormasLogisticas]
AS
SELECT     TOP (100) PERCENT fl.id, fl.Codigo, fl.idArticulo, al.Codigo AS CodigoAlmacen, al.Nombre, fl.Referencia, fl.idEmbalaje, fl.CantidadFLMenor, fl.PorDefectoInventario, 
                      fl.PorDefectoVenta, fl.OrdenFL, fl.StockMinimo, fl.snFacturable, fl.snLlenaOcupacion, al.PrecioUnitario, fl.Volumen
FROM         dbo.spalformaslogisticas AS fl INNER JOIN
                      dbo.spalarticulos AS al ON al.Id = fl.idArticulo
WHERE     (al.Cancelado = 'false')
ORDER BY al.Nombre
GO
/****** Object:  View [dbo].[FormasPago1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[FormasPago1]
AS
SELECT     Id, Descripcion
FROM         dbo.spfaformapago
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[Frecuencias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Frecuencias]
AS
SELECT     id, Frecuencia
FROM         dbo.spsifrecuencias
GO
/****** Object:  View [dbo].[FuncionesVariables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[FuncionesVariables]
AS
SELECT     id, Nombre, Funcion AS FuncionBD, CampoOrden
FROM         dbo.spsifuncionvariables
GO
/****** Object:  View [dbo].[GE_Control_Logistica]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[GE_Control_Logistica]
AS
select  matricula,tamanyo,tipo,Oficina,Depot,tmov, TipoMovimiento,descripcion,
(select dva.descripcion
from spsivaloresaplicacion va
inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id 
inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id
where va.tipova = 'ESTADOMOVIMIENTOCONTENEDOR' and dva.Idioma = 'ES' and cva.clave = 
(case TABLA.tmov 
WHEN 'AC' THEN 'VDI'
WHEN 'CB' THEN (case TABLA.estado WHEN 'LL' THEN 'BUL' ELSE 'BUV' END ) 
WHEN 'DB' THEN (case TABLA.estado WHEN 'LL' THEN 'DEL' ELSE 'VDI' END ) 
WHEN 'SP' THEN (case TABLA.estado WHEN 'LL' THEN 'OTL' ELSE 'VND' END ) 
WHEN 'VT' THEN 'VND'
WHEN 'EP' THEN (case TABLA.estado WHEN 'LL' THEN 'CAL' ELSE (case TABLA.snAveriado WHEN 1 THEN 'AVE' ELSE (CASE WHEN (EsDepot = 1 AND EsTerminal = 1) OR  EsDepot = 1 THEN 'VDI' WHEN EsTerminal = 1 THEN 'VND' ELSE Null END ) END ) END )  
ELSE Null END)) AS estado
,FechaMovimiento,Id,snAveriado,Reservable,FechaInspeccion,  
PobDestino,SnBarandilla,SnRotulado,Capacidad,PrecioAlquilerDiario,idDivisaAlquilerDiario,UltimaCarga,Propietario,Notas,TipoEquipamiento,FechaAlquiler,EstadoContenedor,Cliente,FechaLLegada,Ubicacion,Origen,FechaDevolucion,DiasDemora,UltimoExpedienteAsignado,FechaInicio from (   
SELECT mc.matriculaContenedor as matricula,cc.tamanyo,cc.tipo,mc.oficina as 'Oficina', entDep.nombre as Depot, tpm.tipoMovimiento as tmov, mc.TipoMovimiento,   
tpm.descripcion as descripcion, mc.estado as estado,dbo.ConvertFechaHora(mc.fechamovimiento,mc.horamovimiento) as FechaMovimiento,entDep.Id,mc.SNAveriado as snAveriado, 
IsNull(c.Reservable,0) as Reservable,CONVERT(datetime,c.FechaInspeccion,103) as FechaInspeccion,IsNull(pobM.Nombre,ISNULL(pobT.Nombre,Null)) as PobDestino,mc.numcontadorciclo, 
mc.numcontadormovimiento,IsNull(c.SnBarandilla,0) as SnBarandilla,IsNull(c.SnRotulado,0) as SnRotulado,c.Capacidad,c.PrecioAlquilerDiario,c.idDivisaAlquilerDiario,c.UltimaCarga,
entA.Nombre as Propietario,c.Notas,c.Tipo as TipoEquipamiento,CONVERT(datetime,c.FechaAlquiler,103) as FechaAlquiler,c.Estado as EstadoContenedor,entP.Nombre as Cliente, 
CONVERT(datetime,IsNull(vma.FechaLLegada,vmt.FechaLLegada),103) as FechaLLegada,
(Case WHEN mc.TipoMovimiento IN ('VA','VD') THEN IsNull(pobM.Nombre,ISNULL(pobT.Nombre,Null)) WHEN mc.TipoMovimiento = 'EE' THEN IsNull(pobMO.Nombre,ISNULL(pobMO.Nombre,Null))  WHEN mc.TipoMovimiento = 'ER' THEN entDep.nombre Else Null END) as Ubicacion, 
(Case WHEN mc.TipoMovimiento IN ('EE','VD','VA') THEN IsNull(pobMO.Nombre,ISNULL(pobTO.Nombre,Null))  Else Null END) as Origen, CONVERT(datetime,ec.FechaDevueltoVacio,103) as FechaDevolucion, IsNull(ec.DiasDemora,0) as DiasDemora, 
IsNull((select TOP 1 Viaje from spbmmovimientocontenedor where matriculacontenedor = mc.matriculaContenedor AND numcontadorciclo = (select  MAX(numcontadorciclo) -1 from spbmmovimientocontenedor where matriculacontenedor = mc.matriculaContenedor) order by numcontadormovimiento desc),(select TOP 1 e.Expediente from spexexpediente e left join spexexpedientecontenedor ec on ec.idExpediente = e.Id where ec.matriculacontenedor = mc.matriculaContenedor order by ec.id desc )) as UltimoExpedienteAsignado, CONVERT(datetime,e.FechaInicio,103) as FechaInicio,IsNull(entDep.Terminal,0) as EsTerminal,IsNull(entDep.Depot,0) as EsDepot
FROM spbmmovimientocontenedor mc  
inner join spbmcontenedor c on mc.matriculaContenedor = c.Matricula   
inner join spbmcaracteristicascontenedor cc on cc.id = c.idCaracteristica   
left join spbmtipomovimiento tpm on tpm.tipo = mc.tipoMovimiento 
left join spcoentidades entDep on entDep.id = mc.Depot
left join spcoentidades entP on entP.id = c.idEntidad
left join spcoentidades entA on entA.id = c.idArmador
left join spexviajemaritimo vma on vma.idViaje = (CASE IsNumeric(mc.Viaje) WHEN 1 THEN mc.Viaje ELSE 0 END) 
left join spexviajeterrestre vmt on vmt.idViaje = (CASE IsNumeric(mc.Viaje) WHEN 1 THEN mc.Viaje ELSE 0 END) 
left join splopoblacion pobM on pobM.id = vma.idDestino 
left join splopoblacion pobT on pobT.id = vmt.idDestino 
left join splopoblacion pobMO on pobMO.id = vma.idOrigen 
left join splopoblacion pobTO on pobTO.id = vmt.IdOrigen 
left join spexexpediente e on e.idViaje = IsNull(vma.idViaje,vmt.idViaje) 
inner join spexexpedientecontenedor ec on ec.IdExpediente = e.id AND ec.MatriculaContenedor = mc.matriculaContenedor
where IsNumeric(mc.Viaje) = 1 and  mc.id = (select top 1 mc2.id from spbmmovimientocontenedor mc2   
inner join spbmcontenedor c2 on c2.matricula = mc2.matriculaContenedor   
where  mc2.matriculaContenedor = mc.matriculaContenedor and mc2.Oficina = mc.Oficina   
 and  mc.oficina  = 'GSTBCN' and c.idEntidad = 'GSM'
order by mc2.numcontadorciclo desc, mc2.numcontadormovimiento desc)   
UNION  
SELECT mc.matriculaContenedor as matricula,cc.tamanyo,cc.tipo,mc.oficina as 'Oficina', entDep.nombre as Depot, tpm.tipoMovimiento as tmov, mc.TipoMovimiento,   
tpm.descripcion as descripcion, mc.estado as estado,dbo.ConvertFechaHora(mc.fechamovimiento,mc.horamovimiento) as FechaMovimiento,entDep.Id,mc.SNAveriado as snAveriado, 
IsNull(c.Reservable,0) as Reservable,CONVERT(datetime,c.FechaInspeccion,103) as FechaInspeccion, Null as PobDestino,mc.numcontadorciclo,mc.numcontadormovimiento, 
c.SnBarandilla,c.SnRotulado,c.Capacidad, c.PrecioAlquilerDiario,c.idDivisaAlquilerDiario,c.UltimaCarga,entA.Nombre as Propietario,c.Notas,c.Tipo as TipoEquipamiento,
CONVERT(datetime,c.FechaAlquiler,103) as FechaAlquiler,c.Estado as EstadoContenedor,entP.Nombre as Cliente, Null as FechaLLegada,
(Case WHEN mc.TipoMovimiento IN ('VA','VD') THEN pobD.Nombre WHEN mc.TipoMovimiento = 'EE' THEN pobO.Nombre  WHEN mc.TipoMovimiento = 'ER' THEN entDep.nombre Else Null END) as Ubicacion,
(Case WHEN mc.TipoMovimiento IN ('EE','VD','VA') THEN pobO.Nombre  Else Null END) as Origen, 
Null as FechaDevolucion, 0 as DiasDemora,(select TOP 1 e.Expediente from spexexpediente e left join spexexpedientecontenedor ec on ec.idExpediente = e.Id where ec.matriculacontenedor = mc.matriculaContenedor order by ec.id desc ) as UltimoExpedienteAsignado, Null as FechaInicio,0 as EsTerminal,0 as EsDepot
FROM spbmmovimientocontenedor mc  
inner join spbmcontenedor c on mc.matriculaContenedor = c.Matricula   
inner join spbmcaracteristicascontenedor cc on cc.id = c.idCaracteristica   
left join spbmtipomovimiento tpm on tpm.tipo = mc.tipoMovimiento 
left join spcoentidades entDep on entDep.id = mc.Depot   
left join spcoentidades entP on entP.id = c.idEntidad   
left join spcoentidades entA on entA.id = c.idArmador
left join splopoblacion pobO on pobO.id = mc.Origen 
left join splopoblacion pobD on pobD.id = mc.Destino 
where IsNumeric(mc.Viaje) = 0 and  mc.id = (select top 1 mc2.id from spbmmovimientocontenedor mc2   
inner join spbmcontenedor c2 on c2.matricula = mc2.matriculaContenedor   
where  mc2.matriculaContenedor = mc.matriculaContenedor and mc2.Oficina = mc.Oficina   
 and  mc.oficina  = 'GSTBCN' and c.idEntidad = 'GSM'
order by mc2.numcontadorciclo desc, mc2.numcontadormovimiento desc)   
) AS TABLA   
GO
/****** Object:  View [dbo].[GetDatosEXTbyFactura]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[GetDatosEXTbyFactura]
AS
SELECT     fe.Id AS IdFormulario, ex.Expediente AS CodExpediente
FROM         dbo.spfafacturaemitida AS fe LEFT OUTER JOIN
                      dbo.spfalineafacturaemitida AS lfe ON lfe.IdFacturaEmitida = fe.Id AND lfe.TipoReferencia = 'EXT' LEFT OUTER JOIN
                      dbo.spexconceptoexpediente AS exc ON exc.Id = lfe.idReferencia LEFT OUTER JOIN
                      dbo.spexexpediente AS ex ON ex.Id = exc.IdExpediente
GO
/****** Object:  View [dbo].[GrupoTarifas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[GrupoTarifas]
AS
SELECT     Id, Codigo, Descripcion
FROM         dbo.spcogrupotarifas
GO
/****** Object:  View [dbo].[GrupoUsuarios]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[GrupoUsuarios]
AS
SELECT     Id, Nombre
FROM         dbo.spsigrupousuarios
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[HuecosFacturasEmitidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[HuecosFacturasEmitidas]
AS
SELECT     fe.NumeroFactura + 1 AS NumeroFactura, sfe.Codigo, sfe.Id, dbo.ConvertFecha(fe.FechaFactura) AS FechaFactura
FROM         dbo.spfafacturaemitida AS fe LEFT OUTER JOIN
                      dbo.spfaseriefactura AS sfe ON sfe.Id = fe.IdSerieFactura
WHERE     (NOT ((fe.NumeroFactura + 1) IN
                          (SELECT     NumeroFactura
                            FROM          dbo.spfafacturaemitida
                            WHERE      (IdSerieFactura = fe.IdSerieFactura) AND (NumeroFactura IS NOT NULL)))) AND (NOT (fe.NumeroFactura =
                          (SELECT     MAX(NumeroFactura) AS Expr1
                            FROM          dbo.spfafacturaemitida AS spfafacturaemitida_1
                            WHERE      (IdSerieFactura = fe.IdSerieFactura)))) AND (fe.FechaFactura > GETDATE() - 90)
GO
/****** Object:  View [dbo].[Idiomas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Idiomas]
AS
SELECT     Id, Codigo, Descripcion
FROM         dbo.spsiidiomas
GO
/****** Object:  View [dbo].[Impuestos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Impuestos]
AS
SELECT     Id, Codigo
FROM         dbo.spfaimpuestos
WHERE     (Cancelado = 'False')
GO
/****** Object:  View [dbo].[IntercambioConfiguracion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[IntercambioConfiguracion]
AS
SELECT     id, Nombre, TipoIntercambioConf, CategoriaIntercambioConf, Formulario, Rejilla
FROM         dbo.SpSiIntercambioConfiguracion
GO
/****** Object:  View [dbo].[Inventario]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Inventario]
AS
SELECT     inv.Id, al.Codigo as CodigoAlmacen, al.Nombre as NombreAlmacen, Fecha, Descripcion
FROM         dbo.spalinventario inv, spalalmacenes al
WHERE inv.idAlmacen = al.id
GO
/****** Object:  View [dbo].[InvoicesList]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[InvoicesList]
AS
SELECT     il.NumeroInvoice, il.Fecha, il.idCliente, ent.Nombre,
                          (SELECT     SUM(TotalFactura) AS Expr1
                            FROM          dbo.spepexpedientesinvoicelistfacturas
                            WHERE      (idExpedienteInvoiceList = il.id)) AS Total, il.ObservacionesCabecera, il.ObservacionesPie, il.id
FROM         dbo.spepexpedientesinvoicelist AS il INNER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = il.idCliente
GO
/****** Object:  View [dbo].[LineaMaritima]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[LineaMaritima]
AS
SELECT     Id, Codigo, Nombre, IdConsignatario, Notas
FROM         dbo.spbmlineamaritima
GO
/****** Object:  View [dbo].[Lineas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Lineas]
AS
SELECT     Id, Codigo, Descripcion, NumOriginales, NumCopias, FormatoBL, AttachedSheet
FROM         dbo.spoplineas
WHERE     (Codigo <> 'NOTIFICACI') AND (Codigo <> 'DOCDESPACH') AND (Codigo <> 'ENTREGUESE')
GO
/****** Object:  View [dbo].[lineastrafico2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[lineastrafico2]
AS
SELECT     id, descripcion, TipoTrafico
FROM         dbo.spexlineastrafico
WHERE     (cancelado = 'false')
GO
/****** Object:  View [dbo].[LineaTrafico]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[LineaTrafico] as Select Id,Nombre,Frecuencia from spoplineatrafico 
GO
/****** Object:  View [dbo].[maritimo1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[maritimo1]
AS
SELECT     vm.Id, vm.idBuque, vm.NumViaje, v.idOficina, vm.FechaSalida
FROM         dbo.spexviajemaritimo AS vm INNER JOIN
                      dbo.spexviaje AS v ON v.Id = vm.idViaje
GO
/****** Object:  View [dbo].[maritimo2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[maritimo2]
AS
SELECT     vm.idBuque, vm.MasterBL, vm.idConsignatario, vm.idCorresponsal, vm.idOrigen, vm.idDestino, vm.FechaSalida, vm.FechaLlegada, vm.idViaje, 
                      v.idOficina
FROM         dbo.spexviajemaritimo AS vm INNER JOIN
                      dbo.spexviaje AS v ON v.Id = vm.idViaje
GO
/****** Object:  View [dbo].[MaterialProyectos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[MaterialProyectos]
AS
SELECT     Id, Codigo, Descripcion, Peso, UMPeso, Ancho, Largo, Alto, UMDimensiones, Volumen, UMVolumen, IdProyecto
FROM         dbo.spprproyectosmateriales
GO
/****** Object:  View [dbo].[MMPP]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[MMPP] as Select id,idBooking,NombreExpedidor,NombreReceptor,IdModoTransporte from spopsolicitudmmpp 
GO
/****** Object:  View [dbo].[Movimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Movimientos] as Select Tipo,Descripcion,Actuacion,Estado from SpBmTipoMovimiento 
GO
/****** Object:  View [dbo].[Movimientos2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Movimientos2]
AS
SELECT     Tipo AS Id, Descripcion AS Nombre, Actuacion, TipoMovimiento
FROM         dbo.SpBmTipoMovimiento
GO
/****** Object:  View [dbo].[MovSiguiente]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[MovSiguiente] as Select MovimientoInicial,EstadoInicial,MovimientoFinal,EstadoFinal,id from SpBmMovimientoSiguiente 
GO
/****** Object:  View [dbo].[MPAereas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[MPAereas]
AS
SELECT     id, NumOnu, Clase, Descripcion, GrupoEnvasado AS [Grupo Embalaje]
FROM         dbo.spmmppaereas
WHERE     (Cancelado = 0)
GO
/****** Object:  View [dbo].[MPMaritimas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[MPMaritimas]
AS
SELECT     NumOnu, Clase, Substancia, GrupoEnvasado, NombreEmbarqueApropiado, ProperShippingName, snContaminanteMar, id, Cancelado
FROM         dbo.spmmppmaritimas
GO
/****** Object:  View [dbo].[MPTerrestres]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[MPTerrestres]
AS
SELECT     NumOnu, Descripcion, Clase, GrupoEnvasado, Id
FROM         dbo.spmmppterrestres
WHERE     (Cancelado = 0)
GO
/****** Object:  View [dbo].[MSJ]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[MSJ]
AS
SELECT     Id, Control, Idioma, Texto
FROM         dbo.spsitraducciones
WHERE     (Modulo = 'MSJ')
GO
/****** Object:  View [dbo].[Muelles]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Muelles]
AS
SELECT     m.id, m.Codigo, m.Descripcion, m.Alineacion, m.IdPuerto, p.Descripcion AS Puerto
FROM         dbo.spbmmuelle AS m INNER JOIN
                      dbo.spbmpuerto AS p ON m.IdPuerto = p.Id
WHERE     (m.Cancelado = 'false')
GO
/****** Object:  View [dbo].[NormaEmpresa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[NormaEmpresa]
AS
SELECT     id, Norma, Observaciones, Usuario, Timestamp
FROM         dbo.spsinormasempresa
GO
/****** Object:  View [dbo].[ObservacionesFijas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ObservacionesFijas]
AS
SELECT     Id, Observaciones
FROM         dbo.spcoobservacionesfijas
GO
/****** Object:  View [dbo].[Ofertas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Ofertas]
AS
SELECT        TOP (100) PERCENT o.Id, o.oferta, ent.Nombre AS Cliente, o.Asunto, o.IdOficina, REPLACE(dbo.ConvertFecha(o.FechaAlta), '-', '/') AS Fecha, ent.Id AS IdEntidad
FROM            dbo.spcooferta AS o LEFT OUTER JOIN
                         dbo.spcoentidades AS ent ON ent.Id = o.IdEntidad
ORDER BY o.Id DESC
GO
/****** Object:  View [dbo].[Oficina]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Oficina]
AS
SELECT     Id, Descripcion
FROM         dbo.spsioficina
GO
/****** Object:  View [dbo].[Oficinas1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Oficinas1] as Select Empresa,Descripcion from spsioficina 
GO
/****** Object:  View [dbo].[Oficinas2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Oficinas2] as Select Empresa,Usuario from spsioficina 
GO
/****** Object:  View [dbo].[Oficinas3]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Oficinas3]
AS
SELECT     Id, Descripcion, Empresa, AcronimoOficina AS 'Acrónimo', Direccion AS 'Dirección', Poblacion AS 'Población', Provincia, CP, Tf1
FROM         dbo.spsioficina
GO
/****** Object:  View [dbo].[OficinasBancarias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[OficinasBancarias]
AS
SELECT     id, NombreBanco, codigoBanco, codigoOficina
FROM         dbo.spcaoficinasbancarias
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[OperacionesProveedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[OperacionesProveedores] as
SELECT     ENT.Nombre AS Proveedor, count(*) AS Total, 'Consignacion' AS Tipo, substring(FR.fechaFactura, 5, 2) + '/' + substring(Fr.FechaFactura, 1, 4) AS Fecha
FROM         spfadesglosefacturarecibida DFR LEFT JOIN
                      spopexpedienteconceptos EXC ON (EXC.id = DFR.IdReferencia AND DFR.TipoReferencia = 'EXC') LEFT JOIN
                      spcoentidades ENT ON EXC.IdProveedor = ENT.Id LEFT JOIN
                      spfalineafacturarecibida LFR ON LFR.id = DFR.IdLineaFactura LEFT JOIN
                      spfafacturarecibida FR ON FR.id = LFR.IdFacturaRecibida
WHERE     DFR.TipoReferencia = 'EXC'
GROUP BY ENT.Nombre, substring(FR.fechaFactura, 5, 2) + '/' + substring(Fr.FechaFactura, 1, 4)
UNION
SELECT     ENT.Nombre AS Proveedor, count(*) AS Total, 'Tránsito' AS Tipo, substring(FR.fechaFactura, 5, 2) + '/' + substring(Fr.FechaFactura, 1, 4) AS Fecha
FROM         spfadesglosefacturarecibida DFR LEFT JOIN
                      spexconceptoexpediente EXT ON (EXT.id = DFR.IdReferencia AND DFR.TipoReferencia = 'EXT') LEFT JOIN
                      spcoentidades ENT ON EXT.IdProveedor = ENT.Id LEFT JOIN
                      spfalineafacturarecibida LFR ON LFR.id = DFR.IdLineaFactura LEFT JOIN
                      spfafacturarecibida FR ON FR.id = LFR.IdFacturaRecibida
WHERE     DFR.TipoReferencia = 'EXT'
GROUP BY ENT.Nombre,substring(FR.fechaFactura, 5, 2) + '/' + substring(Fr.FechaFactura, 1, 4)
GO
/****** Object:  View [dbo].[OrigenDatos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[OrigenDatos]
AS
SELECT     id, Campo, Descripcion, Grupo, Tipo, ValorDefecto, Favorito, ValoresAplicacion, Usuario, Timestamp
FROM         dbo.spsiorigendatos
GO
/****** Object:  View [dbo].[OtroTipo]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[OtroTipo]
AS
SELECT     Id, Nombre, CIF
FROM         dbo.spcoentidades
WHERE     (OtroTipo = 'true') AND (Cancelado = 'false')
GO
/****** Object:  View [dbo].[Pagos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Pagos] as Select Id,idSerie,Referencia from spcapagos 
GO
/****** Object:  View [dbo].[Paises1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Paises1] as Select Id,Nombre from splopais 
GO
/****** Object:  View [dbo].[PartesContenedor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PartesContenedor]
AS
SELECT     Codigo
FROM         dbo.spbmPartes
GO
/****** Object:  View [dbo].[Partidas1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Partidas1]
AS
SELECT     p.id, p.IdExpediente, p.Descripcion, e.IdOficina
FROM         dbo.spexpartida AS p INNER JOIN
                      dbo.spexexpediente AS e ON e.Id = p.IdExpediente
GO
/****** Object:  View [dbo].[PasajerosATransportar]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PasajerosATransportar]
AS
SELECT     pv.Id, pv.Tipo AS TipoViaje, dbo.ConvertFechaHora(pv.FechaRecogida, pv.HoraRecogida) AS FechaRecogida, dbo.ConvertFechaHora(pv.FechaVuelo, pv.HoraVuelo) 
                      AS FechaVuelo, pv.Recoger, pv.Entregar, p.Nombre, p.Apellidos, p.Idioma, p.Identificacion, p.Empresa, p.Telefono, pv.CiaAerea, pv.Vuelo
FROM         dbo.spplexpedientepersonalviajes AS pv INNER JOIN
                      dbo.spplexpedientepersonal AS p ON p.id = pv.idExpedientePersonal
WHERE     (NOT (pv.Id IN
                          (SELECT     idExpPersonalViaje
                            FROM          dbo.spplexpedientetransportespasajeros
                            WHERE      (NOT (idExpPersonalViaje IS NULL)))))
GO
/****** Object:  View [dbo].[Patrones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Patrones]
AS
SELECT     Id, Descripcion, TipoTrafico, Cliente, Ambito
FROM         dbo.spfapatrones
GO
/****** Object:  View [dbo].[PatronesEXC]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PatronesEXC]
AS
SELECT     Id, Descripcion, TipoTrafico, Cliente
FROM         dbo.spfapatrones
WHERE     (Ambito = 'EXC')
GO
/****** Object:  View [dbo].[Periodicidades]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Periodicidades]
AS
SELECT     id, Descripcion, TipoReferencia, Cancelado
FROM         dbo.sptgperiodicidades
GO
/****** Object:  View [dbo].[PersonalActivo]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PersonalActivo]
AS
SELECT     Id, Nombre, Apellidos, DniNif AS DNI, IdOficina
FROM         dbo.spsiusuario
WHERE     (SnUsuarioSuite = 0) AND (Cancelado = 0)
GO
/****** Object:  View [dbo].[PeticionDatosTC]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PeticionDatosTC]
AS
SELECT     dbo.sptrPeticionDatosTC.*
FROM         dbo.sptrPeticionDatosTC
GO
/****** Object:  View [dbo].[PlanContable]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PlanContable]
AS
SELECT     Id, PlanContable, IdDivisaContable
FROM         dbo.spsiplancontable
GO
/****** Object:  View [dbo].[PlataformasActivas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PlataformasActivas]
AS
SELECT     dbo.sptrplataformas.Id, dbo.sptrplataformas.Codigo, dbo.spcoentidades.Nombre AS [Empresa Titular], dbo.sptrplataformas.Modelo
FROM         dbo.sptrplataformas LEFT OUTER JOIN
                      dbo.spcoentidades ON dbo.sptrplataformas.EmpresaTitular = dbo.spcoentidades.Id
WHERE     (dbo.sptrplataformas.SnActivo = 1)
GO
/****** Object:  View [dbo].[PlataformasConsignacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PlataformasConsignacion]
AS
SELECT     dbo.spopexpediente.Id, dbo.spopexpediente.Codigo, dbo.spopexpediente.IdBuque, dbo.spbmbuque.Nombre AS Buque, dbo.spopexpediente.NumeroEscala, 
                      dbo.spopexpediente.IdOficina, dbo.spopexpediente.Observaciones, ent.Nombre AS Cliente, REPLACE(dbo.ConvertFecha
                          ((SELECT     TOP (1) FechaLlegada
                              FROM         dbo.spopexpedienteatraques AS exa
                              WHERE     (IdExpediente = dbo.spopexpediente.Id))), '-', '/') AS Fecha
FROM         dbo.spopexpediente LEFT OUTER JOIN
                      dbo.spbmbuque ON dbo.spopexpediente.IdBuque = dbo.spbmbuque.Id LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = dbo.spopexpediente.IdCliente
WHERE     (dbo.spopexpediente.TipoExpediente = 'PL')
GO
/****** Object:  View [dbo].[Poblaciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Poblaciones]
AS
SELECT DISTINCT po.Id, po.Nombre, po.IdPais, pa.Nombre AS Pais
FROM            dbo.splopoblacion AS po LEFT OUTER JOIN
                         dbo.splopais AS pa ON pa.Id = po.IdPais
WHERE        (ISNULL(po.Cancelado, 0) = 0)
GO
/****** Object:  View [dbo].[Poblaciones1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Poblaciones1] as Select Id,Nombre from splopoblacion 
GO
/****** Object:  View [dbo].[Poblaciones2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Poblaciones2]
AS
SELECT     Id, Nombre, Iso
FROM         dbo.splopoblacion
WHERE     (ISNULL(Cancelado, 0) = 0)
GO
/****** Object:  View [dbo].[PoblacionesMar]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PoblacionesMar]
AS
SELECT        po.Id, po.Nombre, pa.Nombre AS Pais, po.IdPais
FROM            dbo.splopoblacion AS po LEFT OUTER JOIN
                         dbo.splopais AS pa ON pa.Id = po.IdPais
WHERE        (po.Maritima = 'true') AND (po.Cancelado = 0)
GO
/****** Object:  View [dbo].[PoblacionesTerrestres]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PoblacionesTerrestres]
AS
SELECT     po.Id, po.Nombre, pa.Nombre AS Pais, po.IdPais
FROM         dbo.splopoblacion AS po LEFT OUTER JOIN
                      dbo.splopais AS pa ON pa.Id = po.IdPais
WHERE     (po.SnTerrestre = 1)
GO
/****** Object:  View [dbo].[PresupuestosContenedor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[PresupuestosContenedor]
AS
SELECT     exp.Codigo, expr.Matricula AS Equipamiento, exp.idOficina, cc.Tamanyo AS Tamaño, cc.Tipo, cli.Nombre AS Cliente, exp.Descripcion, exp.Fecha, exp.id, 
                      exp.Observaciones
FROM         dbo.spedpresupuestos AS expr INNER JOIN
                      dbo.spepexpediente AS exp ON exp.id = expr.id LEFT OUTER JOIN
                      dbo.spcoentidades AS cli ON cli.Id = exp.idCliente LEFT OUTER JOIN
                      dbo.SpBmContenedor AS cont ON cont.Matricula = expr.Matricula LEFT OUTER JOIN
                      dbo.spbmcaracteristicascontenedor AS cc ON cc.Id = cont.IdCaracteristica
GO
/****** Object:  View [dbo].[ProfObservaciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ProfObservaciones] as Select Id,Nombre,Observacion from spopproformaobservaciones 
GO
/****** Object:  View [dbo].[ProveedorDireccionDoc]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[ProveedorDireccionDoc] as
select en.Id, en.Nombre , replace(dir.direccion,char(10),' | ') 'Direccion'
from spcoentidades en
left join spcodireccionesentidades dir on en.id = dir.idEntidad
where dir.PrincipalDocumentacion = 1
and en.cancelado = 0 and en.proveedor = 1
GO
/****** Object:  View [dbo].[Proveedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*SELECT     Id, Nombre, CIF
FROM         dbo.spcoentidades*/
ALTER VIEW [dbo].[Proveedores]
AS
SELECT DISTINCT ent.Id, ent.Nombre, ent.CIF, REPLACE(dir.Direccion, CHAR(10), ' | ') AS Direccion, dir.Poblacion, dir.CP
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad
WHERE        (ent.Cancelado = 'false') AND (ent.Proveedor = 'true') AND (ISNULL(dir.Cancelado, 0) = 0)
GO
/****** Object:  View [dbo].[Provincias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Provincias]
AS
SELECT     dbo.sploprovincias.Codigo, dbo.sploprovincias.Provincia, dbo.sploprovincias.IdPais, dbo.splopais.Nombre AS Pais, dbo.sploprovincias.Id, 
                      dbo.sploprovincias.CodigoPostalProvincia
FROM         dbo.sploprovincias INNER JOIN
                      dbo.splopais ON dbo.sploprovincias.IdPais = dbo.splopais.Id
GO
/****** Object:  View [dbo].[Puertos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Puertos]
AS
SELECT     Id, IdPoblacion, idAutoridadPortuaria, Descripcion
FROM         dbo.spbmpuerto
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[RecargosTransporte]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[RecargosTransporte]
AS
SELECT     Id, Codigo, Incidencia AS Recargo
FROM         dbo.sptrrecargos
GO
/****** Object:  View [dbo].[RemDest]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[RemDest]
AS
SELECT DISTINCT ent.Id, ent.Nombre, ent.CIF, REPLACE(REPLACE(ISNULL(dir.DireccionConfigurada, dir.Direccion), CHAR(13), '|'), CHAR(10), '') AS Direccion, dir.Poblacion, dir.CP
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad
WHERE        (ent.Cancelado = 'false') AND (ISNULL(dir.Cancelado, 0) = 0) AND (ent.RemitenteDestinatario = 'true')
GO
/****** Object:  View [dbo].[RemitenteDest]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[RemitenteDest]
AS
SELECT DISTINCT ent.Id, ent.Nombre, ent.CIF, REPLACE(REPLACE(ISNULL(dir.DireccionConfigurada, dir.Direccion), CHAR(13), '|'), CHAR(10), '') AS Direccion, dir.Poblacion, dir.CP
FROM            dbo.spcoentidades AS ent LEFT OUTER JOIN
                         dbo.spcodireccionesentidades AS dir ON ent.Id = dir.IdEntidad
WHERE        (ent.RemitenteDestinatario = 'true') AND (ent.Cancelado = 'false') AND (ISNULL(dir.Cancelado, 0) = 0)
GO
/****** Object:  View [dbo].[Reparaciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Reparaciones]
AS
SELECT     TOP (100) PERCENT r.Grupo, r.Codigo, r.Descripcion, r.DescripcionIngles, re.Parte, re.Elemento, re.DMG, re.RepairCode, BR.Largo, BR.Ancho, BR.UnidadesBase, 
                      BR.TiempoBase, BR.CosteMaterialBase, BR.UnidadesBaseIncremento, BR.TiempoBaseIncremento, BR.CosteMaterialBaseIncremento, r.id, r.TipoReparacion, 
                      r.TipoContenedor, r.TamanyoContenedor, r.TipoPresupuesto, re.TipoTransmision, re.id AS IdEDi, BR.id AS IdBaremo, r.idCliente, r.idOficina, r.GrupoContenedor
FROM         dbo.spedreparaciones AS r LEFT OUTER JOIN
                      dbo.spedreparacionesEdi AS re ON re.idReparacion = r.id LEFT OUTER JOIN
                      dbo.spedreparacionbaremos AS BR ON BR.idReparacion = r.id
WHERE     (r.Cancelado = 0)
ORDER BY re.Parte, re.Elemento, re.DMG
GO
/****** Object:  View [dbo].[Reports]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Reports]
AS
SELECT     id, Nombre, Descripcion, Tipo, CabeceraOficina, PieOficina
FROM         dbo.spsireport
GO
/****** Object:  View [dbo].[ReservasDepot]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ReservasDepot]
AS
SELECT     r.id, r.idOficina, r.idAlmacen, r.idCliente, ent.Nombre AS Cliente, r.TipoReserva, r.Booking, r.NumEDI, r.OtraReferencia, r.FechaAlta, r.HoraAlta, r.FechaReserva, 
                      r.HoraReserva, r.FechaCaducidad, r.HoraCaducidad, r.Estado, r.Observaciones, r.Usuario, r.Timestamp, r.snGeneradaAuto, r.idAgenteCarga, r.idBuque, r.Viaje, 
                      r.IdPuertoDestino, r.IdPuertoDestinoFinal, r.idConsolidador, r.idOperador, r.idAgenteAduana, r.Producto, r.SubProducto, r.TipoBultos, r.Peso, r.SnImo, r.NumeroIMO, 
                      r.EmbarqueVia, r.MovilizadoA, r.LocalAsignado, r.CondicionOrigen, r.snCargaConsolidada, r.snServicioIntegral, r.FechaCorte, r.HoraCorte, r.FechaLLenadoVaciado, 
                      r.HoraLLenadoVaciado, r.Mercancia, r.ServicioIntegral
FROM         dbo.spedreservas AS r LEFT OUTER JOIN
                      dbo.spcoentidades AS ent ON ent.Id = r.idCliente
GO
/****** Object:  View [dbo].[Secciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Secciones]
AS
SELECT     Id, Codigo, Nombre, TipoSeccion
FROM         dbo.spalsecciones
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[SerieCart]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[SerieCart]
AS
SELECT DISTINCT dbo.spcaseries.id, dbo.spcaseriesoficinas.idOficina, dbo.spcaseries.tipo, dbo.spcaseries.Codigo, dbo.spcaseries.descripcion
FROM            dbo.spcaseries INNER JOIN
                         dbo.spcaseriesoficinas ON dbo.spcaseries.id = dbo.spcaseriesoficinas.idSerie
WHERE        (dbo.spcaseriesoficinas.Cancelado = 'false')
GO
/****** Object:  View [dbo].[SerieFactReci]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[SerieFactReci]
AS
SELECT     fr2.Id, fr2.Codigo, fro.idOficina, fr2.UltFactura
FROM         dbo.spfaseriefacturarecibida AS fr2 INNER JOIN
                      dbo.spfaseriefacturarecibidaoficinas AS fro ON fro.idSerieFactura = fr2.Id
GO
/****** Object:  View [dbo].[SeriesCobro]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[SeriesCobro]
AS
SELECT     id, IdOficina, Codigo, descripcion
FROM         dbo.spcaseries
WHERE     (tipo = 'C') AND (Cancelado = 'false')
GO
/****** Object:  View [dbo].[SeriesFactura1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[SeriesFactura1]
AS
SELECT     sf.Id, sf.Codigo, sfo.idOficina
FROM         dbo.spfaseriefactura AS sf INNER JOIN
                      dbo.spfaseriefacturaoficinas AS sfo ON sfo.idSerieFactura = sf.Id
GO
/****** Object:  View [dbo].[SeriesFactura2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[SeriesFactura2]
AS
SELECT     sf.Id, sf.Codigo, sfo.idOficina
FROM         dbo.spfaseriefactura AS sf INNER JOIN
                      dbo.spfaseriefacturaoficinas AS sfo ON sfo.idSerieFactura = sf.Id
WHERE     (sfo.Cancelado = 'false')
GO
/****** Object:  View [dbo].[SeriesPago]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[SeriesPago]
AS
SELECT     id, IdOficina, Codigo, descripcion
FROM         dbo.spcaseries
WHERE     (tipo = 'P') AND (Cancelado = 'false')
GO
/****** Object:  View [dbo].[ServicioRegular]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ServicioRegular]
AS
SELECT     Id, Codigo, Descripcion, IdAutoridadPortuaria, Cancelado
FROM         dbo.spopservicioregular
GO
/****** Object:  View [dbo].[ServicioRegularSinCancelados]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ServicioRegularSinCancelados]
AS
SELECT     Id, Codigo, Descripcion, IdAutoridadPortuaria
FROM         dbo.spopservicioregular
WHERE     (Cancelado = 0)
GO
/****** Object:  View [dbo].[Servicios]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Servicios] as Select Id,Codigo,Descripcion from spopservicios 
GO
/****** Object:  View [dbo].[Servicios2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Servicios2]
AS
SELECT     Codigo AS Id, Descripcion AS Nombre
FROM         dbo.spopservicios
GO
/****** Object:  View [dbo].[StockContenedorDias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[StockContenedorDias]
AS
SELECT     TOP (100) PERCENT mc.id AS idFormulario, mc.idAlmacen, mc.idOficina AS Oficina, mc.idCliente, mc.MatriculaContenedor AS Equipamiento, mc.FechaMovimiento, 
                      mc.HoraMovimiento, DATEDIFF(day, CONVERT(datetime, dbo.ConvertFecha(mc.FechaMovimiento)), '17/10/2014') AS Dias
FROM         dbo.SpBmContenedor AS c INNER JOIN
                      dbo.spedMovimientoContenedor AS mc ON mc.MatriculaContenedor = c.Matricula INNER JOIN
                      dbo.spedExpediente AS ex ON mc.idExpediente = ex.id LEFT OUTER JOIN
                      dbo.spalalmacenes AS alm ON alm.Id = mc.idAlmacen LEFT OUTER JOIN
                      dbo.SpBmTipoMovimiento AS t ON mc.idTipoMovimiento = t.Tipo LEFT OUTER JOIN
                      dbo.spedreservas AS res ON res.id = mc.idReserva
WHERE     (t.Actuacion <> 'CC') AND (mc.id IN
                          (SELECT     MAX(id) AS Expr1
                            FROM          dbo.spedMovimientoContenedor AS c2
                            WHERE      (MatriculaContenedor = mc.MatriculaContenedor) AND (idAlmacen = mc.idAlmacen) AND (FechaMovimiento <= '20141017'))) AND (DATEDIFF(day, 
                      CONVERT(datetime, dbo.ConvertFecha(mc.FechaMovimiento)), '17/10/2014') >= 100)
ORDER BY Dias
GO
/****** Object:  View [dbo].[TablasMaestras]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TablasMaestras] as 
select NombreTabla as Codigo, Mensaje as Descripcion from spsiTablasMaestras
GO
/****** Object:  View [dbo].[Tarifas_Expediente]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Tarifas_Expediente]
AS
SELECT     ect.IdExpediente AS IdFormulario, co.CodigoConcepto AS Clave, ISNULL(ect.ImporteVenta, 0) AS Valor
FROM         dbo.spepexpedienteconceptostarifas AS ect LEFT OUTER JOIN
                      dbo.spcoconcepto AS co ON ect.idConcepto = co.id
WHERE     (co.CodigoConcepto IS NOT NULL) AND (ect.Tipo <> 'LI')
GO
/****** Object:  View [dbo].[Tarifas_Expediente_Lista]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Tarifas_Expediente_Lista]
AS
SELECT     ect.IdExpediente AS IdFormulario, co.CodigoConcepto AS Clave, ect.ImporteVenta, ect.DescripcionConcepto AS Descripcion, ect.idDivisaVenta AS Divisa
FROM         dbo.spepexpedienteconceptostarifas AS ect LEFT OUTER JOIN
                      dbo.spcoconcepto AS co ON ect.idConcepto = co.id
WHERE     (ect.Tipo = 'LI')
GO
/****** Object:  View [dbo].[TarifasFlete]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TarifasFlete]
AS
SELECT     Id, idPoblOrigen, idPoblDestino, IdOficina, Observaciones, Codigo
FROM         dbo.spcoTarifaFlete
GO
/****** Object:  View [dbo].[TEST_TARIFAS_CONCEPTOS_EXT]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TEST_TARIFAS_CONCEPTOS_EXT]
AS
SELECT     e.Id AS idFormulario, ct.DescripcionConcepto AS Concepto, ct.ImporteVenta, ct.idDivisaVenta, ct.ImporteCompra, ct.idDivisaCompra
FROM         dbo.spepexpedienteconceptostarifas AS ct INNER JOIN
                      dbo.spexexpediente AS e ON e.idExpPlantilla = ct.IdExpediente
WHERE     (ct.Tipo = 'LI')
GO
/****** Object:  View [dbo].[TestEmailTramites]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TestEmailTramites]
AS
SELECT     10346 AS idFormulario, 1 AS Orden, 'Nombre' AS Clave, 'Jordi' AS Valor
UNION
SELECT     10346 AS idFormulario, 2 AS Orden, 'Apellidos' AS Clave, 'Martí Pubill' AS Valor
UNION
SELECT     10346 AS idFormulario, 3 AS Orden, 'DNI' AS Clave, '46973927S' AS Valor
GO
/****** Object:  View [dbo].[TipoActividad]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TipoActividad]
AS
SELECT     dbo.sptrtipoactividad.*
FROM         dbo.sptrtipoactividad
GO
/****** Object:  View [dbo].[TipoDocumento]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TipoDocumento] as Select Id,Nombre from spfatipodocumento 
GO
/****** Object:  View [dbo].[TipoDocumentoAEAT]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TipoDocumentoAEAT]
AS
SELECT     dbo.spsiclavesvaloresaplicacion.clave, dbo.spsidescripcionidiomasvaloresaplicacion.descripcion
FROM         dbo.spsivaloresaplicacion INNER JOIN
                      dbo.spsiclavesvaloresaplicacion ON dbo.spsivaloresaplicacion.id = dbo.spsiclavesvaloresaplicacion.idVA INNER JOIN
                      dbo.spsidescripcionidiomasvaloresaplicacion ON dbo.spsiclavesvaloresaplicacion.id = dbo.spsidescripcionidiomasvaloresaplicacion.idCVA AND 
                      dbo.spsidescripcionidiomasvaloresaplicacion.idioma = 'ES'
WHERE     (dbo.spsivaloresaplicacion.TipoVA = 'TIPODOCUMENTOAEAT')
GO
/****** Object:  View [dbo].[todasLasTablas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[todasLasTablas]
AS
SELECT     TOP (3000) TABLE_NAME AS codigo
FROM         INFORMATION_SCHEMA.TABLES
WHERE     (TABLE_CATALOG = 'SpOperations') AND (TABLE_TYPE = 'BASE TABLE')
ORDER BY codigo
GO
/****** Object:  View [dbo].[TractorasActivas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TractorasActivas]
AS
SELECT     dbo.sptrtractoras.Id, dbo.sptrtractoras.Codigo, dbo.spcoentidades.Nombre AS [Empresa Titular], dbo.sptrtractoras.Modelo
FROM         dbo.sptrtractoras LEFT OUTER JOIN
                      dbo.spcoentidades ON dbo.sptrtractoras.EmpresaTitular = dbo.spcoentidades.Id
WHERE     (dbo.sptrtractoras.SnActivo = 1)
GO
/****** Object:  View [dbo].[TraduccionAutoMerc]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TraduccionAutoMerc]
AS
SELECT     dbo.spoptraduccionmercancias.Id, dbo.spoptraduccionmercancias.texto, dbo.spoptraduccionmercancias.traduccion, dbo.spbmarancel.NombreTecnico, 
                      dbo.spbmarancel.NombreTecnicoIngles, dbo.spbmarancel.NombreComercial, dbo.spbmarancel.NombreComercialIngles, dbo.spbmarancel.Grupo, 
                      dbo.spbmarancel.Capitulo, dbo.spbmarancel.Codigo
FROM         dbo.spoptraduccionmercancias INNER JOIN
                      dbo.spbmarancel ON dbo.spoptraduccionmercancias.idArancel = dbo.spbmarancel.Id
GO
/****** Object:  View [dbo].[Tramites_PRC]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Tramites_PRC]
AS
SELECT     e.id AS IdFormulario, tv.Clave, ISNULL(ecv.Valor, '') AS Valor
FROM         dbo.spepexpediente AS e LEFT OUTER JOIN
                      dbo.spepexpedientechecklist AS ec ON ec.IdExpediente = e.id LEFT OUTER JOIN
                      dbo.spepexpedientechecklistvariables AS ecv ON ecv.idexpedientechecklist = ec.Id LEFT OUTER JOIN
                      dbo.sptgtramitevariables AS tv ON tv.idTramite = ec.IdTramite AND tv.Variable = ecv.Variable
WHERE     (e.TipoExpediente = 'PRC') AND (tv.Clave IS NOT NULL)
GO
/****** Object:  View [dbo].[TransmisionesErroneasSharedLogistics]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[TransmisionesErroneasSharedLogistics]
AS
SELECT     te.idExpediente, te.CodigoExpediente AS Expediente, te.NombreFichero, tr.TipoRelacionado AS [Tipo Relacionado], dbo.ConvertFechaStringToDate(te.FechaCreacion) 
                      AS [Fecha Creacion]
FROM         dbo.spintransmisioneselectronicas AS te LEFT OUTER JOIN
                      dbo.spintransmisioneselectronicashistorico AS th ON te.id = th.idTransmision LEFT OUTER JOIN
                      dbo.spintransmisioneselectronicasinforelacionada AS tr ON te.id = tr.IdTransmision
WHERE     (th.Estado = 'KO')
GO
/****** Object:  View [dbo].[Transportista]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER VIEW [dbo].[Transportista]
AS
SELECT     ent.Id, ent.Nombre, ent.CIF,replace(dir.direccion,char(10),' | ') 'Direccion',dir.poblacion,dir.cp
FROM         dbo.spcoentidades AS ent INNER JOIN
                      dbo.spcoentidadeshomologacion AS homo ON ent.Id = homo.IdEntidad AND homo.Id =
                          (SELECT     MAX(Id) AS Expr1
                            FROM          dbo.spcoentidadeshomologacion
                            WHERE      (IdEntidad = ent.Id)) left outer join dbo.spcodireccionesentidades dir on ent.id=dir.identidad
                           
WHERE     (ent.Transportista = 'true') AND (ent.Cancelado = 'false') AND (homo.EstadoHomologacion = 'L')
GO
/****** Object:  View [dbo].[TransportistaProveedor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER VIEW [dbo].[TransportistaProveedor]
AS
--SELECT     Id, Nombre, CIF
--FROM         dbo.spcoentidades
--WHERE     (Transportista = 'True') AND (TipoTransportistaProveedor = 'PP' OR
--				TipoTransportistaProveedor = 'AU') AND (Cancelado = 'false')

SELECT     ent.Id, ent.Nombre, ent.CIF,replace(dir.direccion,char(10),' | ') 'Direccion',dir.poblacion,dir.cp
FROM         dbo.spcoentidades ent left outer join dbo.spcodireccionesentidades dir on ent.id=dir.identidad
WHERE     (ent.Cancelado = 'false') and dir.cancelado='false' and (Transportista = 'True') AND (TipoTransportistaProveedor = 'PP' OR
                      TipoTransportistaProveedor = 'AU')

GO
/****** Object:  View [dbo].[Ubicaciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Ubicaciones]
AS
SELECT     ub.Id, ub.Codigo, ub.Nombre, ub.Pasillo, ub.Columna, ub.Altura, ub.SuperficieMaxima, sec.Codigo AS CodigoSeccion
FROM         dbo.spalubicaciones AS ub LEFT OUTER JOIN
                      dbo.spalsecciones AS sec ON sec.Id = ub.IdSeccion
WHERE     (ub.Cancelado = 'false')
GO
/****** Object:  View [dbo].[UserGroupPermisos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[UserGroupPermisos]
AS
SELECT     id, nombre, CONVERT(bit, 0) AS Grupo
FROM         spsiusuario
WHERE     SnUsuarioSuite = 1
UNION
SELECT     id, nombre, CONVERT(bit, 1) AS Grupo
FROM         spsigrupousuarios
GO
/****** Object:  View [dbo].[USP_MOVIMIENTO_EMBARQUE]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[USP_MOVIMIENTO_EMBARQUE]                       
AS  
select distinct                  
LTRIM(RTRIM(rs.Matricula)) as Contenedor  
,dbo.ConvertFechaHora_new(mc.FechaMovimiento, mc.HoraMovimiento) as FechaGuia  
,cc.Tamanyo as Tamanio  
,cc.Tipo as Tipo  
,rs.NumGuiaRemision as nroGuia  
,dbo.ConvertFechaHora_new(rs.FechaAsignacion, rs.HoraAsignacion) as FechaAsig   
,r.OtraReferencia as genbkg13  
,r.idAlmacen
,ltrim(rtrim(mc.MatriculaContenedor)) as MatriculaContenedor
from spedreservas r
inner join spedreservasContenedor rs on r.id = rs.idReserva
left join spedMovimientoContenedor mc on rs.idMovimiento = mc.id   
inner join SpBmContenedor co on rs.Matricula = co.Matricula                            
inner join spbmcaracteristicascontenedor cc on co.IdCaracteristica = cc.id                          
where   
--mc.TipoSalida in ('EMB')                                         
r.Estado<>'CA'                       
GO
/****** Object:  View [dbo].[USP_MOVIMIENTO_ENTRADA]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[USP_MOVIMIENTO_ENTRADA]  
AS  
select DISTINCT   
ltrim(rtrim(mc.idBuque)) as nave  
,ltrim(rtrim(mc.Viaje)) as viaje  
,ltrim(rtrim(mc.MatriculaContenedor)) as contenedor  
,mc.FechaMovimiento  
,mc.HoraMovimiento  
,dbo.ConvertFechaHora_new(mc.FechaMovimiento, mc.HoraMovimiento)  as fecmov  
,mc.idAlmacen  
from   
--|tabla de movimiento de contenedores  
spedMovimientoContenedor mc with (nolock)  
--|tabla de contenedores  
inner join dbo.SpBmContenedor co with (nolock)   
on co.Matricula = mc.MatriculaContenedor   
--|tabla detalle del contenedor  
inner join spbmcaracteristicascontenedor as cc   
on cc.Id = co.IdCaracteristica  
where  
--|movimiento de ingresos   
(mc.idTipoMovimiento = 'ENPU')   
--|tipo de contenedor Descarga  
and mc.TipoEntrada in ('D','M')
GO
/****** Object:  View [dbo].[USP_MOVIMIENTO_ENTRADA_1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[USP_MOVIMIENTO_ENTRADA_1]  
AS  
SELECT DISTINCT ltrim(rtrim(mc.idBuque)) AS nave  
 ,ltrim(rtrim(mc.Viaje)) AS viaje  
 ,ltrim(rtrim(mc.MatriculaContenedor)) AS contenedor  
 ,mc.FechaMovimiento  
 ,mc.HoraMovimiento  
 --,dbo.ConvertFechaHora(mc.FechaMovimiento, mc.HoraMovimiento) AS fecmov  
 ,mc.idAlmacen  
FROM  
 --|tabla de movimiento de contenedores      
 spedMovimientoContenedor mc WITH (NOLOCK)  
--|tabla de contenedores      
INNER JOIN dbo.SpBmContenedor co WITH (NOLOCK) ON co.Matricula = mc.MatriculaContenedor  
--|tabla detalle del contenedor      
INNER JOIN spbmcaracteristicascontenedor AS cc ON cc.Id = co.IdCaracteristica  
WHERE  
 --|movimiento de ingresos       
 (mc.idTipoMovimiento = 'ENPU')  
 --|tipo de contenedor Descarga      
 AND mc.TipoEntrada IN (  
  'D'  
  ,'M'  
  )
GO
/****** Object:  View [dbo].[USP_PEGASO_ASIGNACION_CTR]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[USP_PEGASO_ASIGNACION_CTR]  
AS  
 SELECT DISTINCT  
 A.Booking  
 ,CONTENEDOR = LTRIM(RTRIM(B.Matricula))  
 ,TAMAÑO = CAST(cc.Tamanyo AS VARCHAR)   
 ,TIPO = LTRIM(RTRIM(cc.Tipo))   
 ,TARA = ISNULL(CAST(cc.Tara AS DECIMAL(10,2)),0)  
 ,PRECINTOS_NEPTUNIA = LTRIM(RTRIM(ISNULL(B.OtrosPrecintos,'')))  
 ,PRECINTOS_LINEA = LTRIM(RTRIM(ISNULL(B.Precintos,'')))  
 ,PRECINTOS_VENTILACION = LTRIM(RTRIM(ISNULL(B.PrecintosVentilacion,'')))   
 ,SUCURSAL = LTRIM(RTRIM(A.idOficina))  
 --,FECHA_SALIDA = dbo.ConvertFechaHora(C.FechaMovimiento, C.HoraMovimiento)  
 ,fecha1 = C.FechaMovimiento    
 ,hora1 = C.HoraMovimiento    
 ,C.FechaMovimiento  
 ,PAYLOAD = ISNULL(cc.PMM,0)  
 ,OBSERVACIONES = LTRIM(RTRIM(ISNULL(B.Observaciones,'')))  
 FROM spedreservas A WITH (NOLOCK)  
 INNER JOIN spedreservasContenedor B WITH (NOLOCK) ON B.idReserva = A.ID  
 INNER JOIN spedMovimientoContenedor C WITH (NOLOCK) ON B.idMovimiento = C.id    
 INNER JOIN SpBmContenedor co on B.Matricula = co.Matricula                              
 INNER JOIN spbmcaracteristicascontenedor cc on co.IdCaracteristica = cc.id   
 --|TOTAL DE CONTENEDORES RESERVADOS  
 INNER JOIN (    
     SELECT idReserva,TipoContenedor,TamañoContenedor,COUNT(TamañoContenedor) as cantidad   
     FROM spedreservasContenedor    
     WHERE Estado <> 'CA'  
     group by idReserva,TipoContenedor,TamañoContenedor    
    ) ASIG on ASIG.idReserva=A.id   
 --|  
 --|TOTAL DE CONTENEDORES ASIGNADOS  
 INNER JOIN (    
     SELECT COUNT(TamañoContenedor) as cantidad ,idReserva   
     FROM spedreservasContenedor    
     WHERE isnull(Matricula,'') <> ''  
     AND Estado = 'RE'     
     group by TamañoContenedor,idReserva    
    ) ASIGNACION ON ASIGNACION.idReserva = A.id  
 --|  
 WHERE   
 C.ID IS NOT NULL  
 AND ISNULL(B.Matricula,'') <> ''  
 AND A.TipoReserva IN ('EMB', 'EPA', 'MOV')  
 AND ASIG.cantidad = ASIGNACION.cantidad  
 AND A.FechaReserva > = CONVERT(VARCHAR(8), DATEADD(DAY, - 2, GETDATE()), 112)   
 --ORDER BY A.Booking,C.FechaMovimiento DESC  
GO
/****** Object:  View [dbo].[UsuarioOficina]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[UsuarioOficina]
AS
SELECT DISTINCT IdUsuario AS Usuario, IdOficina
FROM            dbo.spsiusuariosoficinas
GO
/****** Object:  View [dbo].[Usuarios2]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Usuarios2]
AS
SELECT     DniNif, Nombre, Apellidos
FROM         dbo.spsiusuario
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[Usuarios3]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Usuarios3]
AS
SELECT     Id, Nombre, IdGrupo
FROM         dbo.spsiusuario
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[Usuarios4]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Usuarios4]
AS
SELECT     Id, Nombre, Apellidos, IdGrupo
FROM         dbo.spsiusuario
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[ValoresAplicacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ValoresAplicacion]
AS
SELECT     id, TipoVA
FROM         dbo.spsivaloresaplicacion
WHERE     (Visible = 1)
GO
/****** Object:  View [dbo].[VarEmailExpT]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[VarEmailExpT]
AS
SELECT     ex.Id AS idFormulario,
                          (SELECT     TOP (1) entA.Nombre
                            FROM          dbo.spcoentidades AS entA INNER JOIN
                                                   dbo.spexpartida AS pa ON pa.IdAgenteAduanas = entA.Id
                            WHERE      (pa.IdExpediente = ex.Id)) AS AgenteAduanas,
                          (SELECT     TOP (1) pob.Nombre
                            FROM          dbo.splopoblacion AS pob INNER JOIN
                                                   dbo.spexpartida AS pa ON pa.IdDestino = pob.Id
                            WHERE      (pa.IdExpediente = ex.Id)) AS NombrePoblDestino,
                          (SELECT     TOP (1) HoraRecepcionCertificado
                            FROM          dbo.spexpartida AS pa
                            WHERE      (IdExpediente = ex.Id)) AS HoraRecepcionCertificado,
                          (SELECT     TOP (1) FechaRecepcionCertificado
                            FROM          dbo.spexpartida AS pa
                            WHERE      (IdExpediente = ex.Id)) AS FechaRecepcionCertificado, entTC.Nombre AS TerminalCarga
FROM         dbo.spexexpediente AS ex LEFT OUTER JOIN
                      dbo.spexviajeaereo AS va ON va.idViaje = ex.IdViaje LEFT OUTER JOIN
                      dbo.spcoentidades AS entTC ON entTC.Id = va.IdTerminalCarga
GO
/****** Object:  View [dbo].[Variables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Variables]
AS
SELECT     Id, Nombre, Grupo, Descripcion, ObservacionesOferta, Tipo, Valordefecto, SnCancelado
FROM         dbo.spcovariable
GO
/****** Object:  View [dbo].[Vehiculos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Vehiculos] as Select Id,Matricula,Tipo,PMA from spbtvehiculos 
GO
/****** Object:  View [dbo].[vFacturasEmitidasReferencias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[vFacturasEmitidasReferencias]
AS
SELECT DISTINCT 
                         fe.Id, se.CodigoSerie AS Codigo, fe.NumeroFacturaFormateado, fe.NumeroFactura, fe.PrefijoFactura, fe.DigitoNumFactura, 
                         dbo.ConvertFechaStringToDate(fe.FechaFactura) AS FechaFactura, fe.TimeStamp, ent.Nombre AS Cliente, lfe.ImporteUnitario, lfe.Unidades, lfe.IdDivisa, 
                         fe.idDivisa AS DivisaDestino, fe.StatusFactura AS Estado, dbo.ConvertFechaStringToDate(fe.FechaContabFactura) AS FechaContabilizacion, 
                         dbo.ConvertFechaStringToDate(fe.FechaVencimiento) AS FechaVencimiento, fe.IdFormaPago AS FormaPago, feie.CodExpediente AS [Cod.Expediente], 
                         lfe.idReferencia, lfe.TipoReferencia, fe.snProforma AS Proforma, fe.IdOficina, lfe.ImporteCalculadoRentabilidad, fe.GrupoFacturacion, lfe.Id AS idLinea, 
                         se.Codigo + '_' + CAST(fe.NumeroFacturaFormateado AS varchar) + '.pdf' AS FicheroFactura, fe.Anotaciones, fe.Referencia, se.CodigoSerie,
                             (SELECT        TOP (1) il.NumeroInvoice
                               FROM            dbo.spepexpedientesinvoicelistfacturas AS ilf INNER JOIN
                                                         dbo.spepexpedientesinvoicelist AS il ON il.id = ilf.idExpedienteInvoiceList
                               WHERE        (ilf.idFactura = fe.Id)) AS InvoiceList, fe.TotalFacturaEUR, ISNULL(fe.Cobrado, 0) AS Cobrado
FROM            dbo.spfafacturaemitida AS fe INNER JOIN
                         dbo.spfalineafacturaemitida AS lfe ON lfe.IdFacturaEmitida = fe.Id INNER JOIN
                         dbo.spcoentidades AS ent ON fe.IdEntidadCliente = ent.Id INNER JOIN
                         dbo.spfaseriefactura AS se ON fe.IdSerieFactura = se.Id LEFT OUTER JOIN
                         dbo.spfafacturaemitidainfoextra AS feie ON feie.IdFactura = fe.Id
GO
/****** Object:  View [dbo].[Viajes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Viajes]
AS
SELECT     Id, via, Descripcion, referencia, idOficina
FROM         dbo.spexviaje
GO
/****** Object:  View [dbo].[Viajes1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[Viajes1]
AS
SELECT     Id, Descripcion, via, referencia, idOficina
FROM         dbo.spexviaje
WHERE     (Cancelado = 'false')
GO
/****** Object:  View [dbo].[viajesaereos1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[viajesaereos1]
AS
SELECT     va.idCompania, va.NumConocAereo, va.idAgente, va.IdCorresponsal, va.FechaSalida, va.FechaLLegada, va.idViaje, v.idOficina
FROM         dbo.spexviajeaereo AS va INNER JOIN
                      dbo.spexviaje AS v ON v.Id = va.idViaje
GO
/****** Object:  View [dbo].[ViajeSalidaBooking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ViajeSalidaBooking]
AS
SELECT     dbo.spopexpedienteviajes.Id, dbo.spbmbuque.Nombre AS Buque, dbo.ConvertFechaHoraString_SinSegundos(dbo.spopexpedienteatraques.FechaLlegada, 
                      dbo.spopexpedienteatraques.HoraLlegada) AS [Fecha de Llegada], dbo.ConvertFechaHoraString_SinSegundos(dbo.spopexpedienteatraques.FechaSalida, 
                      dbo.spopexpedienteatraques.HoraSalida) AS [Fecha de Salida], dbo.spopexpedienteviajes.Direccion, dbo.spopexpedienteviajes.Numero AS Viaje,
                          (SELECT     Nombre
                            FROM          dbo.spcoentidades
                            WHERE      (Id = dbo.spopexpedienteviajes.IdArmador)) AS Armador, dbo.spopexpediente.Codigo AS [Código Expediente], dbo.spopexpediente.Id AS idExpediente, 
                      dbo.spopexpedienteviajes.TipoViaje
FROM         dbo.spopexpediente INNER JOIN
                      dbo.spbmbuque ON dbo.spopexpediente.IdBuque = dbo.spbmbuque.Id AND dbo.spopexpediente.IdBuque = dbo.spbmbuque.Id INNER JOIN
                      dbo.spopexpedienteviajes ON dbo.spopexpediente.Id = dbo.spopexpedienteviajes.IdExpediente INNER JOIN
                      dbo.spopexpedienteatraques ON dbo.spopexpediente.Id = dbo.spopexpedienteatraques.IdExpediente
GO
/****** Object:  View [dbo].[ViajesTransito]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ViajesTransito]
AS
SELECT     Id, via AS Vía, Descripcion AS Descripción, referencia AS Referencia, idOficina AS Oficina
FROM         dbo.spexviaje
WHERE     (Cancelado = 0)
GO
/****** Object:  View [dbo].[viajeterrestre1]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[viajeterrestre1]
AS
SELECT     vt.MatriculaVehiculo, vt.IdTransportista, vt.IdCorresponsal, vt.IdOrigen, vt.IdDestino, vt.FechaSalida, vt.FechaLlegada, vt.IdViaje, vt.RefCorresponsal, 
                      v.idOficina
FROM         dbo.spexviajeterrestre AS vt INNER JOIN
                      dbo.spexviaje AS v ON v.Id = vt.IdViaje
GO
/****** Object:  View [dbo].[VistasVariables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[VistasVariables]
AS
SELECT     id, Nombre, Vista
FROM         dbo.spsivistasvariables
GO
/****** Object:  View [dbo].[ZonasAperturaPuerta]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER VIEW [dbo].[ZonasAperturaPuerta]
AS
SELECT     id, nombre, distancia, latitud, longitud, usuario, timeStamp
FROM         dbo.sptrZonasAperturaPuerta
GO
/****** Object:  View [dbo].[zz_NEPTUNIA_POS_CONTENEDOR]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER VIEW [dbo].[zz_NEPTUNIA_POS_CONTENEDOR]
AS
SELECT     mc.MatriculaContenedor, ub.Codigo AS CSLT
FROM         dbo.spedMovimientoContenedor AS mc INNER JOIN
                      dbo.SpBmTipoMovimiento AS tm ON mc.idTipoMovimiento = tm.Tipo INNER JOIN
                      dbo.spalubicaciones AS ub ON ub.Id = mc.idUbicacionDestino
WHERE     (mc.id =
                          (SELECT     MAX(id) AS Expr1
                            FROM          dbo.spedMovimientoContenedor
                            WHERE      (MatriculaContenedor = mc.MatriculaContenedor))) AND (tm.Actuacion <> 'CC') AND (LEN(ub.Codigo) = 6)
GO
/****** Object:  StoredProcedure [dbo].[actualizarANuevoServicioParaDraco]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Eric Torre
-- Create date: 17/12/12
-- Description:	Poner un servicio ya enviado a Movisat como nuevo servicio para que lo vuelva a enviar
-- =============================================
ALTER PROCEDURE [dbo].[actualizarANuevoServicioParaDraco]
	-- Add the parameters for the stored procedure here
	@strCodAlb varchar(30)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;                     
                     
	UPDATE MOVISAT_alEnvioDraconet
		SET blnLeido = 0,
			blnRealizado = 0,
			[Timestamp] = GETDATE()
		WHERE   (accion = 'Nuevo') AND (codAlbaran = @strCodAlb)
END
GO
/****** Object:  StoredProcedure [dbo].[ActualizarAvisoTablaMaestra]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[ActualizarAvisoTablaMaestra]
	-- Add the parameters for the stored procedure here
	@Mensaje varchar(100) ,
	@TipoInterno int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	Declare @Origen varchar(30)

	SET @Origen = 'Trigger BD'

	
	IF (SELECT COUNT(*) from SPSIAvisosNotificar WHERE (TipoInterno = @TipoInterno) AND (Mensaje = @Mensaje)) = 0
		BEGIN
	
	
			INSERT INTO SPSIAvisosNotificar(FechaOrigenAviso, HoraOrigenAviso, Origen, Mensaje, snLeido, snRealizado, TipoInterno,SnMensajePorPantalla, Usuario, [TimeStamp])
			VALUES ( CONVERT(nvarchar(10), GETDATE(), 112), 
				 Replace(CONVERT(nvarchar(10), GETDATE(), 108),':',''), 
				'Trigger BD',
				@Mensaje,
				'False',
				'False',
				@TipoInterno,
				'False',
				'SOLPORT',
				GETDATE()
				)
		END
	ELSE

	
		UPDATE SPSIAvisosNotificar
		SET FechaOrigenAviso = CONVERT(nvarchar(10), GETDATE(), 112), 
			HoraOrigenAviso = Replace(CONVERT(nvarchar(10), GETDATE(), 108),':',''),
			Origen = @Origen,
			snRealizado = 'False',
			[Timestamp] = GETDATE()
		WHERE   (TipoInterno = @TipoInterno) AND (Mensaje = @Mensaje)

END


GO
/****** Object:  StoredProcedure [dbo].[ActualizarBudget]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[ActualizarBudget]
	-- Add the parameters for the stored procedure here
	@id numeric(18,0),
	@BudgetCompra numeric(18,2) ,
	@BudgetVenta numeric(18,2) ,
	@Usuario varchar(30) 	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	Declare @BudgetCompraActual numeric(18,2);
	Declare @BudgetVentaActual numeric(18,2);
	
	set @BudgetCompraActual =  (select top 1 eb.BudgetCompra from spopexpedientebudgets eb where eb.idExpediente = @id order by timestamp desc);
	set @BudgetVentaActual =  (select top 1 eb.BudgetVenta from spopexpedientebudgets eb where eb.idExpediente = @id order by timestamp desc);
	
	if (@BudgetCompraActual is null or @BudgetVentaActual is null or @BudgetCompraActual <> @BudgetCompra or @BudgetVentaActual <> @BudgetVenta)
	begin
		
		insert into spopexpedientebudgets(idExpediente,BudgetCompra,BudgetVenta, Usuario, [Timestamp])
		values (@id, @BudgetCompra, @BudgetVenta, @Usuario, getdate())
			
	end
END




GO
/****** Object:  StoredProcedure [dbo].[ActualizarTotalEurFactura]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[ActualizarTotalEurFactura]
	-- Add the parameters for the stored procedure here
	 @idFactura numeric(18,0)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @TotalEUR numeric(18,2);

	set @TotalEUR =  (select top 1 fe.totalfactura * Isnull(cf.cambio,IsNull(1/cf_inv.cambio,1)) as 'ImporteEUR'
	from spfafacturaemitida fe 
	left join spfacambiofacturaemitida cf on (cf.idFacturaEmitida = fe.id and cf.idDivisaDestino = 'EUR' and cf.IdDivisaOrigen = fe.iddivisa)   
	left join spfacambiofacturaemitida cf_inv on (cf_inv.idFacturaEmitida = fe.id and cf_inv.idDivisaOrigen = 'EUR' and cf_inv.IdDivisaDestino = fe.iddivisa)
	where fe.id = @idFactura)

update spfafacturaemitida set TotalFacturaEUR = @TotalEUR where id = @idFactura

END
GO
/****** Object:  StoredProcedure [dbo].[CargaAuto_CLL_SP_CAMIONAJE_Circuito12]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[CargaAuto_CLL_SP_CAMIONAJE_Circuito12] (
	@fecha2 VARCHAR(8)
	,@TipOpe VARCHAR(1)
	,@Origen CHAR(1)
	,@CodRuta VARCHAR(3)
	)
AS
SELECT DISTINCT mc.MatriculaContenedor AS Contenedor
	,nv.navvia11 AS Naveviaje
	,mc.MatriculaCamion AS Placa
	,dbo.ConvertFechaHora_new(mc.FechaMovimiento, mc.HoraMovimiento) FechaGuia
	,mc.idBuque AS Nave
	,mc.Viaje AS Viaje
	,pl.codage19 AS RucTransporte
	,cc.Tamanyo AS Tamanio
	,cc.Tipo AS Tipo
	,Condicion = CASE 
		WHEN TipoEntrada = 'M'
			THEN 'MT'
		WHEN TipoEntrada = 'D'
			THEN 'MT'
		WHEN TipoEntrada = 'A'
			THEN 'LC'
		WHEN TipoEntrada = 'P'
			THEN 'FC'
		END
	,cli.NOMBRE AS NombreTra
	,rs.NumGuiaRemision AS nroGuia
	,'' AS TipoOperacion
	,dbo.ConvertFechaHora_new(mc.FechaMovimiento, mc.HoraMovimiento) FecRegGuia
	,GETDATE() AS FechaCarga
	,tar.codrut01 AS CodCircuito
	,tar.destar01 AS DesCircuito
	,tar.tarifa02 AS Tarifa20
	,tar.tarifa01 AS Tarifa40
	,tar.apligv01 AS AfectoIgv
	,dsc.montos20 AS Descuento20
	,dsc.montos40 AS Descuento40
	,tar.CobroViaje AS CobroViaje
	,rs.cantidad AS cantidad
	,'' AS nrotkt
	,0 AS DifMinutos
	,isnull(mc.NIFConductor, '') AS brevete
FROM spedMovimientoContenedor mc WITH (NOLOCK)
INNER JOIN SpBmContenedor co  WITH (NOLOCK) ON mc.MatriculaContenedor = co.Matricula
INNER JOIN spbmcaracteristicascontenedor cc WITH (NOLOCK) ON co.IdCaracteristica = cc.id
INNER JOIN (
	SELECT codnav08
		,numvia11
		,navvia11
		,ptoori11
	FROM [SP3TDA-DBSQL01].terminal.dbo.ddcabman11 WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.ddcabman11')                            
	) AS nv ON mc.idBuque = nv.codnav08 COLLATE SQL_Latin1_General_CP1_CI_AS
	AND mc.Viaje = nv.numvia11 COLLATE SQL_Latin1_General_CP1_CI_AS
INNER JOIN (
	SELECT codage19
		,nropla81
		,activo81
	FROM [SP3TDA-DBSQL01].terminal.dbo.dqplaags81 WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.dqplaags81')                            
	) pl ON mc.MatriculaCamion = pl.nropla81 COLLATE SQL_Latin1_General_CP1_CI_AS
	AND pl.activo81 = '1'
INNER JOIN (
	SELECT nombre
		,contribuy
	FROM [SP3TDA-DBSQL01].terminal.dbo.AACLIENTESAA WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.AACLIENTESAA')                            
	) cli ON pl.codage19 = cli.contribuy
INNER JOIN (
	SELECT idMovimiento
		,idReserva
		,NumGuiaRemision
		,COUNT(*) AS cantidad
	FROM spedreservasContenedor WITH (NOLOCK)
	WHERE idMovimiento IS NOT NULL
	GROUP BY idMovimiento
		,idReserva
		,NumGuiaRemision
	) rs ON rs.idMovimiento = mc.id
INNER JOIN spedreservas r WITH (NOLOCK) ON r.id = rs.idReserva
--inner join FicherosAdjuntos gr on gr.Codigo = r.id                            
INNER JOIN (
	SELECT codrut01
		,destar01
		,tarifa02
		,tarifa01
		,apligv01
		,CobroViaje
	FROM [SP3TDA-DBSQL01].terminal.dbo.DDTARCAM01 WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.DDTARCAM01')                            
	) tar ON tar.codrut01 = @CodRuta
LEFT JOIN (
	SELECT codrut01
		,montos20
		,montos40
		,ruccli12
	FROM [SP3TDA-DBSQL01].terminal.dbo.CDDSCCAR02 WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.CDDSCCAR02')                            
	) dsc ON dsc.codrut01 = tar.codrut01
	AND dsc.ruccli12 = pl.codage19
WHERE mc.FechaMovimiento BETWEEN convert(VARCHAR(8), dateadd(d, - 15, @fecha2), 112)
		AND @fecha2
	AND mc.TipoSalida = (
		CASE 
			WHEN @TipOpe = 'E'
				THEN 'EMB'
			ELSE @TipOpe
			END
		) --and gr.TipoFichero = 'GR'                            
	AND mc.idAlmacen IN (
		3
		,14
		)
	AND ltrim(rtrim(mc.idCliente)) <> 'PIL'
	--|    
	AND r.Estado <> 'CA'

UNION

SELECT DISTINCT mc.MatriculaContenedor AS Contenedor
	,nv.navvia11 AS Naveviaje
	,mc.MatriculaCamion AS Placa
	,dbo.ConvertFechaHora_new(mc.FechaMovimiento, mc.HoraMovimiento) FechaGuia
	,r.idBuque AS Nave
	,r.Viaje AS Viaje
	,pl.codage19 AS RucTransporte
	,cc.Tamanyo AS Tamanio
	,cc.Tipo AS Tipo
	,Condicion = CASE 
		WHEN TipoEntrada = 'M'
			THEN 'MT'
		WHEN TipoEntrada = 'D'
			THEN 'MT'
		WHEN TipoEntrada = 'A'
			THEN 'LC'
		WHEN TipoEntrada = 'P'
			THEN 'FC'
		END
	,cli.NOMBRE AS NombreTra
	,rs.NumGuiaRemision AS nroGuia
	,'' AS TipoOperacion
	,dbo.ConvertFechaHora_new(mc.FechaMovimiento, mc.HoraMovimiento) FecRegGuia
	,GETDATE() AS FechaCarga
	,tar.codrut01 AS CodCircuito
	,tar.destar01 AS DesCircuito
	,tar.tarifa02 AS Tarifa20
	,tar.tarifa01 AS Tarifa40
	,tar.apligv01 AS AfectoIgv
	,dsc.montos20 AS Descuento20
	,dsc.montos40 AS Descuento40
	,tar.CobroViaje AS CobroViaje
	,rs.cantidad AS cantidad
	,'' AS nrotkt
	,0 AS DifMinutos
	,isnull(mc.NIFConductor, '') AS brevete
FROM spedMovimientoContenedor mc WITH (NOLOCK)
INNER JOIN SpBmContenedor co WITH (NOLOCK) ON mc.MatriculaContenedor = co.Matricula
INNER JOIN spbmcaracteristicascontenedor cc WITH (NOLOCK) ON co.IdCaracteristica = cc.id
INNER JOIN (
	SELECT idMovimiento
		,idReserva
		,NumGuiaRemision
		,COUNT(*) AS cantidad
	FROM spedreservasContenedor WITH (NOLOCK)
	WHERE idMovimiento IS NOT NULL
	GROUP BY idMovimiento
		,idReserva
		,NumGuiaRemision
	) rs ON rs.idMovimiento = mc.id
INNER JOIN spedreservas r WITH (NOLOCK) ON r.id = rs.idReserva
INNER JOIN (
	SELECT codnav08
		,numvia11
		,navvia11
		,ptoori11
	FROM [SP3TDA-DBSQL01].terminal.dbo.ddcabman11 WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.ddcabman11')                            
	) AS nv ON r.idBuque = nv.codnav08 COLLATE SQL_Latin1_General_CP1_CI_AS
	AND r.Viaje = nv.numvia11 COLLATE SQL_Latin1_General_CP1_CI_AS
INNER JOIN (
	SELECT codage19
		,nropla81
		,activo81
	FROM [SP3TDA-DBSQL01].terminal.dbo.dqplaags81 WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.dqplaags81')         
	) pl ON mc.MatriculaCamion = pl.nropla81 COLLATE SQL_Latin1_General_CP1_CI_AS
	AND pl.activo81 = '1'
INNER JOIN (
	SELECT nombre
		,contribuy
	FROM [SP3TDA-DBSQL01].terminal.dbo.AACLIENTESAA WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.AACLIENTESAA')                            
	) cli ON pl.codage19 = cli.contribuy
--inner join FicherosAdjuntos gr on gr.Codigo = r.id                            
INNER JOIN (
	SELECT codrut01
		,destar01
		,tarifa02
		,tarifa01
		,apligv01
		,CobroViaje
	FROM [SP3TDA-DBSQL01].terminal.dbo.DDTARCAM01 WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.DDTARCAM01')                            
	) tar ON tar.codrut01 = @CodRuta
LEFT JOIN (
	SELECT codrut01
		,montos20
		,montos40
		,ruccli12
	FROM [SP3TDA-DBSQL01].terminal.dbo.CDDSCCAR02 WITH (NOLOCK)
		--from openquery(neptunia1, 'select * from terminal.dbo.CDDSCCAR02')                            
	) dsc ON dsc.codrut01 = tar.codrut01
	AND dsc.ruccli12 = pl.codage19
WHERE mc.FechaMovimiento BETWEEN convert(VARCHAR(8), dateadd(d, - 15, @fecha2), 112)
		AND @fecha2
	AND mc.TipoSalida = (
		CASE 
			WHEN @TipOpe = 'E'
				THEN 'EMB'
			ELSE @TipOpe
			END
		) --and gr.TipoFichero = 'GR'                            
	AND mc.idAlmacen IN (
		3
		,14
		)
	AND ltrim(rtrim(mc.idCliente)) = 'PIL'
	--|    
	AND r.Estado <> 'CA'
GO
/****** Object:  StoredProcedure [dbo].[CargaAuto_CLL_SP_CAMIONAJE_Circuito13]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[CargaAuto_CLL_SP_CAMIONAJE_Circuito13]                  
(                    
 @fecha2 varchar(8),                                              
 @condicion   varchar(8),                                              
 @motivo varchar(1),                                              
 @CodRuta varchar(3)                    
)as                    
begin                    
 select distinct              
 mc.MatriculaContenedor as Contenedor,                     
 ma.navvia11 as Naveviaje,                     
 mc.MatriculaCamion as Placa,                     
 dbo.ConvertFechaHora_new(FechaMovimiento, HoraMovimiento) FechaGuia,                     
 mc.idBuque as Nave,                    
 mc.Viaje as Viaje,                    
 pl.codage19 as RucTransporte,                    
 cc.Tamanyo as Tamanio,                    
 cc.Tipo as Tipo,                    
 Condicion = case when TipoEntrada = 'M' then 'MT'                     
 when TipoEntrada = 'D' then 'MT'                    
 when TipoEntrada = 'A' then 'LC'                    
 when TipoEntrada = 'P' then 'FC' end,                    
 cli.NOMBRE as NombreTra,                    
 '' as nroGuia,                    
 'I' as TipoOperacion,                    
 dbo.ConvertFechaHora_new(FechaMovimiento, HoraMovimiento) as FecRegGuia,                    
 Getdate() as FechaCarga,                    
 tar.codrut01 as CodCircuito,                    
 tar.destar01 as DesCircuito,                    
 tar.tarifa02 as Tarifa20,                    
 tar.tarifa01 as Tarifa40,                    
 tar.apligv01 as AfectoIgv,                    
 dsc.montos20 as Descuento20,                    
 dsc.montos40 as Descuento40,                    
 tar.CobroViaje as CobroViaje,                    
 1 as cantidad,                    
 mc.id as nrotkt,                    
 0 as DifMinutos,                                    
 '' as brevet73        
 from spedMovimientoContenedor mc                    
 inner join SpBmContenedor co                    
 on mc.MatriculaContenedor = co.Matricula                    
 inner join spbmcaracteristicascontenedor cc                    
 on co.IdCaracteristica = cc.id                    
 inner join ( select distinct codnav08, numvia11, tipope11, navvia11,ptoori11                     
     from [SP3TDA-DBSQL01].terminal.dbo.DDCABMAN11 with (nolock)
     --from openquery(neptunia1, 'select * from terminal.dbo.DDCABMAN11')                    
    ) ma                     
 on mc.idBuque = ma.codnav08 COLLATE SQL_Latin1_General_CP1_CI_AS                     
 and mc.Viaje = ma.numvia11 COLLATE SQL_Latin1_General_CP1_CI_AS               
 inner join ( select codage19, nropla81, activo81                    
     from [SP3TDA-DBSQL01].terminal.dbo.dqplaags81 with (nolock)
     --from openquery(neptunia1, 'select * from terminal.dbo.dqplaags81')                    
    ) pl                    
 on mc.MatriculaCamion = pl.nropla81 COLLATE SQL_Latin1_General_CP1_CI_AS                    
 and pl.activo81 = '1'                    
 inner join ( select nombre, contribuy                    
     from [SP3TDA-DBSQL01].terminal.dbo.AACLIENTESAA with (nolock)
     --from openquery(neptunia1, 'select * from terminal.dbo.AACLIENTESAA')                    
    ) cli                    
 on pl.codage19 = cli.contribuy                    
 inner join ( select codrut01, destar01, tarifa02, tarifa01, apligv01, CobroViaje                    
     from [SP3TDA-DBSQL01].terminal.dbo.DDTARCAM01 with (nolock)
     --from openquery(neptunia1, 'select * from terminal.dbo.DDTARCAM01')                    
    ) tar                    
 on tar.codrut01 = @CodRuta                    
 left join ( select codrut01, montos20, montos40, ruccli12                    
     from [SP3TDA-DBSQL01].terminal.dbo.CDDSCCAR02 with (nolock)
     --from openquery(neptunia1, 'select * from terminal.dbo.CDDSCCAR02')                    
    ) dsc                    
 on dsc.codrut01 = tar.codrut01 and dsc.ruccli12 = pl.codage19                    
 where mc.FechaMovimiento between convert(varchar(8),dateadd(d, -15, @fecha2),112)and @fecha2                    
 and TipoEntrada = (case when @condicion = 'MT' then 'D' else @condicion end)                     
 and mc.idTipoMovimiento = (case when @motivo = 'I' then 'ENPU' else @motivo end)                    
 and mc.idAlmacen in (3,14)              
 --AND ma.ptoori11='E'                
end 
GO
/****** Object:  StoredProcedure [dbo].[CargaAuto_CLL_SP_CAMIONAJE_Circuito14]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[CargaAuto_CLL_SP_CAMIONAJE_Circuito14] (
	@fecha2 VARCHAR(8)
	,@TipOpe VARCHAR(1)
	,@Origen CHAR(1)
	,@CodRuta VARCHAR(3)
	)
AS
SELECT DISTINCT mc.MatriculaContenedor AS Contenedor
	,nv.navvia11 AS Naveviaje
	,mc.MatriculaCamion AS Placa
	,dbo.ConvertFechaHora_new(mc.FechaMovimiento, mc.HoraMovimiento) FechaGuia
	,mc.idBuque AS Nave
	,mc.Viaje AS Viaje
	,pl.codage19 AS RucTransporte
	,cc.Tamanyo AS Tamanio
	,cc.Tipo AS Tipo
	,Condicion = CASE 
		WHEN TipoEntrada = 'M'
			THEN 'MT'
		WHEN TipoEntrada = 'D'
			THEN 'MT'
		WHEN TipoEntrada = 'A'
			THEN 'LC'
		WHEN TipoEntrada = 'P'
			THEN 'FC'
		END
	,cli.NOMBRE AS NombreTra
	,rs.NumGuiaRemision AS nroGuia
	,'' AS TipoOperacion
	,dbo.ConvertFechaHora_new(mc.FechaMovimiento, mc.HoraMovimiento) FecRegGuia
	,GETDATE() AS FechaCarga
	,tar.codrut01 AS CodCircuito
	,tar.destar01 AS DesCircuito
	,tar.tarifa02 AS Tarifa20
	,tar.tarifa01 AS Tarifa40
	,tar.apligv01 AS AfectoIgv
	,dsc.montos20 AS Descuento20
	,dsc.montos40 AS Descuento40
	,tar.CobroViaje AS CobroViaje
	,rs.cantidad AS cantidad
	,'' AS nrotkt
	,0 AS DifMinutos
	,isnull(mc.NIFConductor, '') AS brevete
FROM spedMovimientoContenedor mc WITH (NOLOCK)
INNER JOIN SpBmContenedor co WITH (NOLOCK) ON mc.MatriculaContenedor = co.Matricula
--|TABLA de resevas    
INNER JOIN (
	SELECT rescont.idMovimiento
		,res.MovilizadoA
	FROM spedreservas res WITH (NOLOCK)
	INNER JOIN spedreservasContenedor rescont WITH (NOLOCK) ON rescont.idReserva = res.id
	) reserva ON reserva.idMovimiento = mc.id
--|             
INNER JOIN spbmcaracteristicascontenedor cc WITH (NOLOCK) ON co.IdCaracteristica = cc.id
INNER JOIN (
	SELECT codnav08
		,numvia11
		,navvia11
		,ptoori11
	FROM [SP3TDA-DBSQL01].terminal.dbo.ddcabman11
		--from openquery(neptunia1, 'select * from terminal.dbo.ddcabman11')          
	) AS nv ON mc.idBuque = nv.codnav08 COLLATE SQL_Latin1_General_CP1_CI_AS
	AND mc.Viaje = nv.numvia11 COLLATE SQL_Latin1_General_CP1_CI_AS
INNER JOIN (
	SELECT codage19
		,nropla81
		,activo81
	FROM [SP3TDA-DBSQL01].terminal.dbo.dqplaags81
		--from openquery(neptunia1, 'select * from terminal.dbo.dqplaags81')          
	) pl ON mc.MatriculaCamion = pl.nropla81 COLLATE SQL_Latin1_General_CP1_CI_AS
	AND pl.activo81 = '1'
INNER JOIN (
	SELECT nombre
		,contribuy
	FROM [SP3TDA-DBSQL01].terminal.dbo.AACLIENTESAA
		--from openquery(neptunia1, 'select * from terminal.dbo.AACLIENTESAA')          
	) cli ON pl.codage19 = cli.contribuy
INNER JOIN (
	SELECT idMovimiento
		,idReserva
		,NumGuiaRemision
		,COUNT(*) AS cantidad
	FROM spedreservasContenedor WITH (NOLOCK)
	WHERE idMovimiento IS NOT NULL
	GROUP BY idMovimiento
		,idReserva
		,NumGuiaRemision
	) rs ON rs.idMovimiento = mc.id
INNER JOIN spedreservas r WITH (NOLOCK) ON r.id = rs.idReserva
--inner join FicherosAdjuntos gr on gr.Codigo = r.id          
INNER JOIN (
	SELECT codrut01
		,destar01
		,tarifa02
		,tarifa01
		,apligv01
		,CobroViaje
	FROM [SP3TDA-DBSQL01].terminal.dbo.DDTARCAM01
		--from openquery(neptunia1, 'select * from terminal.dbo.DDTARCAM01')          
	) tar ON tar.codrut01 = @CodRuta
LEFT JOIN (
	SELECT codrut01
		,montos20
		,montos40
		,ruccli12
	FROM [SP3TDA-DBSQL01].terminal.dbo.CDDSCCAR02
		--from openquery(neptunia1, 'select * from terminal.dbo.CDDSCCAR02')          
	) dsc ON dsc.codrut01 = tar.codrut01
	AND dsc.ruccli12 = pl.codage19
WHERE mc.FechaMovimiento BETWEEN convert(VARCHAR(8), dateadd(d, - 15, @fecha2), 112)
		AND @fecha2
	AND reserva.MovilizadoA = (
		CASE 
			WHEN @Origen = 'M'
				THEN 'LL'
			WHEN @Origen = 'C'
				THEN 'LO'
			ELSE @TipOpe
			END
		) --and gr.TipoFichero = 'GR'     
	AND mc.idAlmacen IN (
		3
		,14
		)
GO
/****** Object:  StoredProcedure [dbo].[deleteHistoricoMensajeriaCascada]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[deleteHistoricoMensajeriaCascada]
	-- Add the parameters for the stored procedure here
	@p1  int
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
DELETE FROM spmeOperacionesEA
      WHERE idHistoricoMensajeria=@p1
DELETE FROM spmeAtraquesEA
      WHERE idHistoricoMensajeria=@p1
DELETE FROM spmeCabeceraEA
      WHERE idHistoricoMensajeria=@p1
DELETE FROM spmehistoricomensajeria
      WHERE id=@p1
END
GO
/****** Object:  StoredProcedure [dbo].[EliminarReferenciasConversiones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[EliminarReferenciasConversiones]
	-- Add the parameters for the stored procedure here
	@Tabla varchar(50),@TipoConversion varchar (3)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
        

DECLARE @sql nvarchar(2000)
DECLARE @CampoTabla nvarchar(50)

SELECT @CampoTabla = 'id'
-- Casos de tablas sin Id
IF @Tabla = 'SpBmTipoMovimiento' 
BEGIN
	SELECT @CampoTabla = 'Tipo'
END
IF @Tabla = 'spoplineas' 
BEGIN
	SELECT @CampoTabla = 'Codigo'
END
IF @Tabla = 'spopservicios' 
BEGIN
	SELECT @CampoTabla = 'Codigo'
END


SELECT @sql = 'DELETE FROM spsiconversiones WHERE id in (SELECT c.id FROM spSiconversiones c
		left join ' + @Tabla + ' e ON e.' + @CampoTabla + '=c.CodigoSP 
		WHERE c.tipo = ''' + @TipoConversion + ''' AND e.' + @CampoTabla + ' is null)'


EXEC sp_executesql @sql



END


GO
/****** Object:  StoredProcedure [dbo].[ExpedientesInfoToWebTracking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[ExpedientesInfoToWebTracking]
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  Select TablaFinal.*, pobC.idPais as codPaisCarga,pobC.Nombre as PoblacionCarga,paiC.Nombre as PaisCarga,pobD.idPais as codPaisDescarga,  
pobD.Nombre as PoblacionDescarga,paiD.Nombre as PaisDescarga,  
pobO.idPais as codPaisOrigen,pobO.Nombre as PoblacionOrigen,paiO.Nombre as PaisOrigen,  
pobDe.idPais as codPaisDestino,pobDe.Nombre as PoblacionDestino,paiDe.Nombre as PaisDestino
from (
Select TablaEnviar.*, ex.id as idEmisor,ex.idOficina,conv.CodigoEntidad as CodigoEmisor,ex.Expediente as ReferenciaEmpresaResponsable,ex.id as idExpediente, ex.idCliente as IdEmpresaCliente,entCli.CIF as CifEmpresaCliente,  
entCli.Nombre as NombreEmpresaCliente,ex.idCorresponsal as IdEmpresaCorresponsal,entCor.CIF as CifEmpresaCorresponsal,entCor.Nombre as NombreEmpresaCorresponsal 
,(select TOP 1 ReferenciaCliente from spexpartida where idExpediente = ex.id) as ReferenciaEmpresaCliente,  
dbo.ConvertFecha(ex.FechaInicio) as Fecha,   
vt.MatriculaVehiculo as MatriculaCamion,vt.IdTransportista,entT.Nombre as Transportista,entT.CIF as CifTransportista,(select Top 1 NumVuelo from spexvueloviaje where idViajeAereo = va.id ) as ReferenciaVuelo,cia.Nombre as CompaniaAerea,  
b.Nombre as Buque,entC.Nombre as Consignatario,IsNull(vm.MasterBL,'') + IsNull(va.NumConocAereo,'') as NumeroBL,IsNull(vm.idOrigen,'') + IsNull(vt.idOrigen,'') + IsNull((select Top 1 a.idPoblacion from spexvueloviaje vv left join spbaaeropuertos a on a.id = vv.idAeropuertoOrigen where idViajeAereo = va.id),'') as codPoblacionCarga,IsNull(vm.idDestino,'') + IsNull(vt.idDestino,'') + IsNull((select Top 1 a.idPoblacion from spexvueloviaje vv left join spbaaeropuertos a on a.id = vv.idAeropuertoDestino where idViajeAereo = va.id),'') as codPoblacionDescarga,(select Top 1 IdOrigen from spexpartida where idExpediente = ex.Id) as codPoblacionOrigen,(select Top 1 IdDestino from spexpartida where idExpediente = ex.Id) as codPoblacionDestino,  
ex.TipoTrafico,ex.Via,entR.id as idRemitente, entR.Nombre as Remitente, entR.CIF as CIFRemitente, ex.DireccionRemitente,entD.id as idDestinatario, entD.Nombre as Destinatario, entD.CIF as CIFDestinatario, ex.DireccionDestinatario,ex.Incidencia,ex.NumBooking as NumeroBooking,ex.Estado,  
(select Top 1 dbo.ConvertFechaHoraString_SinSegundos(FechaRealEntrega,HoraRealEntrega) from spexpartida where idexpediente = ex.id) as FechaRealEntrega,  
IsNull(dbo.ConvertFechaHoraString_SinSegundos(vm.FechaLLegada,vm.HoraLLegada),'') + IsNull(dbo.ConvertFechaHoraString_SinSegundos(vt.FechaLLegada,vt.HoraLLegada),'') + IsNull(dbo.ConvertFechaHoraString_SinSegundos(va.FechaLLegada,va.HoraLLegada),'') as FechaLLegada,  
IsNull(dbo.ConvertFechaHoraString_SinSegundos(vm.FechaSalida,vm.HoraSalida),'') + IsNull(dbo.ConvertFechaHoraString_SinSegundos(vt.FechaSalida,vt.HoraSalida),'') + IsNull(dbo.ConvertFechaHoraString_SinSegundos(va.FechaSalida,va.HoraSalida),'') as FechaSalida,vm.Escala,vm.NumViaje,ex.Incoterm, entNav.id as IdNaviera, entNav.nombre as Naviera, entNav.CIF as CIFNaviera
 from (
select  'A' as Accion, 'TR' as TipoOperacion, ex.id
from spexexpediente ex
left join spsioficina ofi on ofi.id = ex.IdOficina   
left join spsiempresa emp on emp.id = ofi.Empresa  
inner join spsiconversiones conv on conv.CodigoSP = emp.IdEntidadReferencia and tipo = 'ENT' and idEntidad = 'WT'   
where  ex.id not in (  select te.idExpediente  from spintransmisioneselectronicasinforelacionada tr left join spintransmisioneselectronicas te on te.id = tr.idTransmision   
where tr.TipoRelacionado = 'OPT' and te.TipoExpediente = 'EXT' and te.TipoTransmision = 'TE') and ex.Estado <> 'C'
UNION
select 'M' as Accion, 'TR' as TipoOperacion, ex.id
from spexexpediente ex
left join spsioficina ofi on ofi.id = ex.IdOficina   
left join spsiempresa emp on emp.id = ofi.Empresa  
left join spexviaje vi on vi.id = ex.idViaje 
inner join spsiconversiones conv on conv.CodigoSP = emp.IdEntidadReferencia and tipo = 'ENT' and idEntidad = 'WT'   
Where  ex.timestamp > (select top 1 tr.TimeStamp  from spintransmisioneselectronicasinforelacionada tr  left join spintransmisioneselectronicas te on te.id = tr.idTransmision   
where te.tipoexpediente = 'EXT' and te.TipoTransmision = 'TE' and tr.TipoRelacionado = 'OPT' and idRelacionado = ex.id order by tr.id desc) OR
vi.timestamp > (select top 1 tr.TimeStamp  from spintransmisioneselectronicasinforelacionada tr  left join spintransmisioneselectronicas te on te.id = tr.idTransmision 
where te.tipoexpediente = 'EXT' and te.TipoTransmision = 'TE' and tr.TipoRelacionado = 'OPT' and idRelacionado = ex.id order by tr.id desc) 
  and ex.Estado <> 'C' 
UNION
select 'M' as Accion, 'TR' as TipoOperacion, ex.id
from spexexpediente ex
left join spsioficina ofi on ofi.id = ex.IdOficina   
left join spsiempresa emp on emp.id = ofi.Empresa  
inner join spsiconversiones conv on conv.CodigoSP = emp.IdEntidadReferencia and tipo = 'ENT' and idEntidad = 'WT'   
Where ((select Top 1 TimeStamp from spexestadoexpediente where idExpediente = ex.id order by id desc) > ex.timeStamp and ( select Count(*) 
	from spintransmisioneselectronicasinforelacionada tr  left join spintransmisioneselectronicas te on te.id = tr.idTransmision   
where te.tipoexpediente = 'EXT' and te.TipoTransmision = 'TE' and tr.TipoRelacionado = 'OPT' and idRelacionado = ex.id ) > 0) and ex.Estado <> 'C' 
UNION
select 'C' as Accion,'TR' as TipoOperacion,ex.id
from spintransmisioneselectronicas te  
left join spintransmisioneselectronicasinforelacionada tr on tr.idTransmision = te.id    
left join spexexpediente ex on ex.id = tr.idRelacionado    
where te.TipoExpediente = 'EXT' and tr.TipoRelacionado = 'OPT' and ex.estado = 'C' ) TablaEnviar

inner join spexexpediente ex on ex.id = TablaEnviar.id
left join spexviaje v on ex.IdViaje = v.id  
left join spexviajeterrestre vt on vt.IdViaje = v.id  
left join spexviajemaritimo vm on vm.IdViaje = v.id  
left join spexviajeaereo va on va.IdViaje = v.id  
left join spbacompaniaaerea cia on cia.Id = va.idcompania  
left join spcoentidades entT on entT.Id = vt.IdTransportista  
left join spcoentidades entC on entC.Id = vm.IdConsignatario  
left join spcoentidades entR on entR.Id = ex.IdRemitente  
left join spcoentidades entD on entD.Id = ex.IdDestinatario  
left join spcoentidades entCor on entCor.id = ex.idCorresponsal  
left join spcoentidades entNav on entNav.id = vm.idNaviera
left join spcoentidades entCli on entCli.id = ex.idCliente  
left join spbmbuque b on b.Id = vm.IdBuque  
left join spsioficina ofi on ofi.id = ex.IdOficina   
left join spsiempresa emp on emp.id = ofi.Empresa  
inner join spsiconversiones conv on conv.CodigoSP = emp.IdEntidadReferencia and tipo = 'ENT' and idEntidad = 'WT'   ) as TablaFinal
left join splopoblacion pobC on pobC.id = codPoblacionCarga  
left join splopais paiC on paiC.id = pobC.idpais  
left join splopoblacion pobD on pobD.id = codPoblacionDescarga  
left join splopais paiD on paiD.id = pobD.idpais  
left join splopoblacion pobO on pobO.id = codPoblacionOrigen  
left join splopais paiO on paiO.id = pobO.idpais  
left join splopoblacion pobDe on pobDe.id = codPoblacionDestino  
left join splopais paiDe on paiDe.id = pobDe.idpais  
UNION 
select 'C' as Accion,'TR' as TipoOperacion,null as id,te.idExpediente as idEmisor,Null as idOficina,te.Emisor as CodigoEmisor,te.CodigoExpediente as ReferenciaEmpresaResponsable,te.idExpediente, Null as IdEmpresaCliente,Null as CifEmpresaCliente,Null as NombreEmpresaCliente,Null as IdEmpresaCorresponsal,Null as CifEmpresaCorresponsal,Null as NombreEmpresaCorresponsal,  
Null as ReferenciaEmpresaCliente,Null as Fecha,Null as MatriculaCamion,Null as IdTransportista,Null as Transportista,Null as CifTransportista,Null as ReferenciaVuelo,Null as CompaniaAerea, Null as Buque,Null as Consignatario,Null as NumeroBL, 
Null as codPoblacioncarga,Null as codPoblacionDescarga,Null as codPoblacionOrigen,Null as codPoblacionDestino,Null as TipoTrafico,Null as Via,Null as IdRemitente,Null as Remitente, Null as CIFRemitente, Null as DireccionRemitente,Null as idDestinatario, Null as Destinatario,Null as CIFDestinatario, Null as DireccionDestinatario,NULL as Incidencia,NULL as NumeroBooking,Null as Estado,  
Null as FechaRealEntrega, Null as FechaLLegada, Null as FechaSalida,NULL as Escala , Null as NumViaje, Null as Incoterm, Null as IdNaviera, Null as Naviera, Null as CifNaviera,
Null as CodPaisCarga,Null as PoblacionCarga,Null as PaisCarga,Null as codPaisDescarga,Null as PoblacionDescarga,Null as PaisDescarga,Null as codPaisOrigen,Null as PoblacionOrigen,Null as PaisOrigen,Null as CodPaisDestino,Null as PoblacionDestino,Null as PaisDestino

from spintransmisioneselectronicas te  
left join spintransmisioneselectronicasinforelacionada tr on tr.idTransmision = te.id    
left join spexexpediente ex on ex.id = tr.idRelacionado    
where tr.tiporelacionado ='OPT' and te.TipoExpediente = 'EXT' and tr.TipoRelacionado = 'OPT' and ex.id is Null 
END
GO
/****** Object:  StoredProcedure [dbo].[getAlbaranesParaWebTrackingContenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Eric
-- Create date: 14/02/2013
-- Description:	Query que obtiene los albaranes de import para que acabe mostrando los contenedores vacios en el webtracking
-- =============================================
ALTER PROCEDURE [dbo].[getAlbaranesParaWebTrackingContenedores]
	@strFCargaDesde varchar(50), @strFCargaHasta varchar(50)
AS
BEGIN
	SET NOCOUNT ON;
	
 Select pob.nombre as nombrePoblacion, alb.idpoblacion, pob.idProvincia , pro.provincia, 
   carCont.CodigoInternacional, carCont.descripcion, alb.id as idAlbaran, alb.fcarga, alb.hcarga, 
   alb.idcompania, comp.nombre as nombreCompania 
 from sptrAlbaran alb  
    left join splopoblacion pob on alb.idpoblacion = pob.id 
    left join sploprovincias pro on pob.idProvincia = pro.id 
    left join spcoentidades comp on alb.idCompania = comp.id  
    left join spbmcaracteristicascontenedor carCont on alb.idCaracteristicaContenedor = carCont.id 
  where tipoTraficoTransporte = 'I' 
    and fcarga >= @strFCargaDesde
    and fcarga <= @strFCargaHasta
    
END
GO
/****** Object:  StoredProcedure [dbo].[getAlbaranesParaWebTrackingWithCodigoAlbaran]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Eric Torre	
-- Create date: 19/03/2013
-- Description:	Obtener los albaranes para mostrar en el webTracking de laren
-- =============================================
ALTER PROCEDURE [dbo].[getAlbaranesParaWebTrackingWithCodigoAlbaran]
		@CodAlbaran varchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    Select al.id, exp.Codigo as codAlbaran, al.fcarga, al.hcarga, al.ReferenciaCliente, 
		al.booking, carCont.CodigoInternacional, carCont.descripcion as descCont,  
        al.matriculaContenedor, al.PrecintoContenedor, des.Destino, des.Direccion, pob.Nombre as poblacion,
        al.tipoTraficoTransporte, recogida.Nombre as lugarRecogida, entrega.Nombre as lugarEntrega, al.situacion, 
        al.ObsAlbaran,  al.RefCarga, trac.codrforms , buque.nombre as nombreBuque, comp.nombre as NombreCompania, 
        pobOrigenBuque.nombre as OrigenBuque, pobDestinoBuque.nombre as DestinoBuque, 
        dbo.SubstringHastaFinal(
            (select ' | ' + incidencia 
				from sptralbaranincidencias alInc
				left join sptrincidencias inc on alInc.idIncidencia = inc.id
                where al.id = alInc.idAlbaran FOR XML PATH(''))
            , 4) As codigosIncidencia, 
        dbo.SubstringHastaFinal(
            (select ' | ' +  descripcion 
                FROM sptralbarantareas at
                left join sptrtipotarea tt on at.idTipoTarea = tt.id
                where(at.tareapadre = -1)
                    and at.idalbaran = al.id FOR XML PATH(''))
            , 4) As ListaTareas 
    from sptralbaran al
		left join spepexpediente exp on al.id = exp.id 
		left join spcoentidades recogida on al.idLugarRecogida = recogida.id 
		left join spcoentidades entrega on al.idLugarEntrega = entrega.id 
		left join spbmcaracteristicascontenedor carCont on al.idCaracteristicaContenedor = carCont.id 
		left join sptrdestinos des on al.idDestino = des.id  
		left join sptrtractoras trac on al.idTractora = trac.id
		left join splopoblacion pob on des.idPoblacion = pob.id
		left join splopoblacion pobOrigenBuque on al.idPobOrigen = pobOrigenBuque.id
		left join splopoblacion pobDestinoBuque on al.idPobDestino = pobDestinoBuque.id
		left join spcoentidades comp on al.idCompania = comp.id  
		left join spbmbuque buque on al.idBuque = buque.id 
	Where exp.Codigo = @CodAlbaran
	order by al.FCarga, al.HCarga 
END
GO
/****** Object:  StoredProcedure [dbo].[GetBooking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetBooking]
	@IdBooking numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 SELECT top 1 b.*, pobC.nombre as NombrePoblCarga, pobD.Nombre as NombrePoblDescarga, pobDT.nombre as NombrePoblDestino,  pobT.nombre as NombrePoblTransbordo, pobST.nombre as NombrePoblSigTransbordo, 
 pobO.nombre as NombrePoblOrigen, ent.nombre as NombreCliente, expv.idExpediente,  (select count (*) from spopconocimiento c 
 where c.idBooking = b.id and (not c.codigoConocimiento is null or c.codigoConocimiento <> '') ) as TieneConocimientosConCodigoConocimiento ,
   expe.FechaCierreImport, expe.FechaCierreExport, expe.FechaCierreOperaciones,
                      (Select top 1 expe1.FechaCierreImport from spopexpediente expe1 inner join spopexpedienteviajes expv1 on expv1.idexpediente = expe1.id where expv.id = b.idExpedienteViajeSecundario ) as FechaCierreImportViajeSecundario, 
                      (Select top 1 expe1.FechaCierreExport from spopexpediente expe1 inner join spopexpedienteviajes expv1 on expv1.idexpediente = expe1.id where expv.id = b.IdExpedienteViajeSecundario ) as FechaCierreExportViajeSecundario,
 entA.Nombre as NomAgente, entC.Nombre as NomCorresponsal, entEAdicional.Nombre as NomEntidadAdicional,pob.Nombre as PoblacionDireccionFacturacion, lintra.Descripcion as DescripcionLineaTrafico
 FROM spopbooking b  left join splopoblacion pobC on pobC.id = b.PoblCarga  left join splopoblacion pobD on pobD.id = b.PoblDescarga  
 left join splopoblacion pobDT on pobDT.id = b.PoblDestino  left join splopoblacion pobT on pobT.id = b.PoblTransbordo  left join splopoblacion pobST on pobST.id = b.PoblSigTransbordo 
 left join splopoblacion pobO on pobO.id = b.PoblOrigen  left join spcoentidades ent on ent.id = b.idCliente  
 left join spopexpedienteviajes expv on expv.id = b.IdExpedienteViaje  
 left join spopexpediente expe on expe.id = expv.IdExpediente
 left join spcoentidades entA on entA.id = b.idAgente
 left join spcoentidades entC on entC.Id = b.IdCorresponsal
 left join spcoentidades entEAdicional on entEAdicional.Id = b.IdEntidadAdicional
 left join splopoblacion pob on pob.id = b.idPoblacionDireccionFacturacion
 left join spexlineastrafico lintra on lintra.id= b.IdLineaTrafico
 WHERE b.Id = @IdBooking and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 

       
END



GO
/****** Object:  StoredProcedure [dbo].[GetBookingConceptos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetBookingConceptos]
	@IdBooking numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 SELECT cc.*,con.ConceptosEspeciales,ent.Idioma 
 FROM spopbookingconceptos cc 
 inner join spcoconcepto con on con.id = cc.idConcepto 
 inner join spopbooking book on book.id = cc.idBooking 
 left join spcoentidades ent on ent.id = cc.idCliente 
 WHERE book.id = @IdBooking
 and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 
 
 

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetBookingConocimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetBookingConocimientos]
	@IdBooking numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 SELECT conBook.* from spopConocimientoBooking conBook WHERE conBook.idBooking = @IdBooking

 
 

       
END
GO
/****** Object:  StoredProcedure [dbo].[GetBookingContenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetBookingContenedores]
	@IdBooking numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 SELECT cont.*,emb.descripcion,caractcon.tamanyo,caractcon.tipo,IsNull(con.Tara,caractcon.Tara) as Tara, IsNull(con.ISO,caractcon.CodigoInternacional) as ISO,  
 (Select count(otc.id) from spexordentransportecontenedor otc where otc.tablapadre = 'B' and otc.idPadre = cont.id) as CuantasOTs,  
 (Select count(otc.id) from spexordentransportecontenedor otc where otc.tablapadre = 'c' and otc.idPadre in  
 (Select cc.id from spopconocimientocontenedores cc  where cc.idContenedorBooking = cont.id )) as CuantasOTsConocimiento,
 (Select TOP 1 mmpp.Id from spopsolicitudmmpp mmpp 
                    inner join spoppartidasolicmmpp p on p.IdSolicitudMMPP = mmpp.id 
                    inner JOIN spopcontenedorsolicmmpp c on c.IdPartidaSolicMMPP = P.Id 
                                and c.MatriculaContenedor = cont.matriculaContenedor 
  where mmpp.IdBooking = cont.IdBooking ORDER BY MMPP.ID DESC) as UltimaSolicitudMMPP
  FROM spopcontenedorbooking cont  
  inner join spopbooking book on book.id = cont.idbooking  
  left join spbmembalaje emb on cont.idtipobultos = emb.id  
  left join spbmcaracteristicascontenedor caractcon on caractcon.id=cont.idtipotamanyocontenedor  
  left join spbmcontenedor con on cont.MatriculaContenedor = con.Matricula
  WHERE book.id = @IdBooking and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 
 

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetBookingFicheros]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetBookingFicheros]
	@IdBooking numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
SELECT * FROM spopbookingadjuntos ba INNER JOIN spopbooking b on b.id = ba.idPadre
 WHERE idPadre =  @IdBooking and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)



       
END


GO
/****** Object:  StoredProcedure [dbo].[GetBookingOTRelacion]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetBookingOTRelacion]
	@IdBooking numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 SELECT OTC.IdOrdenTransporte, OTC.id as IdEquipamientoOT, CB.Id, OT.TipoOTCT, ENT.Nombre as Transportista, ot.Usuario, ot.FechaDocumento, ot.Observaciones, ot.TimeStamp as 'Ult.Modif.' 
  FROM spexordentransporteCONTENEDOR OTC, spopcontenedorbooking CB, SPEXORDENTRANSPORTE OT  left join spcoentidades ent on ent.id = ot.idTransportista 
   WHERE OTC.TABLAPADRE ='B'  AND OTC.IDPADRE = CB.ID  AND OTC.IDORDENTRANSPORTE = OT.ID  AND CB.IDBOOKING = @IdBooking
    UNION ALL 
     SELECT OTC.IdOrdenTransporte, OTC.id as IdEquipamientoOT, CB.Id, OT.TipoOTCT, ENT.Nombre as Transportista, ot.Usuario, ot.FechaDocumento, ot.Observaciones, ot.TimeStamp as 'Ult.Modif.'  
     FROM SPOPCONTENEDORBOOKING CB, SPOPCONOCIMIENTOCONTENEDORES CC, SPEXORDENTRANSPORTECONTENEDOR OTC, SPEXORDENTRANSPORTE OT  
     left join spcoentidades ent on ent.id = ot.idTransportista  
     WHERE CB.ID = CC.IDCONTENEDORBOOKING  AND CC.ID = OTC.IDPADRE AND OTC.TABLAPADRE ='C' AND OTC.IDORDENTRANSPORTE = OT.ID  AND CB.IDBOOKING = @IdBooking
 




       
END



GO
/****** Object:  StoredProcedure [dbo].[GetBookingOTs]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetBookingOTs]
	@IdBooking numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
SELECT ot.Id, ot.Tipo, ot.TipoTransporte,ot.Descripcion, ent.nombre as Transportista, 
	   ot.Usuario, ot.FechaDocumento, ot.Observaciones,
	    ot.TimeStamp as 'Ult.Modif.',ot.TipoOTCT,
       (SELECT TOP 1 ESTADO from spmemensajeria, spmehistoricomensajeria where spmemensajeria.idreferencia = OT.ID   and spmemensajeria.tipomensaje in ('OTE','EAT') and spmemensajeria.tiporeferencia ='OTE' and idFichero =spmemensajeria.id ORDER BY spmehistoricomensajeria.Id DESC) AS EstadoEDI_OTE, 
	   (SELECT TOP 1 ESTADO from spmemensajeria, spmehistoricomensajeria where spmemensajeria.idreferencia = OT.ID   and spmemensajeria.tipomensaje ='ADM' and spmemensajeria.tiporeferencia ='OTE' and idFichero =spmemensajeria.id ORDER BY spmehistoricomensajeria.Id DESC) AS EstadoEDI_ADM, 
	   (SELECT TOP 1 ESTADO from spmemensajeria, spmehistoricomensajeria where spmemensajeria.idreferencia = OT.ID   and spmemensajeria.tipomensaje ='ENT' and spmemensajeria.tiporeferencia ='OTE' and idFichero =spmemensajeria.id ORDER BY spmehistoricomensajeria.Id DESC) AS EstadoEDI_ENT, 
	   (select dbo.SubstringHastaFinal( 
                (select ',' + spexOrdenTransporteContenedor.MatriculaContenedor 
                from spexOrdenTransporteContenedor 
                where spexOrdenTransporteContenedor.IdOrdenTransporte = OT.Id and ISNULL(spexOrdenTransporteContenedor.MatriculaContenedor,'') <> ''
                FOR XML PATH('')), 2)) As Contenedor
 FROM  spexordentransporte ot 
 inner join spopbooking b on b.id = ot.idbooking 
 left join spcoentidades ent on ent.id = ot.idTransportista  
 WHERE ot.idBooking = @IdBooking and b.idOficina 
 in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)


       
END



GO
/****** Object:  StoredProcedure [dbo].[GetBookingsByConocimientoOrBooking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetBookingsByConocimientoOrBooking]
	@IdConocimiento numeric(18,0),
		@IdBooking numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 SELECT book.id, book.IdExpedienteViaje, book.IdExpedienteViajeSecundario, book.IdOficina, book.NombreCliente, pO.nombre 'P.Origen', pC.nombre 'P.Carga', pT.nombre 'P.Transbordo',
 pDesc.nombre 'P.Descarga', pDest.nombre 'P.Destino', 
 book.TextoShipper, book.TextoConsignee, book.NumBookingArmador, book.NumBLArmador, book.RefCliente, book.idOferta , book.IdShipper, book.IdConsignee
 FROM spopconocimiento con 
 inner join spopConocimientoBooking conbook on con.id=conbook.idConocimiento  
 inner join spopbooking book on conbook.idBooking=book.id  
 left join splopoblacion pO on pO.id = con.PoblOrigen
 left join splopoblacion pC on pC.id = con.PoblCarga
 left join splopoblacion pT on pT.id = con.PoblTransbordo
 left join splopoblacion pDesc on pDesc.id = con.PoblDescarga
 left join splopoblacion pDest on pDest.id = con.PoblDestino
 WHERE con.Id = @IdConocimiento   and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 UNION
 SELECT book.id, book.IdExpedienteViaje, book.IdExpedienteViajeSecundario, book.IdOficina, book.NombreCliente, pO.nombre 'P.Origen', pC.nombre 'P.Carga', pT.nombre 'P.Transbordo',
 pDesc.nombre 'P.Descarga', pDest.nombre 'P.Destino', 
 book.TextoShipper, book.TextoConsignee, book.NumBookingArmador, book.NumBLArmador, book.RefCliente, book.idOferta , book.IdShipper, book.IdConsignee
 FROM spopconocimiento con 
 inner join spopConocimientoBooking conbook on con.id=conbook.idConocimiento  
 inner join spopbooking book on conbook.idBooking=book.id  
 left join splopoblacion pO on pO.id = con.PoblOrigen
 left join splopoblacion pC on pC.id = con.PoblCarga
 left join splopoblacion pT on pT.id = con.PoblTransbordo
 left join splopoblacion pDesc on pDesc.id = con.PoblDescarga
 left join splopoblacion pDest on pDest.id = con.PoblDestino
 WHERE  book.id=@IdBooking  and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
  
        

      
END



GO
/****** Object:  StoredProcedure [dbo].[GetConocimiento]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimiento]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   SELECT c.*, pobC.nombre as NombrePoblCarga, pobD.Nombre as NombrePoblDescarga, pobDT.nombre as NombrePoblDestino,  pobT.nombre as NombrePoblTransbordo,
    pobO.nombre as NombrePoblOrigen, ent.nombre as NombreCliente,ent.Email as EmailCliente,ent.idioma as IdiomaCliente,  pobST.nombre as NombrePoblSiguienteTransbordo,
    pobPF.nombre as NombrePoblPagoFlete,pc.idDivisaContable,  entTer.nombre 'NombreTerminal',linea.codigo 'LineaCodigo', linea.descripcion 'LineaDescripcion' , 
     pobPBL.nombre 'NombrePoblPuertoBL', book.idOficina,expe.FechaCierreImport, expe.FechaCierreExport, expe.FechaCierreCuentaEscala,
     (Select TOP 1 expe1.FechaCierreImport from spopexpediente expe1 inner join spopexpedienteviajes expv1 on expv1.idexpediente = expe1.id where expv.id = book.idExpedienteViajeSecundario ) as FechaCierreImportViajeSecundario,
     (Select TOP 1 expe1.FechaCierreExport from spopexpediente expe1 inner join spopexpedienteviajes expv1 on expv1.idexpediente = expe1.id where expv.id = book.IdExpedienteViajeSecundario ) as FechaCierreExportViajeSecundario,
     book.IdExpedienteViaje, book.IdExpedienteViajeSecundario,pob.Nombre as PoblacionDireccionFacturacion
      FROM spopconocimiento c inner join spopbooking book on book.id = c.idBooking  left join spsioficina ofi on ofi.id = book.idOficina 
      left join spsiempresa emp on emp.id = ofi.empresa  left join spsiplancontable pc on pc.id = emp.idPlanContable  
      left join splopoblacion pobC on pobC.id = c.PoblCarga  left join splopoblacion pobD on pobD.id = c.PoblDescarga 
       left join splopoblacion pobDT on pobDT.id = c.PoblDestino  left join splopoblacion pobT on pobT.id = c.PoblTransbordo 
        left join splopoblacion pobO on pobO.id = c.PoblOrigen  left join splopoblacion pobST on pobST.id = c.PoblSiguienteTransbordo  
        left join splopoblacion pobPF on pobPF.id = c.PoblPagoFlete  left join splopoblacion pobPBL on pobPBL.id = c.PoblPuertoBL  
        left join spcoentidades ent on ent.id = c.idCliente  left join spcoentidades entTer on entTer.id = c.idTerminal  
        left join spoplineas linea on linea.id = c.idLinea  
        left join spopexpedienteviajes expv on expv.id = book.IdExpedienteViaje
        left join spopexpediente expe on expe.id = expv.IdExpediente
		left join splopoblacion pob on pob.id = c.idPoblacionDireccionFacturacion
        WHERE c.Id = @IdConocimiento and book.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)



      
END


GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoBooking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoBooking]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT conBook.* from spopConocimientoBooking conBook WHERE conBook.idConocimiento = @IdConocimiento
  

  

 
       

      
END
GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoCambiosDivisa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoCambiosDivisa]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    SELECT cd.*  FROM spopconocimientocambiosdivisa cd  inner join spopconocimiento c on c.id = cd.idConocimiento 
     inner join spopbooking book on book.id = c.idBooking  
     where cd.idConocimiento = @IdConocimiento and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
  

 
       

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoClausulasBL]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoClausulasBL]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    SELECT cbl.* 
    FROM spopconocimientoclausulasbl cbl inner join spopconocimiento c on c.id = cbl.idConocimiento  inner join spopBooking book on book.id = c.idBooking  
    WHERE cbl.idconocimiento=@IdConocimiento and book.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

      

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoConceptos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoConceptos]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   SELECT cc.*,con.ConceptosEspeciales,con.Manifestable, IsNull(ent.Idioma,'ES') as Idioma, ent.nombre as Cliente, entP.nombre as Proveedor, entA.nombre as Armador, 
 dbo.ConceptoConfacturas(cc.id,'BL') as TieneFacturas, c.TipoPagoFlete,con.snFleteBase,con.CodigoConcepto,dbo.EstadoFacturaPrefacturacion(cc.id,'BL') as EstadoFactura
 FROM spopconocimientoconceptos cc inner join spcoconcepto con on con.id = cc.idConcepto 
 inner join spopconocimiento c on c.id = cc.idConocimiento 
 inner join spopbooking book on book.id = c.idBooking 
 left join spcoentidades ent on ent.id = cc.idCliente 
 left join spcoentidades entP on entP.id = cc.idProveedor 
 left join spcoentidades entA on entA.id = cc.idArmador
 WHERE cc.Idconocimiento = @IdConocimiento and book.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
       
  
END


GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoContenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoContenedores]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	SELECT cc.*, (Select count(otc.id) from spexordentransportecontenedor otc where otc.tablapadre = 'c' and otc.idPadre=CC.ID) AS CuantasOTConocimiento,ccont.idVariable 
FROM spopconocimientocontenedores cc 
inner join spopconocimiento c on c.id = cc.idConocimiento 
inner join spopbooking book on book.id = c.idBooking 
left join spbmcaracteristicascontenedor ccont on ccont.id = cc.idTipoTamanyoContenedor 
WHERE cc.idconocimiento=@IdConocimiento and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
	
	
	

        

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoContenedoresBooking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoContenedoresBooking]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 
  SELECT cb.*,IsNull(con.Tara,cc.Tara) as Tara, IsNull(con.ISO,cc.CodigoInternacional) as ISO
  FROM spopcontenedorbooking cb  
  left join spbmcaracteristicascontenedor cc on cc.id = cb.IdTipoTamanyoContenedor 
  inner join spopbooking b on cb.idbooking = b.id  
  inner join spopConocimientoBooking conbook on b.id=conbook.idbooking   
  left join spbmcontenedor con on cb.MatriculaContenedor = con.Matricula
   WHERE cb.idbooking in (SELECT idbooking FROM spopconocimiento WHERE conbook.idConocimiento= @IdConocimiento)  and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoDespachos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoDespachos]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 
 SELECT d.*,doc.TipoDocAsociado as TipoDocAsociado,doc.descripcionDocumento as DescripcionDocAsociado, doc.SituacionAduanera as SituacionAduanera,doc.Mascara,
  bm.Descripcion as Embalaje, arancel.codigo 'CodigoArancel'  
  FROM spopconocimientodespachos d  left join spaddocsitaduanera doc on doc.id = d.iddocumentoasociado  
  left join spbmembalaje bm on bm.id = d.idTipoBultos  LEFT JOIN spbmarancel arancel on d.idArancel=arancel.id 
  WHERE d.idMercancia in (SELECT cm.id FROM spopconocimientomercancias cm  inner join spopconocimiento c on c.id = cm.idConocimiento 
  inner join spopbooking book on book.id = c.idBooking  
  WHERE cm.idconocimiento= @IdConocimiento and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario))
 

 
         
END

GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoDocumentosAcompañamiento]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoDocumentosAcompañamiento]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 
 SELECT d.*  FROM spopconocimientodocumentosacompanyamiento d  
 WHERE d.idMercancia in (SELECT cm.id FROM spopconocimientomercancias cm  inner join spopconocimiento c on c.id = cm.idConocimiento
  inner join spopbooking book on book.id = c.idBooking  
  WHERE cm.idconocimiento= @IdConocimiento and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario))
  

 
         
END

GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoEntidades]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoEntidades]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    SELECT ce.*, ent.Nombre as NombreEntidad 
    FROM spopconocimientoentidades ce  
    inner join spopconocimiento c on c.id = ce.idConocimiento  
    inner join spopbooking book on book.id = c.idBooking  
    left join spcoentidades ent on ent.id = ce.idEntidad
    where ce.idconocimiento = @IdConocimiento and book.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
      

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoMercancias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoMercancias]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50),
	@JoinDatosExtraUtilaje varchar(500),
	@CamposDatosExtraUtilaje varchar(500)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @sql nvarchar(2000);
 
 SET @sql = 'SELECT cm.*,tm.descripcion as ''TipoMercancia'',gm.descripcion as ''GrupoMercancia'',emb.Descripcion  as DescripcionBultos ,ar.Codigo as CodigoArancel,
 ar.Grupo as GrupoArancel,pai.CE as ''Comunitario'' ' + @CamposDatosExtraUtilaje + ' FROM spopconocimientomercancias cm inner join spopconocimiento c on c.id = cm.idConocimiento  inner join spopbooking book on book.id = c.idBooking  
 left join spbmembalaje emb on emb.id = cm.idTipoBultos  left join spbmarancel ar on ar.id = cm.idArancel  
 left join spILVATipoMercancia tm on tm.id = cm.idTipoMercancia  left join spILVAGrupoMercancia gm on gm.id = tm.idGrupo  
 left join splopoblacion pob on pob.id = c.PoblCarga left join splopais pai on pai.id = pob.idPais ' +  @JoinDatosExtraUtilaje +  ' WHERE cm.Idconocimiento = ' + CONVERT(varchar(20), @IdConocimiento )+ ' and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = ''' +  @Usuario + ''')'
 
EXEC sp_executesql @sql
         
END

GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoMercanciasContenedor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoMercanciasContenedor]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 
SELECT mc.*,cc.MatriculaContenedor  FROM spopconocimientomerccont mc  left join spopconocimientocontenedores cc on cc.id = mc.idContenedor  
left join spopconocimientomercancias me on me.id = mc.idMercancia  inner join spopconocimiento c on c.id = mc.idCOnocimiento  
inner join spopbooking book on book.id = c.idBooking  
where mc.idconocimiento = @IdConocimiento  and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

 
         
END

GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoMMPP]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoMMPP]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
SELECT substring(cmerc.DescrMercanciaBL,0,30) + '...' 'Mercancia', mmpp.*, expedidor.denominacion as 'Expedidor Nombre', expedidor.NIF as CIF, mmppMar.NumOnu 'MMPP - Num Onu', mmppMar.Clase as MMPPClase,mmppMar.GrupoEnvasado as MMPPGrupo  
FROM spopconocimientommpp mmpp inner join spopconocimientomercancias cmerc on  mmpp.IdMercancia=cmerc.Id  
left join spExpDestMMPP expedidor on mmpp.idExpedidor=expedidor.id  
left join spmmppmaritimas mmppMar on mmpp.IdMercanciaPeligrosa=mmppMar.id 
WHERE IdMercancia in (SELECT id FROM spopconocimientomercancias WHERE idConocimiento = @IdConocimiento)
  
  

 
         
END

GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoMMPPMercCont]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoMMPPMercCont]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT conC.Matriculacontenedor 'Matricula', substring(conM.DescrMercanciaBL,0,30) + '...' 'Mercancia',conC.TamanyoContenedor as 'Tamaño',conC.TipoContenedor as Tipo, mmppMC.* ,mmppMar.NumOnu 'MMPP - Num Onu', mmppMar.Clase as MMPPClase,mmppMar.GrupoEnvasado as MMPPGrupo 
FROM spopConocimientoMMPPmercCont mmppMC inner join spopconocimientomerccont conMC on mmppMC.idConocimientoMercCont=conMC.id 
left join spopconocimientocontenedores conC on conMC.idContenedor=conC.id 
inner join spopconocimientomercancias conM on conMC.idMercancia = conM.id 
left join spmmppmaritimas mmppMar on mmppMar.id = (select IdMercanciaPeligrosa from spopconocimientommpp where id = mmppMC.idConocimientoMMPP)
WHERE idConocimientoMercCont in (SELECT id FROM spopconocimientomerccont WHERE idConocimiento = @IdConocimiento)
  

  

 
       

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoOrigenDatos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoOrigenDatos]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  SELECT od.*, cod.campo as OrigenDatos, cod.Tipo, cod.Grupo, cod.Favorito, cod.ValoresAplicacion  
  FROM spopconocimientoorigendatos od inner join spsiorigendatos cod on cod.id = od.idOrigenDatos  
  inner join spopconocimiento c on c.id = od.idConocimiento inner join spopbooking book on book.id = c.idBooking  
  WHERE cod.grupo = 'Conocimiento' and
   od.idConocimiento = @IdConocimiento and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
    order by cod.Favorito,cod.Grupo, cod.campo 
  
  

  

 
       

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoOT]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoOT]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 SELECT ot.Id, ot.Tipo, ot.TipoTransporte,ot.TipoOTCT, ot.Descripcion, ent.nombre as Transportista, ot.Usuario, 
        ot.FechaDocumento, ot.Observaciones, ot.TimeStamp as 'Ult.Modif.',
        (select dbo.SubstringHastaFinal( 
                (select ',' + spexOrdenTransporteContenedor.MatriculaContenedor 
                from spexOrdenTransporteContenedor 
                where spexOrdenTransporteContenedor.IdOrdenTransporte = OT.Id 
                FOR XML PATH('')), 2)) As Contenedor
  FROM  spexordentransporte ot 
  inner join spopconocimiento c on c.id = ot.idconocimiento 
  inner join spopbooking b on b.id = c.idbooking 
  left join spcoentidades ent on ent.id = ot.idTransportista  
  WHERE ot.idconocimiento = @IdConocimiento 
  and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
  

 
       

      
END



GO
/****** Object:  StoredProcedure [dbo].[GetConocimientosByBooking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientosByBooking]
	@IdBooking numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
SELECT con.*,pob2.nombre as 'NomPoblOrigen',pob3.nombre as 'NomPoblDestino' ,
       pob4.nombre as 'NomPoblTransbordo',pob5.nombre as 'NomPuertoBL',
       pob6.nombre as 'NomPoblPagoFlete',
       (select DBO.SubstringHastaFinal((select ',' + spopconocimientocontenedores.MatriculaContenedor
               from spopconocimientocontenedores
               where spopconocimientocontenedores.IdConocimiento = Con.Id FOR XML PATH('')), 2)) 
               As Contenedor 
       FROM spopConocimientoBooking conBook inner join spopConocimiento con on conbook.idconocimiento=con.id left join splopoblacion pob2 on pob2.id = con.PoblOrigen left join splopoblacion pob3 on pob3.id = con.PoblDestino left join splopoblacion pob4 on pob4.id = con.PoblTransbordo left join splopoblacion pob5 on pob5.id = con.PoblPuertoBL left join splopoblacion pob6 on pob6.id = con.PoblPagoFlete
 WHERE conBook.IdBooking = @IdBooking

 
 
 

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetConocimientosByNumBLArmador]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientosByNumBLArmador]
	-- Add the parameters for the stored procedure here
@NUMBLARMADOR varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

Select c.*, b.idOficina,b.IdExpedienteViaje, b.IdExpedienteViajeSecundario  
	from spopconocimiento c  left join spopbooking b on b.id = c.idBooking  
	where c.NumBLArmador like @NUMBLARMADOR + '%' 
	and  b.IdExpedienteViaje in ( Select expv.id from spopexpedienteviajes expv  inner join spopexpediente expe on expe.id = expv.idExpediente  where expe.cancelado = 'false' )
END
GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoSeguimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoSeguimientos]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   SELECT cs.*  FROM spopconocimientoseguimiento cs  inner join spopconocimiento c on c.id = cs.idConocimiento  inner join spopbooking book on book.id = c.idBooking 
    WHERE cs.idConocimiento= @IdConocimiento and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
   Order By Fecha asc
 
       

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetConocimientoVariables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetConocimientoVariables]
	@IdConocimiento numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 SELECT ev.*, v.nombre as Variable, v.Tipo, v.Grupo, 
    ( Select top 1 diva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on va.TipoVA = 'grupovariables' and cva.idVA= Va.id  
     inner join spsidescripcionidiomasvaloresaplicacion diva on cva.id = diva.idcva where cva.clave = v.grupo ) as descripcion,  v.snCompuesta          
 FROM spopconocimientovariables ev inner join spcovariable v on v.id = ev.idvariable  inner join spopconocimiento c on c.id = ev.idConocimiento  
 inner join spopbooking book on book.id = c.idBooking 
 WHERE ev.idConocimiento =@IdConocimiento and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 
  order by v.nombre 

  

 
       

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetDespachosByViaje]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetDespachosByViaje]
	@IdViaje numeric(18,0),
	@NumDespacho varchar(50)
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	select *
	from (
SELECT ds.*, arancel.Codigo 'CodigoArancel', doc.TipoDocAsociado as TipoDocAsociado,doc.SituacionAduanera as SituacionAduanera,
doc.Mascara,doc.DescripcionDocumento as DescripcionDocAsociado, co.NumBlArmador
FROM spopconocimientodespachos ds left join spbmarancel arancel on arancel.id=ds.idArancel 
left join spaddocsitaduanera doc on doc.id = ds.iddocumentoasociado inner join spopconocimientomercancias cm on cm.id = ds.idmercancia 
inner join spopconocimiento co on co.id = cm.idConocimiento left join spopbooking b on b.id = co.idbooking left join spopbooking b_sec on b_sec.id = co.idbooking  
WHERE b.IdExpedienteViaje = @IdViaje   
and ds.NumDocumentoAduanal = @NumDespacho


  UNION
SELECT ds.*, arancel.Codigo 'CodigoArancel', doc.TipoDocAsociado as TipoDocAsociado,doc.SituacionAduanera as SituacionAduanera,doc.Mascara, 
doc.DescripcionDocumento as DescripcionDocAsociado, co.NumBlArmador
FROM spopconocimientodespachos ds left join spbmarancel arancel on arancel.id=ds.idArancel left join spaddocsitaduanera doc on doc.id = ds.iddocumentoasociado inner join spopconocimientomercancias cm on cm.id = ds.idmercancia inner join spopconocimiento co on co.id = cm.idConocimiento left join spopbooking b on b.id = co.idbooking left join spopbooking b_sec on b_sec.id = co.idbooking  
WHERE  b.IdExpedienteViajeSecundario = @IdViaje  
and ds.NumDocumentoAduanal = @NumDespacho
) as Tabla order by timestamp
 
  
        

      
END





GO
/****** Object:  StoredProcedure [dbo].[GetEmbarquesViaje]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[GetEmbarquesViaje]
	@IdViaje numeric(18,0),
	@Usuario varchar(50),
	@TipoGrupaje varchar(2)
AS
BEGIN
	
	SET NOCOUNT ON;

  select ex.id,ex.expediente,ex.direccionremitente,ex.direcciondestinatario, pob.nombre as origen, pob2.nombre as destino,  emb.bultos,emb.pesobruto,
  p.pesotasable as pesoTasable,emb.volumen,emb.metroslineales as largo,ex.incoterm,  p.observaciones, lt.descripcion, emb.id as idembarque,p.id as idPartida  
  from spexexpediente ex inner join spexpartida p  on p.idexpediente = ex.id  left join spexembarque emb on emb.idpartida = p.id 
   left join spexlineastrafico lt on ex.idlineatrafico = lt.id  left join splopoblacion pob on p.idorigen = pob.id 
    left join splopoblacion pob2 on p.iddestino = pob2.id  
    where ex.idviaje = @IdViaje and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) 
    and not ex.TipoGrupaje = @TipoGrupaje  order by ex.expediente

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetEmbarquesViajeHouse]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetEmbarquesViajeHouse]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
 select ex.id,ex.expediente,ex.direccionremitente,ex.direcciondestinatario, pob.nombre as origen, pob2.nombre as destino, emb.bultos, 
  emb.pesobruto,p.pesotasable as pesoTasable,emb.volumen,emb.metroslineales as largo,ex.incoterm, p.observaciones,  
  lt.descripcion, emb.id as idembarque,p.id as idPartida  
  from  spexexpediente ex inner join spexpartida p  on p.idexpediente = ex.id  
  left join spexembarque emb on emb.idpartida = p.id  left join spexlineastrafico lt on ex.idlineatrafico = lt.id  
  left join splopoblacion pob on p.idorigen = pob.id left join splopoblacion pob2 on p.iddestino = pob2.id  
  where ex.idviaje = @IdViaje
   and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) 
   and  ex.id in (select distinct IdReferenciaRelacionada from spepexpedientesrelacionados exrel where TipoReferenciaRelacionada = 'EXT' and TipoReferenciaPadre = 'EXT')  order by ex.expediente 

   
 

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetEmbarquesViajeMaster]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetEmbarquesViajeMaster]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  select ex.id,ex.expediente,ex.direccionremitente,ex.direcciondestinatario, pob.nombre as origen, pob2.nombre as destino,  emb.bultos,emb.pesobruto,
  p.pesotasable as pesoTasable,emb.volumen,emb.metroslineales as largo,ex.incoterm,  p.observaciones, lt.descripcion, emb.id as idembarque,p.id as idPartida  
  from spexexpediente ex inner join spexpartida p  on p.idexpediente = ex.id  left join spexembarque emb on emb.idpartida = p.id 
   left join spexlineastrafico lt on ex.idlineatrafico = lt.id  left join splopoblacion pob on p.idorigen = pob.id 
    left join splopoblacion pob2 on p.iddestino = pob2.id  
    where ex.idviaje = @IdViaje and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) 
    and not ex.id in (select distinct IdReferenciaRelacionada from spepexpedientesrelacionados exrel  where TipoReferenciaRelacionada = 'EXT' and TipoReferenciaPadre = 'EXT')  order by ex.expediente

   
 

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetExpediente]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpediente]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  select distinct e.*,pc.iddivisacontable as idDivisaOficina,se.descripcion as servicio,se.codigo as codservicio,ent1.nombre as DescCliente,
  ent1.CIF as CIFCliente, ent1.Tf1 as TelefonoCliente, ent3.Tf1 as TelefonoDestinatario, ent2.nombre as DescRemitente, ent3.nombre as DescDestinatario,  ent4.nombre as DescCorresponsal, v.descripcion as Viaje, vm.Escala as Escala, 
  ex.Expediente as ExpedientePadre, exlt.Descripcion as DescripcionLineaTrafico,  pobDestinatario.nombre as PoblacionDestinatario, 
  pobRemitente.nombre as PoblacionRemitente,ofe.CreadoPor as CreadorOferta, ofe.Oferta, entAg.nombre as Agente, dent4.DireccionCorresponsal,
  entArmador.ScacCode,entCliComercial.Nombre as NomClienteComercial,pobCarga.Nombre as NomPobCarga,pobDescarga.Nombre as NomPobDescarga,pobBooking.Nombre as NomPobBooking,IsNull(ofe.DiasLibres,0) as DiasLibresOferta,IsNull(vm.FechaLlegada,IsNull(vt.FechaLLegada,IsNull(va.FechaLlegada,Null))) as FechaLLegada,
  entCorrAdicional.Nombre as CorresponsalAdicional, conShipperINTTRA.Nombre + IsNull(' ' + conShipperINTTRA.Apellidos,'') as ContactoShipperINTTRA, conConsigneeINTTRA.Nombre + IsNull(' ' + conConsigneeINTTRA.Apellidos,'') as ContactoConsigneeINTTRA,
  conNotifyINTTRA.Nombre + IsNull(' ' + conNotifyINTTRA.Apellidos,'') as ContactoNotifyINTTRA, conNotify2INTTRA.Nombre + IsNull(' ' + conNotify2INTTRA.Apellidos,'') as ContactoNotify2INTTRA,ent1.SnMoroso, entAgAdu.Id as IdAgenteAduanas, entAgAdu.Nombre as AgenteAduanas, dentAgAdu.DireccionAgenteAduanas
  from spexexpediente e  left join (spsioficina o inner join spsiempresa emp on o.empresa = emp.id 
  inner join spsiplancontable pc on pc.id = emp.idPlanContable) on o.id = e.idoficina  
  left join spsiconfiguracion c on c.oficina = e.idoficina left join spcoentidades ent1 on e.idcliente = ent1.id 
  left join spcoentidades ent2 on e.idremitente = ent2.id  left join spcoentidades ent3 on e.iddestinatario = ent3.id 
  left join spcoentidades ent4 on e.idcorresponsal = ent4.id left join spopservicios se on e.idservicio = se.id  
  left join spcoentidades entAgAdu on entAgAdu.id = ent1.idAgenteAduanas
  left join (select distinct IdEntidad,IsNull(DireccionConfigurada,Direccion) as DireccionAgenteAduanas from spcodireccionesentidades where PrincipalDocumentacion = 1) AS dentAgAdu on dentAgAdu.IdEntidad = entAgAdu.id
  left join (select distinct IdEntidad,IsNull(DireccionConfigurada,Direccion) as DireccionCorresponsal from spcodireccionesentidades where PrincipalDocumentacion = 1) AS dent4 on dent4.IdEntidad = ent4.Id
  left join spcoentidades entAg on entAg.id = e.idClienteComercial
  left join spexviaje v on v.id = e.idviaje
  left join spexviajemaritimo vm on vm.idViaje = v.id  
  left join spexviajeterrestre vt on vt.idViaje = v.id
  left join spexviajeaereo va on va.idViaje = v.id
  left join spexexpediente ex on ex.id = e.IdExpedientePadre  left join spexlineastrafico exlt on exlt.id = e.idLineaTrafico  
  left join splopoblacion pobRemitente on pobRemitente.id = e.IdPoblacionRemitente  left join spcooferta ofe on ofe.id = (select Top 1 IdReferenciaRelacionada from spepexpedientesrelacionados where idReferenciaPadre = e.Id and TipoReferenciaPadre = 'EXT' and TipoReferenciaRelacionada = 'OF')
  left join splopoblacion pobDestinatario on pobDestinatario.id = e.IdPoblacionDestinatario  
  left join spcoentidades entArmador on entArmador.id = vm.idNaviera
  left join spcoentidades entCliComercial on e.idClienteComercial = entCliComercial.id
  left join splopoblacion pobCarga on pobCarga.id = e.IdPobCarga
  left join splopoblacion pobDescarga on pobDescarga.id = e.IdPobDescarga
  left join splopoblacion pobBooking on pobBooking.id = e.IdPoblacionBooking
  left join spcoentidades entCorrAdicional on entCorrAdicional.id = e.idCorresponsalAdicional
  left join spcocontactosentidades conShipperINTTRA on conShipperINTTRA.id = e.IdContactoShipperINTTRA
  left join spcocontactosentidades conConsigneeINTTRA on conConsigneeINTTRA.id = e.IdContactoConsigneeINTTRA
  left join spcocontactosentidades conNotifyINTTRA on conNotifyINTTRA.id = e.IdContactoNotifyINTTRA
  left join spcocontactosentidades conNotify2INTTRA on conNotify2INTTRA.id = e.IdContactoNotify2INTTRA
  where  e.id = @IdExpediente  and e.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )


      
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteByCodigo]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteByCodigo]
	@Expediente varchar(25),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  select distinct e.*,pc.iddivisacontable as idDivisaOficina,se.descripcion as servicio,se.codigo as codservicio,ent1.nombre as DescCliente,
  ent2.nombre as DescRemitente, ent3.nombre as DescDestinatario,  ent4.nombre as DescCorresponsal, v.descripcion as Viaje, vm.Escala as Escala, 
  ex.Expediente as ExpedientePadre, exlt.Descripcion as DescripcionLineaTrafico,  pobDestinatario.nombre as PoblacionDestinatario, 
  pobRemitente.nombre as PoblacionRemitente,ofe.CreadoPor as CreadorOferta
  from spexexpediente e  left join (spsioficina o inner join spsiempresa emp on o.empresa = emp.id 
  inner join spsiplancontable pc on pc.id = emp.idPlanContable) on o.id = e.idoficina  
  left join spsiconfiguracion c on c.oficina = e.idoficina left join spcoentidades ent1 on e.idcliente = ent1.id 
  left join spcoentidades ent2 on e.idremitente = ent2.id  left join spcoentidades ent3 on e.iddestinatario = ent3.id 
  left join spcoentidades ent4 on e.idcorresponsal = ent4.id left join spopservicios se on e.idservicio = se.id  
  left join spexviaje v on v.id = e.idviaje  left join spexviajemaritimo vm on vm.idViaje=v.id  
  left join spexexpediente ex on ex.id = e.IdExpedientePadre  left join spexlineastrafico exlt on exlt.id = ex.idLineaTrafico  
  left join splopoblacion pobRemitente on pobRemitente.id = e.IdPoblacionRemitente  left join spcooferta ofe on ofe.id = e.IdOferta  
  left join splopoblacion pobDestinatario on pobDestinatario.id = e.IdPoblacionDestinatario  
  where  e.Expediente = @Expediente  and e.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteC]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteC]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT e.*, ent.nombre as ConsignatarioBuque, b.nombre as buque, p.descripcion as puerto, p .idpoblacion as poblPuerto,  pob1.nombre as PuertoInicioRuta, 
 pob2.nombre as PuertoAnterior, serv1.codigo as codservLlegada, serv1.descripcion as ServicioLlegada,  serv2.codigo as codservSalida, 
 serv2.descripcion as ServicioSalida, sr.codigo as codServicioRegular,entCli.Idioma as IdiomaCliente, entCli.nombre as Cliente, 
 entCli.observaciones as ObservacionesCliente,  sr.descripcion as DescServicioRegular, pc.idDivisaContable, chkl.descripcion as DescripcionCheckList, 
 lin.codigo as lineaComercial, lin.Descripcion as DescripcionLineaComercial,  paiscee.Nombre as NombrePaisEntradaCEE, entAg.nombre as Agente,
  (Select top 1 id from spcodireccionesentidades where idEntidad = e.IdCliente ) as idDireccion, 
   (Select top 1 hme.ReferenciaEmisor from spmemensajeria me left join spmehistoricomensajeria hme on  me.id=hme.idFichero 
   where  (hme.Estado = 'AAC' or hme.Estado = 'ECO')  and me.TipoMensaje='EA' and hme.FuncionMensaje=47 and me.idReferencia=e.id) as ReferenciaEmisorEAAlta , pat.descripcion as DescPatron, entCliC.nombre as ClienteComercial
   , expead.Codigo as ExpedienteAdministracion,entBr.nombre as NomBroker, pob3.Nombre as PoblacionDireccionFacturacion
    FROM spopexpediente e left join spcoentidades ent on ent.id = e.idConsignatarioBuque  
    left join spcoentidades entCli on entCli.id = e.idCliente 
      left join spcoentidades entAg on entAg.id = e.idClienteComercial
     left join spsioficina ofi on ofi.id = e.idOficina  left join spsiempresa emp on emp.id = ofi.empresa  
     left join spsiplancontable pc on pc.id = emp.idPlanContable  left join spbmbuque b on b.id = e.idbuque  
     left join spbmpuerto p on p.id = e.idpuerto   left join splopoblacion pob1 on pob1.id = e.idPuertoInicioRuta  
     left join splopoblacion pob2 on pob2.id = e.idPuertoAnterior  left join splopais paiscee on paiscee.id = e.idPaisEntradaCEE  
     left join spopservicios serv1 on serv1.id = e.idServicioLlegada  left join spopservicios serv2 on serv2.id = e.idServicioSalida  
     left join spopservicioregular sr on sr.id = e.servicioRegular  left join spopchecklist chkl on chkl.id = e.idCheckList  
     left join spoplineas lin on lin.id = e.idLinea 
     left join spopexpediente expead on expead.id = e.idExpedienteAdministracion 
     left join spfapatrones pat on pat.id = e.idpatron
     left join spcoentidades entCliC on entCliC.id = e.idClienteComercial
     left join spcoentidades entBr on entBr.id = e.idEntidadBroker
	 left join splopoblacion pob3 on pob3.id = e.idPoblacionDireccionFacturacion
     WHERE e.id = @IdExpediente and e.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
       

      
END



GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCambiosDivisa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCambiosDivisa]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT cd.* FROM spexexpedientecambiosdivisa cd inner join spexexpediente ex on ex.id = cd.idExpediente  
 where idExpediente = @IdExpediente 
   and ex.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )



      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCAtraques]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCAtraques]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT ea.*, m.codigo as codMuelle, m.descripcion as Muelle, m.Alineacion as AlineacionMuelle  
FROM spopexpedienteatraques ea  inner join spopexpediente ex on ex.id = ea.idexpediente  left join spbmmuelle m on ea.idmuelle = m.id  
where idExpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCAtraquesOperaciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCAtraquesOperaciones]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  SELECT ato.*,ent.nombre as Estibador, ent.CIF as EstibadorNif  
  FROM spopexpedienteatraqueoperaciones ato  
  inner join spopexpedienteatraques at on at.id = ato.idatraque  inner join spopexpediente ex on ex.id = at.idexpediente  
  left join spcoentidades ent on ent.id = ato.idestibador  
  where at.idExpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
  
 

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCAtraquesVCL]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCAtraquesVCL]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT *  
 FROM spopexpedienteatraquevcl atv  inner join spopexpedienteatraques at on at.id = atv.idatraque  
 inner join spopexpediente ex on ex.id = at.idexpediente  
 where at.idexpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)


       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCBookings]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCBookings]
	@Viaje varchar(5000),
	@Trafico varchar(50),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
SELECT book.* ,  
(select count(spopcontenedorbooking.id) 
from spopcontenedorbooking left join spbmcaracteristicascontenedor on spopcontenedorbooking.idtipotamanyocontenedor = spbmcaracteristicascontenedor.id 
where idbooking = book.id and spbmcaracteristicascontenedor.tamanyo=40) as Total40, 
(select count(spopcontenedorbooking.id) 
from spopcontenedorbooking left join spbmcaracteristicascontenedor on spopcontenedorbooking.idtipotamanyocontenedor = spbmcaracteristicascontenedor.id 
where idbooking = book.id and spbmcaracteristicascontenedor.tamanyo=20) as Total20, (select count(spopcontenedorbooking.id) 
from spopcontenedorbooking left join spbmcaracteristicascontenedor on spopcontenedorbooking.idtipotamanyocontenedor = spbmcaracteristicascontenedor.id 
where idbooking = book.id and spbmcaracteristicascontenedor.tamanyo<20) as TotalOtros20, (select count(spopcontenedorbooking.id) 
from spopcontenedorbooking left join spbmcaracteristicascontenedor on spopcontenedorbooking.idtipotamanyocontenedor = spbmcaracteristicascontenedor.id 
where idbooking = book.id and spbmcaracteristicascontenedor.tamanyo>=21 and spbmcaracteristicascontenedor.tamanyo<>40) as TotalOtros40, 0 as TotalOtros, 0 as TotalTEUS, 
(select count(spopcontenedorbooking.id) from spopcontenedorbooking where idbooking = book.id and snMMPP =1) as IMO, (Select  COUNT(mmpp.id)  from spopsolicitudmmpp mmpp  where idBooking= book.id) as 'EsMMPP',  (Select COUNT(OT.id)  from spexordentransporte OT  where idBooking= book.id) as 'NumeroOTs'  
FROM spopbooking book  
WHERE book.idExpedienteViaje in (@Viaje)  and book.trafico in (@Trafico)  
and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) 

UNION  

SELECT book.*,  (select count(spopcontenedorbooking.id) from spopcontenedorbooking 
left join spbmcaracteristicascontenedor on spopcontenedorbooking.idtipotamanyocontenedor = spbmcaracteristicascontenedor.id where idbooking = book.id and spbmcaracteristicascontenedor.tamanyo=40) as Total40, (select count(spopcontenedorbooking.id) from spopcontenedorbooking left join spbmcaracteristicascontenedor on spopcontenedorbooking.idtipotamanyocontenedor = spbmcaracteristicascontenedor.id where idbooking = book.id and spbmcaracteristicascontenedor.tamanyo=20) as Total20, (select count(spopcontenedorbooking.id) from spopcontenedorbooking left join spbmcaracteristicascontenedor on spopcontenedorbooking.idtipotamanyocontenedor = spbmcaracteristicascontenedor.id where idbooking = book.id and spbmcaracteristicascontenedor.tamanyo<20) as TotalOtros20, (select count(spopcontenedorbooking.id) from spopcontenedorbooking left join spbmcaracteristicascontenedor on spopcontenedorbooking.idtipotamanyocontenedor = spbmcaracteristicascontenedor.id where idbooking = book.id and spbmcaracteristicascontenedor.tamanyo>=21 and spbmcaracteristicascontenedor.tamanyo<>40) as TotalOtros40, 0 as TotalOtros, 0 as TotalTEUS,  (select count(spopcontenedorbooking.id) from spopcontenedorbooking where idbooking = book.id and snMMPP =1) as IMO, (Select  COUNT(mmpp.id)  from spopsolicitudmmpp mmpp  where idBooking= book.id) as 'EsMMPP',  (Select  COUNT(OT.id)  from spexordentransporte OT  where idBooking= book.id) as 'NumeroOTs'  
FROM spopbooking book  
WHERE book.idExpedienteViajeSecundario in (@Viaje)  and book.trafico in (@Trafico)  
and book.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCByCodigo]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCByCodigo]
	@Codigo varchar(35),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT e.*, ent.nombre as ConsignatarioBuque, b.nombre as buque, p.descripcion as puerto, p .idpoblacion as poblPuerto,  pob1.nombre as PuertoInicioRuta, 
 pob2.nombre as PuertoAnterior, serv1.codigo as codservLlegada, serv1.descripcion as ServicioLlegada,  serv2.codigo as codservSalida, 
 serv2.descripcion as ServicioSalida, sr.codigo as codServicioRegular,entCli.Idioma as IdiomaCliente, entCli.nombre as Cliente, 
 entCli.observaciones as ObservacionesCliente,  sr.descripcion as DescServicioRegular, pc.idDivisaContable, chkl.descripcion as DescripcionCheckList, 
 lin.codigo as lineaComercial, lin.Descripcion as DescripcionLineaComercial,  paiscee.Nombre as NombrePaisEntradaCEE,
  (Select top 1 id from spcodireccionesentidades where idEntidad = e.IdCliente ) as idDireccion, 
   (Select top 1 hme.ReferenciaEmisor from spmemensajeria me left join spmehistoricomensajeria hme on  me.id=hme.idFichero 
   where  (hme.Estado = 'AAC' or hme.Estado = 'ECO')  and me.TipoMensaje='EA' and hme.FuncionMensaje=47 and me.idReferencia=e.id) as ReferenciaEmisorEAAlta , pat.descripcion as descPatron
    FROM spopexpediente e left join spcoentidades ent on ent.id = e.idConsignatarioBuque  
    left join spcoentidades entCli on entCli.id = e.idCliente 
     left join spsioficina ofi on ofi.id = e.idOficina  left join spsiempresa emp on emp.id = ofi.empresa  
     left join spsiplancontable pc on pc.id = emp.idPlanContable  left join spbmbuque b on b.id = e.idbuque  
     left join spbmpuerto p on p.id = e.idpuerto   left join splopoblacion pob1 on pob1.id = e.idPuertoInicioRuta  
     left join splopoblacion pob2 on pob2.id = e.idPuertoAnterior  left join splopais paiscee on paiscee.id = e.idPaisEntradaCEE  
     left join spopservicios serv1 on serv1.id = e.idServicioLlegada  left join spopservicios serv2 on serv2.id = e.idServicioSalida  
     left join spopservicioregular sr on sr.id = e.servicioRegular  left join spopchecklist chkl on chkl.id = e.idCheckList  
     left join spoplineas lin on lin.id = e.idLinea  
     left join spfapatrones pat on pat.id = e.idpatron
     WHERE e.Codigo = @Codigo and e.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
       

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCCambiosDivisa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCCambiosDivisa]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 SELECT cd.*  FROM spopexpedientecambiosdivisa cd inner join spopexpediente ex on ex.id = cd.idexpediente  
 where idExpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)


       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCCheckList]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCCheckList]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT cl.*,  pcl.descripcion as Periodicidad,it.serviciobuque, ent.Nombre as Proveedor, it.IdEmail as EmailConfiguradoConcepto 
 FROM spopexpedientechecklist cl  inner join spopexpediente ex on ex.id = cl.idexpediente  inner join spopitemchecklist it on it.id = cl.iditem   
 inner join SPOPPERIODICIDADCHECKLIST pcl on  pcl.id = cl.idperiodicidad  
 left  join SPCOENTIDADES ent on  ent.id = cl.idProveedor
 where idExpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCCheckListAdjReL]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCCheckListAdjReL]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT car.*   FROM spopexpedientechecklistadjrelacionados car  inner join spopexpedientechecklist cl on cl.id = car.idexpedientechecklist 
  where cl.idExpediente = @IdExpediente



  


  
 

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCCheckListComentarios]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCCheckListComentarios]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  SELECT clc.*   FROM spopexpedientechecklistComentarios clc  inner join spopexpedientechecklist cl on cl.id = clc.idexpedientechecklist 
   where cl.idExpediente = @IdExpediente

 

 

  
 

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCConceptos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCConceptos]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  SELECT ec.*, c.nombre as nombreConcepto, c.codigoconcepto as CodigoConcepto, ent.Idioma, ent.nombre as Cliente, entP.nombre as Proveedor,  dbo.ConceptoConfacturas(ec.id,'EXC') as TieneFacturas,dbo.EstadoFacturaPrefacturacion(ec.id,'EXC') as EstadoFactura ,
  (select chk.DescripcionCapitan from spopexpedientechecklist chk inner join spopexpedientechecklistadjrelacionados chkadj on chkadj.idexpedientechecklist = chk.id where chkadj.tiporeferencia = 'C' and chkadj.idReferencia = ec.id) as DescCapitan 
 FROM spopexpedienteconceptos ec  inner join spopexpediente ex on ex.id = ec.idexpediente  inner join spcoconcepto c on ec.idconcepto = c.id  
 left join spcoentidades ent on ent.id = ec.idCliente  left join spcoentidades entP on entP.id = ec.idProveedor  
 where ec.idexpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
  order by ec.id 
 

  
 

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCConsignatarios]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCConsignatarios]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  SELECT ec.*, ent.nombre as Consignatario, ent.cif 'CIF', ent.CodigoEORI  
  FROM spopexpedienteconsignatariomerc ec  inner join spopexpediente ex on ex.id = ec.idExpediente  inner join spcoentidades ent on ent.id = ec.idconsignatario  
  where idexpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
          

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCDestinos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCDestinos]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT ed.*, p.nombre 'Poblacion', pa.nombre 'Pais' FROM spopexpedientedestinos ed inner join spopexpediente ex on 
ex.id = ed.idexpediente 
inner join sploPoblacion p on ed.idPuertoDestino=p.id 
left join sploPais pa on p.idPais=pa.id 
 where idExpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCInfoClasificada]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCInfoClasificada]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
 SELECT ic.*  FROM spopexpedienteinfoclasificada ic inner join spopexpediente ex on ex.id = ic.idExpediente 
  WHERE ic.idExpediente  = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)


       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCItemsCheckList]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCItemsCheckList]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
  
 SELECT distinct echk.Id, echk.IdExpediente, echk.IdItem, echk.Fecha, it.descripcion, pchkp.IdPuerto, pchkp.DiasAviso, pchkp.FechaAplicacion, ex.IdBuque, 
 (select top 1 idUsuario from spopexpedienteresponsables where idExpediente = ex.Id) as Responsable  , echk.ReferenciaCliente, echk.GrupoFacturacion 
 FROM spopexpediente AS ex inner JOIN  spopexpedientechecklist AS echk ON echk.IdExpediente = ex.Id INNER JOIN  spopitemchecklist AS it ON echk.IdItem = it.id 
 INNER JOIN  spopchecklistitems AS chki ON chki.IdItem = it.id INNER JOIN  spopchecklistperiodicidades AS chkp ON chkp.Id = chki.IdCheckListPeriodicidad 
 INNER JOIN  spopperiodicidadchecklist AS pchk ON pchk.id = chkp.IdPeriodicidad 
 INNER JOIN  spopperiodicidadchecklistplazos AS pchkp ON pchkp.IdPeriodicidadCL = pchk.id AND ex.IdPuerto = pchkp.IdPuerto  
 WHERE echk.Fecha Is NULL  and echk.idExpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteConceptos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteConceptos]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 SELECT coex.*,co.nombre, entCli.nombre as Cliente,'ES' as Idioma, entProv.nombre as Proveedor,
 dbo.ConceptoConfacturas(coex.id,'EXT') as TieneFacturas ,dbo.EstadoFacturaPrefacturacion(coex.id,'EXT') as EstadoFactura, co.ConceptosEspeciales
 FROM spexconceptoexpediente coex 
 inner join spcoconcepto co on coex.idconcepto=co.id 
 inner join spexexpediente ex on ex.id = coex.idExpediente 
 left join spcoentidades entCli on entCli.id = coex.idCliente 
 left join spcoentidades entProv on entProv.id = coex.idProveedor 
 where coex.idExpediente = @IdExpediente   and  ex.idOficina in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )

      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteConocimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteConocimientos]
	@Viaje varchar(5000),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 SELECT c.* ,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='AA')  'Agente Aduanas' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='SH')  'Codigo Shipper' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='SH')  'Shipper' 
,(select Top 1 convert(varchar,conEnt.IDEntidad)  from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='CO')  'Codigo Consignee' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='CO')  'Consignee' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N1')  'Codigo Notify1' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N1')  'Notify1' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N2')  'Codigo Notify2' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N2')  'Notify2' 
,(select Top 1 pob.nombre from splopoblacion pob where pob.id=c.PoblTransbordo )  'NomPoblTransbordo', b.idOferta  
 FROM spopconocimiento c inner join spopbooking b on b.id = c.idBooking  
 where b.idExpedienteViaje in (@Viaje) 
 and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
UNION
SELECT c.* ,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='AA')  'Agente Aduanas' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='SH')  'Codigo Shipper' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='SH')  'Shipper' 
,(select Top 1 convert(varchar,conEnt.IDEntidad)  from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='CO')  'Codigo Consignee' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='CO')  'Consignee' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N1')  'Codigo Notify1' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N1')  'Notify1' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N2')  'Codigo Notify2' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N2')  'Notify2' 
,(select Top 1 pob.nombre from splopoblacion pob where pob.id=c.PoblTransbordo )  'NomPoblTransbordo', b.idOferta  
 FROM spopconocimiento c inner join spopbooking b on b.id = c.idBooking  
 where b.idExpedienteViajeSecundario in (@Viaje) 
 and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteConocimientosWTrafico]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteConocimientosWTrafico]
	@Viaje varchar(5000),
	@Trafico varchar(50),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 SELECT c.* ,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='AA')  'Agente Aduanas' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='SH')  'Codigo Shipper' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='SH')  'Shipper' 
,(select Top 1 convert(varchar,conEnt.IDEntidad)  from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='CO')  'Codigo Consignee' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='CO')  'Consignee' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N1')  'Codigo Notify1' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N1')  'Notify1' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N2')  'Codigo Notify2' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N2')  'Notify2' 
,(select Top 1 pob.nombre from splopoblacion pob where pob.id=c.PoblTransbordo )  'NomPoblTransbordo', b.idOferta  
 FROM spopconocimiento c inner join spopbooking b on b.id = c.idBooking  
 where b.idExpedienteViaje in (@Viaje)  and  c.Trafico = @Trafico
 and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
UNION
SELECT c.* ,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='AA')  'Agente Aduanas' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='SH')  'Codigo Shipper' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='SH')  'Shipper' 
,(select Top 1 convert(varchar,conEnt.IDEntidad)  from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='CO')  'Codigo Consignee' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='CO')  'Consignee' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N1')  'Codigo Notify1' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N1')  'Notify1' 
,(select Top 1 convert(varchar,conEnt.IDEntidad) from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N2')  'Codigo Notify2' 
,(select Top 1 conEnt.DatosEntidad from spopconocimientoentidades conEnt where conEnt.idConocimiento=c.id and conEnt.TipoEntidad='N2')  'Notify2' 
,(select Top 1 pob.nombre from splopoblacion pob where pob.id=c.PoblTransbordo )  'NomPoblTransbordo', b.idOferta  
 FROM spopconocimiento c inner join spopbooking b on b.id = c.idBooking  
 where b.idExpedienteViajeSecundario in (@Viaje)  and c.Trafico = @Trafico
 and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteContenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteContenedores]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

select exc.*,cc.idVariable,'EXT' as TipoReferenciaContendor, exc.id as IdReferenciaContendor 
from spexexpedientecontenedor exc  inner join spexexpediente ex on ex.id = exc.idExpediente  
left join spbmcaracteristicascontenedor cc on exc.IdTipoTamanyoContenedor = cc.id  
where exc.idexpediente = @IdExpediente and ex.idOficina in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCOrigenDatos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCOrigenDatos]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   SELECT od.*, cod.campo as OrigenDatos, cod.Tipo, cod.Grupo, cod.Favorito,cod.ValoresAplicacion 
    FROM spopexpedienteorigendatos od inner join spopexpediente ex on ex.id = od.idexpediente  
    inner join spsiorigendatos cod on cod.id = od.idOrigenDatos  
    WHERE (cod.grupo = 'Expediente de consignación' or cod.grupo = 'Sistema')   
    and od.idExpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) order by cod.Favorito desc,cod.Grupo, cod.campo 

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCProvisiones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCProvisiones]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT pf.*  FROM spopexpedienteprovisionfondos pf INNER JOIN spopexpediente ex on ex.id = pf.idExpediente 
 WHERE pf.idexpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

 

  
 

       
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCResponsables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCResponsables]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT r.*  
 FROM spopexpedienteresponsables r  inner join spopexpediente ex on ex.id = r.idexpediente  
 where r.idexpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
        

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCSeguimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCSeguimientos]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   SELECT es.* FROM spopexpedienteseguimiento es inner join spopexpediente ex on ex.id = es.idexpediente 
    WHERE es.idExpediente= @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) Order By es.Fecha asc
  
          

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCVariables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCVariables]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   SELECT ev.*, v.nombre as Variable, v.Tipo, v.Grupo, 
   ( Select top 1 diva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on va.TipoVA = 'grupovariables' and cva.idVA= Va.id  
                     inner join spsidescripcionidiomasvaloresaplicacion diva on cva.id = diva.idcva where cva.clave = v.grupo ) as descripcion  , v.snCompuesta
   FROM spopexpedientevariables ev  
   inner join spopexpediente ex on ex.id = ev.idexpediente  inner join spcovariable v on v.id = ev.idvariable    
   WHERE ev.idExpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) order by v.nombre               

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteCViajes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteCViajes]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT v.*, e.nombre as Armador  
 FROM spopexpedienteviajes v  inner join spopexpediente ex on ex.id = v.idexpediente  inner join spcoentidades e on v.idarmador = e.id 
  where v.idexpediente = @IdExpediente and ex.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
        

      
END


GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteDocumentos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteDocumentos]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


SELECT 'Albarán' as 'Tipo Documento', a.Id, a.Tipo, a.Usuario, a.FechaDocumento, a.observaciones, a.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM spexalbaran a INNER JOIN spexpartidaalbaran pa ON a.Id = pa.IdAlbaran 
WHERE (pa.IdPadre IN (SELECT e.Id FROM spexembarque e INNER JOIN spexpartida p ON  p.Id = e.IdPartida AND p.IdExpediente = @IdExpediente) and pa.tablapadre = 'E') OR (pa.IdPadre IN (SELECT p.Id FROM spexpartida p WHERE p.IdExpediente = @IdExpediente) and pa.tablapadre = 'P') 

UNION 

SELECT 'Air WayBill', a.Id, a.Tipo, a.Usuario, a.FechaDocumento, a.InformacionManipulacion, a.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM spexawbl a 
WHERE a.Id in (select idAWBL from spexpartidaawbl where idPartida in (select par.id from spexpartida par where par.idExpediente = @IdExpediente))   

UNION 

SELECT 'MBL', a.Id, a.Tipo, a.Usuario, a.FechaDocumento, a.numbl, a.TimeStamp as 'Ult.Modif.',
(CASE a.Tipo WHEN 'I' THEN (select top 1 hm.Estado from spmemensajeria me  inner join spmehistoricomensajeria hm on me.id = hm.idfichero  where me.idreferencia = a.id and me.tipoReferencia ='MBL' and me.tipoMensaje = 'IE' order by hm.Id desc ) ELSE Null END) as EstadoMensaje,
a.idRemitente as idShipper,a.idDestinatario as idConsignee,a.idNotificacion1 as idNotify,a.idNotificacion2 as idNotify2
FROM spexmbl a INNER JOIN spexpartidambl pa ON a.Id = pa.IdmBL 
WHERE (pa.IdPadre IN (SELECT e.Id FROM spexembarque e INNER JOIN spexpartida p ON  p.Id = e.IdPartida AND p.IdExpediente = @IdExpediente) and pa.tablapadre = 'E') OR (pa.IdPadre IN (SELECT p.Id FROM spexpartida p WHERE p.IdExpediente = @IdExpediente) and pa.tablapadre = 'P') 

UNION 

SELECT 'CMR', c.Id, '' AS Tipo, c.Usuario, c.FechaDocumento, c.observtransportista, c.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM spexcmr c INNER JOIN spexcmrpartida pc ON c.Id = pc.IdCMR 
WHERE (pc.IdPadre IN (SELECT e.Id FROM spexembarque e INNER JOIN spexpartida p ON  p.Id = e.IdPartida AND p.IdExpediente = @IdExpediente) and pc.tablapadre = 'E') OR (pc.IdPadre IN (SELECT p.Id FROM spexpartida p WHERE p.IdExpediente = @IdExpediente) and pc.tablapadre = 'P') 

UNION 

SELECT 'Orden Transporte', ot.Id, ot.Tipo, ot.Usuario, ot.FechaDocumento, ot.observaciones, ot.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM  spexordentransporte ot 
WHERE ot.IdExpedienteTransito = @IdExpediente

UNION 

SELECT 'Aviso Llegada', a.Id, '' AS Tipo, a.Usuario, a.FechaDocumento, a.observaciones, a.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM spexavisollegada a INNER JOIN spexpartidaavisollegada pa ON a.Id = pa.idavisollegada  
Where ((pa.idpadre in (select e.id from spexembarque e inner join spexpartida p on p.id = e.idpartida and p.idExpediente = @IdExpediente) and pa.tablapadre = 'E')  OR (pa.IdPadre IN (SELECT p.Id FROM spexpartida p WHERE p.IdExpediente = @IdExpediente) and pa.tablapadre = 'P'))  and a.Tipo = 'AV' 

UNION 

SELECT 'Documento Despacho', a.Id, '' AS Tipo, a.Usuario, a.FechaDocumento, a.observaciones, a.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM spexavisollegada a INNER JOIN spexpartidaavisollegada pa ON a.Id = pa.idavisollegada  
Where ((pa.idpadre in (select e.id from spexembarque e inner join spexpartida p on p.id = e.idpartida and p.idExpediente = @IdExpediente) and pa.tablapadre = 'E')  OR (pa.IdPadre IN (SELECT p.Id FROM spexpartida p WHERE p.IdExpediente = @IdExpediente) and pa.tablapadre = 'P'))  and a.Tipo = 'DD' 

UNION 

SELECT 'MDG', m.Id, '' AS Tipo, m.Usuario, m.FechaDocumento, m.informacionadicional as observaciones, m.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM spexmdg m, spexpartidammpp pm, spexpartida p, spexmdgpartidammpp t4 
WHERE t4.idpartidammpp = pm.id and t4.idmdg = m.id and pm.idpartida = p.id and p.idexpediente=@IdExpediente 

UNION 

SELECT 'Carta Porte', cp.Id, '' AS Tipo, cp.Usuario, cp.FechaDocumento, cp.observaciones as observaciones, cp.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM spexcartaporte cp inner join spexpartida p on cp.tablapadre = 'P' and cp.idPadre = p.id and p.idexpediente = @IdExpediente 

UNION 

SELECT 'Carta Porte', cp.Id, '' AS Tipo, cp.Usuario, cp.FechaDocumento, cp.observaciones as observaciones, cp.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM spexcartaporte cp inner join spexembarque emb on cp.tablapadre = 'E' and cp.idPadre = emb.id inner join spexpartida par on par.id = emb.idpartida and par.idexpediente = @IdExpediente

UNION 

SELECT 'Carta Porte ADR', cpa.Id, '' AS Tipo, cpa.Usuario, cpa.FechaDocumento, cpa.observaciones as observaciones, cpa.TimeStamp as 'Ult.Modif.', Null as EstadoMensaje, Null as idShipper,Null as idConsignee,Null as idNotify,Null as idNotify2
FROM spexcartaporteadr cpa where cpa.idPadre = @IdExpediente
     
END

GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteEmbarques]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteEmbarques]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 select emb.*, vi.descripcion as DescViaje, expc.Precintos  
 from spexembarque emb inner join spexpartida p on emb.idPartida = p.id inner join spexexpediente ex on ex.id = p.idExpediente  
 left join spexviaje vi on emb.idviaje = vi.id  left join spexexpedientecontenedor expc on emb.idexpedientecontenedor = expc.id  
 where p.idExpediente=@IdExpediente
 
  and  ex.idOficina in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )

      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteInfoClasificada]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteInfoClasificada]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT ic.*  FROM spexexpedienteinfoclasificada ic inner join spexexpediente ex on ex.id = ic.idExpediente  
 WHERE ic.idExpediente  =@IdExpediente   

   and ex.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
 


      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteOrigenDatos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteOrigenDatos]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT od.*, cod.campo as OrigenDatos, cod.Tipo, cod.Grupo, cod.Favorito, cod.ValoresAplicacion  
 FROM spexexpedienteorigendatos od inner join spexexpediente ex on ex.id = od.idExpediente  inner join spsiorigendatos cod on cod.id = od.idOrigenDatos  
 WHERE (cod.grupo = 'Expediente de tránsito' or cod.grupo='Sistema') and od.idExpediente = @IdExpediente

   and ex.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
  order by cod.Favorito desc,cod.Grupo, cod.campo 


      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedientePartidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedientePartidas]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 select (select sum(e.bultos) 
 from spexembarque e, spexpartida p 
 where e.idPartida = p.id and e.idpartida = pa.id) as BultosAsignados,
  (select sum(e.PesoNeto) from spexembarque e, spexpartida p where e.idPartida = p.id and e.idpartida = pa.id) as PesoNetoAsignado, 
  (select sum(e.MetrosLineales) from spexembarque e, spexpartida p where e.idPartida = p.id and e.idpartida = pa.id) as MetrosLinealesAsignado, 
  (select sum(e.PesoBruto) from spexembarque e, spexpartida p where e.idPartida = p.id and e.idpartida = pa.id) as PesoBrutoAsignado, 
  (select sum(e.volumen) from spexembarque e, spexpartida p where e.idPartida = p.id and e.idpartida = pa.id) as VolumenAsignado, (select sum(parmmpp.bultos) from spexpartidammpp parmmpp, spexpartida p where parmmpp.idPartida = p.id and parmmpp.idpartida = pa.id) as BultosAsignadosMMPP, (select sum(parmmpp.metroslineales) from spexpartidammpp parmmpp, spexpartida p where parmmpp.idPartida = p.id and parmmpp.idpartida = pa.id) as MetrosLinealesAsignadoMMPP, (select sum(parmmpp.PesoNeto) from spexpartidammpp parmmpp, spexpartida p where parmmpp.idPartida = p.id and parmmpp.idpartida = pa.id) as PesoNetoAsignadoMMPP, (select sum(parmmpp.PesoBruto) from spexpartidammpp parmmpp, spexpartida p where parmmpp.idPartida = p.id and parmmpp.idpartida = pa.id) as PesoBrutoAsignadoMMPP, (select sum(parmmpp.volumen)  from spexpartidammpp parmmpp, spexpartida p where parmmpp.idPartida = p.id and parmmpp.idpartida = pa.id) as VolumenAsignadoMMPP,  pa.*, ex.Idoficina, ex.IdCliente, pa.id as IdPartida,ar.codigo as CodigoArancel,ar.nombreTecnico as DescArancel, po.nombre as PoblOrigen, pd.nombre as PoblDestino,ent.Nombre as NomRemDest, entTra.nombre as NombreTransportista, entTra1.nombre as NombreTransportista1, entAg.nombre as AgenteAduanas , entRem.nombre as NombreRemitente, entDes.nombre as NombreDestinatario,exr.TipoGrupaje as TipoGrupajePartidaRelacionada,entNot.nombre as NombreNotify,entNot1.nombre as NombreNotify1,pao.nombre as NomPaisOrigen,pad.nombre as NomPaisDestino,
  doc.TipoDocAsociado as TipoDocAsociado, doc.SituacionAduanera as SituacionAduanera 
  from spexpartida pa inner join  spexexpediente ex on ex.id = pa.idexpediente  
  left join spexpartida pr on pr.id = pa.idPartidaRelacionada
  left join spexexpediente exr on exr.id = pr.idExpediente
  left join spbmarancel ar on ar.id = pa.idArancel  
  left join splopoblacion po on po.id = pa.idOrigen  
  left join splopoblacion pd on pd.id = pa.idDestino  
  left join splopais pao on pao.id = po.IdPais
  left join splopais pad on pad.id = pd.IdPais
  left join spcoentidades ent on ent.id = pa.idRemitenteDestinatario  
  left join spcoentidades entTra on entTra.id = pa.Transportista  
  left join spcoentidades entTra1 on entTra1.id = pa.Transportista1  
  left join spcoentidades entAg on entAg.id = pa.IdAgenteAduanas 
  left join spcoentidades entRem on entRem.id = pa.idRemitente
  left join spcoentidades entDes on entDes.id = pa.idDestinatario
  left join spcoentidades entNot on entNot.id = pa.idNotify
  left join spcoentidades entNot1 on entNot1.id = pa.idNotify1
  left join spaddocsitaduanera doc on doc.id = pa.iddocumentoasociado 
  where pa.idExpediente=@IdExpediente and pa.IdExpediente=ex.Id 
  
   and ex.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )


      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedientePartidasDesglose]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedientePartidasDesglose]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 select pd.*  
 from spexpartidadesglose pd inner join spexpartida pa on pa.id = pd.idPartida  
 inner join spexexpediente ex on ex.id = pa.idExpediente  
 where pa.idExpediente=@IdExpediente and ex.idOficina   in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )

      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedientePartidasMMPP]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedientePartidasMMPP]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

select spexpartidammpp.*, 
(case spexpartidammpp.tipoMMPP when 'M' then (select numonu from spmmppmaritimas where id = spexpartidammpp.idmmpp) when 'T' 
then (select numonu from spmmppterrestres where id = spexpartidammpp.idmmpp)  when 'A' then (select numonu from spmmppaereas where id = spexpartidammpp.idmmpp)end) as numOnu  from spexpartidammpp, spexpartida, spexexpediente  

where spexpartidammpp.idPartida = spexpartida.id and spexexpediente.id = spexpartida.idExpediente
 And spexpartida.idExpediente = @IdExpediente and spexexpediente.idOficina  in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )

      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteSeguimientos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteSeguimientos]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT seg.* FROM spexseguimiento seg inner join spexexpediente ex on ex.id = seg.idExpediente 
  WHERE seg.idExpediente= @IdExpediente  
   and ex.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )


Order By Fecha asc
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetExpedienteVariables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetExpedienteVariables]
	@IdExpediente numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT ev.*, v.nombre as Variable, v.Tipo, v.Grupo,
    ( Select top 1 diva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on va.TipoVA = 'grupovariables' and cva.idVA= Va.id  
     inner join spsidescripcionidiomasvaloresaplicacion diva on cva.id = diva.idcva where cva.clave = v.grupo ) as descripcion , v.snCompuesta           
  FROM spexexpedientevariables ev inner join spcovariable v on v.id = ev.idvariable  inner join spexexpediente ex on ex.id = ev.idExpediente  
   WHERE idExpediente = @IdExpediente 
 
   and ex.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
order by v.nombre 


      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitida]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitida]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


 SELECT FE.*, EN.* ,FP.*,D.direccion, D.provincia, D.Cp, pob.nombre as poblacion, pa.nombre as pais, FP.descripcion as DescFormaPago,  
 EN.nombre as DescCliente,tipoDoc.id as TipoDocumento,pa.id as idPais, pa.CE,  DF.id as IdDirFiscal, DF.Pais as PaisDirFiscal, 
 (Select feoriginal.NumeroFacturaFormateado 
 from spfafacturaEmitida feoriginal where feoriginal.id = fe.idFacturaOriginal) as NumeroFacturaOriginal,  FE.IdFormaPago,
  im.CodigoTerritorio,ENORF.TipoFactura as TipoFacturaOficinaEntidad, D.Email as EmailDireccion,EN.SnNoContabilizar
 FROM spfaFacturaEmitida FE 
 left join spfaformapago FP on FP.Id = FE.IdFormaPago 
 left join spfatipodocumento tipodoc on tipodoc.id = fp.IdTipoDocumento 
 left join spcoentidades EN on FE.IdEntidadCliente = EN.Id 
 left join spcoentidadesoficinasreportsfacturacion ENORF on ENORF.IdEntidad = EN.Id and ENORF.idOficina = FE.idOficina    and isnull(enorf.snProforma,'false') = isnull( fe.snproforma,'false') 
 left join spcodireccionesentidades D on FE.idDireccionCliente = D.id left join splopoblacion pob on pob.id = D.poblacion 
 left join spcodireccionesentidades DF on DF.IdEntidad = EN.id and DF.PrincipalFiscal = 1
 left join splopais pa on pa.id = D.pais left join spfaimpuestos im on im.id = fe.IdImpuesto   
    WHERE FE.Id = @IdFactura
      and FE.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitidaCambios]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitidaCambios]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


  select cfe.* 
  from spfacambiofacturaemitida cfe inner join spfafacturaemitida fe on fe.id = cfe.idFacturaEmitida 
  where        FE.Id = @IdFactura
      and FE.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitidaDatosEmpresa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitidaDatosEmpresa]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


 SELECT distinct OFi.Id as IdOficina,EM.*,SF.*, PC.*,ofi.CodigoTerritorio, FE.Id as IdFactura, EPC.CuentaContableCompra, EPC.CuentaContableVenta 
  FROM spfaFacturaEmitida FE 
   inner join spsioficina OFi on OFi.id = FE.idOficina  
   inner join spsiempresa EM on OFi.empresa = EM.id  
   inner join spfaSerieFactura SF on SF.Id=FE.IdSerieFactura  
   left join spsiplancontable PC  on PC.id = EM.idPlanContable 
   left join spcoentidadplanescontables EPC  on EPC.idPlanContable = EM.idPlanContable and EPC.idEntidad = FE.IdEntidadCliente
       WHERE FE.Id = @IdFactura
      and FE.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitidaFicheros]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitidaFicheros]
	@IdPadre numeric(18,0)	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT * FROM spfafacturaemitidaadjuntos WHERE idPadre  = @IdPadre
 
 

 
 
      
   
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitidaInfoClasificadaCliente]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitidaInfoClasificadaCliente]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
      
	SELECT FE.Id as IdFactura, EN.Id as IdEntidad, IC.* 
	FROM spfaFacturaEmitida FE 
		inner join spcoentidades EN on FE.IdEntidadCliente = EN.Id
        inner join spcoentidadesinfoclasificada IC ON IC.IdEntidad = EN.Id
    WHERE FE.id  = @IdFactura
      and FE.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitidaInfoExtraExp]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitidaInfoExtraExp]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

Select distinct ex.idbuque,(select Nombre from spbmbuque where id = ex.idbuque) as 'Buque',
(select Descripcion from spsioficina where id = exc.idOficina) as 'DescOficina', ex.FechaLlegada as 'fechallegada',max(exa.fechasalida) as 'fechasalida', 
(Select Descripcion from spbmpuerto where id = ex.idPuerto) as 'Puerto',(Select idPoblacion from spbmpuerto where id = ex.idPuerto) as 'idPoblacionPuerto' ,ex.id as 'idExpediente', 
ex.codigo ,ex.idOficina, exc.GrupoFacturacion, exv.Numero,exv.Direccion,ex.idServicioLlegada,servLLeg.Descripcion as 'DescServLlegada',ex.idServicioSalida,servSal.Descripcion as 'DescServSalida',
'' as Trafico,'' as DescripcionTrafico,ex.TipoExpediente,exv.id as IdViaje, Null as Via, Null as FechaLlegadaViaje, Null as FechaSalidaViaje, Null as FechaEjecucion 
from spopexpediente ex 
left join spopexpedienteatraques exa on exa.idExpediente = ex.id 
left join spopexpedienteconceptos exc on exc.idExpediente = ex.id 
left join spopexpedienteviajes exv on exv.id = (select Top 1 ev.Id from spopexpedienteviajes ev where ev.idExpediente = ex.Id)
left join spopservicios servLleg on ex.idServicioLLegada = servLLeg.id 
left join spopservicios servSal on ex.idServicioSalida = servSal.id  
where exc.id IN (select IdReferencia from spfalineafacturaemitida where tipoReferencia = 'EXC' and idFacturaEmitida = @IdFactura) 
group by ex.FechaLlegada, ex.idbuque,ex.idoficina,ex.IdPuerto,ex.id,ex.codigo,exc.grupofacturacion,exv.Numero,exv.direccion,  ex.idServicioLlegada, servLleg.Descripcion, ex.idServicioSalida, servSal.Descripcion,exc.IdOficina,ex.TipoExpediente,exv.id

UNION 

Select distinct '' as idbuque,(select dva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id 
inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id where va.tipova = 'Via' and dva.idioma = 'es' and cva.clave = ex.via) as 'Buque' , 
(select Descripcion from spsioficina where id = exc.idOficina) as 'DescOficina',ex.fechainicio as 'fechallegada','' as 'fechasalida','' as 'Puerto',
(select dva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id where va.tipova = 'TipoTrafico' and dva.idioma = 'es' and cva.clave = ex.tipotrafico) as 'idPoblacionPuerto' ,
ex.id as 'idExpediente', ex.Expediente as 'codigo' , ex.IdOficina, exc.GrupoFacturacion, '' as Numero, '' as Direccion, Null,Null,Null,Null,Null,Null,Null,Null as IdViaje, 
(select dva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id 
inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id 
where va.tipova = 'Via' and dva.idioma = 'es' and cva.clave = ex.via) as 'Via', exv.FechaLlegada, exv.FechaSalida, ex.fechainicio as 'FechaEjecucion'
from spexexpediente ex 
inner join spexconceptoexpediente exc on exc.idExpediente = ex.id  
left join spexviajemaritimo exv on exv.idViaje = ex.idViaje
where exc.id IN (select IdReferencia from spfalineafacturaemitida where tipoReferencia = 'EXT' and idFacturaEmitida = @IdFactura) 

UNION  

Select distinct ex.idbuque,(select Nombre from spbmbuque where id = ex.idbuque) as 'Buque',  (select Descripcion from spsioficina where id = cto.idOficina) as 'DescOficina',
min(exa.fechallegada) as 'fechaLlegada',max(exa.fechasalida) as 'fechaSalida',(Select Descripcion from spbmpuerto where id = ex.idPuerto) as 'Puerto',
(Select idPoblacion from spbmpuerto where id = ex.idPuerto) as 'idPoblacionPuerto', ex.id as 'idExpediente', ex.codigo ,ex.idoficina, cto.GrupoFacturacion,exv.Numero,exv.Direccion, 
ex.idServicioLlegada, servLLeg.Descripcion as 'DescServLlegada', ex.idServicioSalida,	servSal.Descripcion as 'DescServSalida',boo.Trafico,
(select dva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id where va.tipova = 'TIPOTRAFICO' and dva.idioma = 'es' and cva.clave = boo.Trafico) as 'DescripcionTrafico' ,ex.TipoExpediente ,exv.Id as IdViaje,Null,Null,Null,Null 
from spopconocimientoconceptos cto 
inner join spopconocimiento cbo on cbo.Id = cto.IdConocimiento 
inner join spopbooking boo on boo.Id = cbo.idBooking 
inner join spopexpedienteviajes exv on exv.id = boo.IdExpedienteViaje and boo.IdExpedienteViajeSecundario is null 
inner join spopexpedienteatraques exa on exa.idExpediente = exv.Idexpediente 
inner join spopexpediente ex on ex.Id = exv.Idexpediente 
left join spopservicios servLleg on ex.idServicioLLegada = servLLeg.id 
left join spopservicios servSal on ex.idServicioSalida = servSal.id 
where cto.id IN(select IdReferencia from spfalineafacturaemitida where tipoReferencia = 'BL' and idFacturaEmitida = @IdFactura) 
group by ex.idbuque,ex.idoficina,ex.idpuerto,ex.id,ex.codigo,cto.grupofacturacion,exv.Numero,exv.Direccion, 
idServicioLlegada,idServicioSalida,servLLeg.Descripcion,servSal.Descripcion,boo.Trafico,cto.idOficina,ex.TipoExpediente,exv.Id

UNION  

Select distinct ex.idbuque,(select Nombre from spbmbuque where id = ex.idbuque) as 'Buque',  (select Descripcion from spsioficina where id = cto.idOficina) as 'DescOficina', min(exa.fechallegada) as 'fechaLlegada',max(exa.fechasalida) as 'fechaSalida',
(Select Descripcion from spbmpuerto where id = ex.idPuerto) as 'Puerto',(Select idPoblacion from spbmpuerto where id = ex.idPuerto) as 'idPoblacionPuerto', ex.id as 'idExpediente', ex.codigo ,ex.IdOficina, cto.GrupoFacturacion,exv.Numero,exv.Direccion, 
ex.idServicioLlegada,	servLLeg.Descripcion as 'DescServLlegada', ex.idServicioSalida,	servSal.Descripcion as 'DescServSalida',boo.Trafico as 'Trafico', (select dva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id where va.tipova = 'TIPOTRAFICO' and dva.idioma = 'es' and cva.clave = boo.Trafico) as 'DescripcionTrafico',
ex.TipoExpediente,exv.Id as IdViaje,Null,Null,Null,Null 
from spopconocimientoconceptos cto 
inner join spopconocimiento cbo on cbo.Id = cto.IdConocimiento 
inner join spopbooking boo on boo.Id = cbo.idBooking 
inner join spopexpedienteviajes exv on exv.id = boo.IdExpedienteViajeSecundario 
inner join spopexpedienteatraques exa on exa.idExpediente = exv.Idexpediente 
inner join spopexpediente ex on ex.Id = exv.Idexpediente 
left join spopservicios servLleg on ex.idServicioLLegada = servLLeg.id 
left join spopservicios servSal on ex.idServicioSalida = servSal.id 
where cto.id IN(select IdReferencia from spfalineafacturaemitida where tipoReferencia = 'BL' and idFacturaEmitida = @IdFactura) 
group by ex.idbuque,ex.idoficina,ex.idpuerto,ex.id,ex.codigo,cto.grupofacturacion,exv.Numero,exv.Direccion, 
idServicioLlegada,idServicioSalida,servLLeg.Descripcion,servSal.Descripcion,boo.Trafico,cto.idOficina,ex.TipoExpediente,exv.Id

UNION

 Select distinct ex.idbuque,(select Nombre from spbmbuque where id = ex.idbuque) as 'Buque',(select Descripcion from spsioficina where id = exc.idOficina) as 'DescOficina',  ex.FechaLlegada as 'fechallegada',max(exa.fechasalida) as 'fechasalida', (Select Descripcion from spbmpuerto where id = ex.idPuerto) as 'Puerto',(Select idPoblacion from spbmpuerto where id = ex.idPuerto) as 'idPoblacionPuerto' ,ex.id as 'idExpediente', ex.codigo, ex.IdOficina,exc.GrupoFacturacion, exv.Numero,exv.Direccion, 
ex.idServicioLlegada,servLLeg.Descripcion as 'DescServLlegada',ex.idServicioSalida,servSal.Descripcion as 'DescServSalida','' as Trafico,'' as DescripcionTrafico,ex.TipoExpediente ,exv.Id as IdViaje,Null,Null,Null,Null 
from spopexpediente ex left join spopexpedienteatraques exa on exa.idExpediente = ex.id 
left join spopexpedienteconceptos exc on exc.idExpediente = ex.id 
left join spopexpedienteviajes exv on exv.id = (select Top 1 ev.Id from spopexpedienteviajes ev where ev.idExpediente = ex.Id)
left join spopservicios servLleg on ex.idServicioLLegada = servLLeg.id 
left join spopservicios servSal on ex.idServicioSalida = servSal.id  where ex.id IN(Select distinct exps.idExpedientePlataforma from spplexpedienteservicios exps 
inner join spepexpedienteconceptos expp on expp.idexpediente  = exps.id  where expp.id in (select IdReferencia 
from spfalineafacturaemitida where tipoReferencia = 'PES' and idFacturaEmitida = @IdFactura))
group by ex.FechaLlegada,ex.idbuque,ex.idoficina,ex.IdPuerto,ex.id,ex.codigo,exc.grupofacturacion,exv.Numero,exv.direccion, 
ex.idServicioLlegada, servLleg.Descripcion, ex.idServicioSalida, servSal.Descripcion,exc.IdOficina,ex.TipoExpediente,exv.Id

 UNION

 Select distinct ex.idbuque,(select Nombre from spbmbuque where id = ex.idbuque) as 'Buque',(select Descripcion from spsioficina where id = exc.idOficina) as 'DescOficina',  ex.FechaLlegada as 'fechallegada',max(exa.fechasalida) as 'fechasalida', (Select Descripcion from spbmpuerto where id = ex.idPuerto) as 'Puerto',(Select idPoblacion from spbmpuerto where id = ex.idPuerto) as 'idPoblacionPuerto' ,ex.id as 'idExpediente', ex.codigo, ex.IdOficina,exc.GrupoFacturacion, exv.Numero,exv.Direccion, 
ex.idServicioLlegada,servLLeg.Descripcion as 'DescServLlegada',ex.idServicioSalida,servSal.Descripcion as 'DescServSalida','' as Trafico,'' as DescripcionTrafico,ex.TipoExpediente,exv.Id as IdViaje ,Null,Null,Null,Null 
from spopexpediente ex left join spopexpedienteatraques exa on exa.idExpediente = ex.id 
left join spopexpedienteconceptos exc on exc.idExpediente = ex.id 
left join spopexpedienteviajes exv on exv.id = (select Top 1 ev.Id from spopexpedienteviajes ev where ev.idExpediente = ex.Id)
left join spopservicios servLleg on ex.idServicioLLegada = servLLeg.id
 left join spopservicios servSal on ex.idServicioSalida = servSal.id  where ex.id IN(Select distinct exps.idExpedientePlataforma from spplexpedienteservicios exps 
 inner join spepexpedienteconceptos expp on expp.idexpediente  = exps.id  where expp.id in (select IdReferencia 
 from spfalineafacturaemitida where tipoReferencia = 'PET' and idFacturaEmitida = @IdFactura))
 group by ex.FechaLlegada,ex.idbuque,ex.idoficina,ex.IdPuerto,ex.id,ex.codigo,exc.grupofacturacion,exv.Numero,exv.direccion, 
 ex.idServicioLlegada, servLleg.Descripcion, ex.idServicioSalida, servSal.Descripcion,exc.IdOficina,ex.TipoExpediente ,exv.Id

 UNION

 Select distinct ex.idbuque,(select Nombre from spbmbuque where id = ex.idbuque) as 'Buque',(select Descripcion from spsioficina where id = exc.idOficina) as 'DescOficina',  ex.FechaLlegada as 'fechallegada',max(exa.fechasalida) as 'fechasalida', (Select Descripcion from spbmpuerto where id = ex.idPuerto) as 'Puerto',(Select idPoblacion from spbmpuerto where id = ex.idPuerto) as 'idPoblacionPuerto' ,ex.id as 'idExpediente', ex.codigo, ex.IdOficina,exc.GrupoFacturacion, exv.Numero,exv.Direccion, 
ex.idServicioLlegada,servLLeg.Descripcion as 'DescServLlegada',ex.idServicioSalida,servSal.Descripcion as 'DescServSalida','' as Trafico,'' as DescripcionTrafico,ex.TipoExpediente ,exv.Id as IdViaje,Null,Null,Null,Null 
from spopexpediente ex left join spopexpedienteatraques exa on exa.idExpediente = ex.id 
left join spopexpedienteconceptos exc on exc.idExpediente = ex.id 
left join spopexpedienteviajes exv on exv.id = (select Top 1 ev.Id from spopexpedienteviajes ev where ev.idExpediente = ex.Id)
left join spopservicios servLleg on ex.idServicioLLegada = servLLeg.id 
left join spopservicios servSal on ex.idServicioSalida = servSal.id  where ex.id IN(Select distinct exps.idExpedientePlataforma from spplexpedienteservicios exps 
 inner join spepexpedienteconceptos expp on expp.idexpediente  = exps.id  where expp.id in (select IdReferencia 
 from spfalineafacturaemitida where tipoReferencia = 'PEP' and idFacturaEmitida = @IdFactura))
 group by ex.FechaLlegada,ex.idbuque,ex.idoficina,ex.IdPuerto,ex.id,ex.codigo,exc.grupofacturacion,exv.Numero,exv.direccion, 
 ex.idServicioLlegada, servLleg.Descripcion, ex.idServicioSalida, servSal.Descripcion,exc.IdOficina,ex.TipoExpediente ,exv.Id
 

      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitidaLineas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitidaLineas]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


  SELECT LFE.*,LFE.Unidades * LFE.IMporteUnitario as TotalLineaDivisaOriginal,co.CodigoConcepto, Co.Nombre, CO.Coste, CO.SnSuplidoArmador as EsSuplido,co.TipoConceptoContable,(select NumVoucher from spopexpedienteconceptos where id = LFE.idReferencia) as 'NumVoucher' 
 ,(select top 1 Numero from spfafacturarecibida 
 where id in (select idFacturaRecibida from spfadesglosefacturarecibida df inner join spfalineafacturarecibida lr on lr.id = df.idLineaFactura 
 where TipoReferencia = 'EXC' and df.idReferencia in (select idReferencia from spfalineafacturaemitida 
 where id = LFE.id and tipoReferencia = 'EXC'))) as NumeroFacturaRecibida,(Select exc.TipoExpediente from spopexpediente exc inner join spopexpedienteconceptos excc on excc.idexpediente = exc.id where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'EXC') as SubTipoReferencia, 
 (Select exc.Codigo from spopexpediente exc inner join spopexpedienteconceptos excc on excc.idexpediente = exc.id where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'EXC'
 UNION 
 Select exc.Expediente from spexexpediente exc inner join spexconceptoexpediente excc on excc.idexpediente = exc.id where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'EXT'
 UNION 
 select e.Codigo  
from spopconocimientoconceptos cc 
inner join spopconocimiento c on c.id = cc.idConocimiento 
inner join spopbooking b on b.id = c.idBooking 
inner join spopexpedienteviajes ev on ev.Id = b.IdExpedienteViajeSecundario 
inner join spopexpediente e on e.id = ev.IdExpediente where cc.id = lfe.idReferencia and lfe.tiporeferencia = 'BL' 
 UNION 
 select e.Codigo  
from spopconocimientoconceptos cc 
inner join spopconocimiento c on c.id = cc.idConocimiento 
inner join spopbooking b on b.id = c.idBooking 
inner join spopexpedienteviajes ev on ev.Id = b.IdExpedienteViaje and b.idExpedienteViajeSecundario is null 
inner join spopexpediente e on e.id = ev.IdExpediente where cc.id = lfe.idReferencia and lfe.tiporeferencia = 'BL' 
 UNION 
 Select  ex.Codigo from spepexpediente ex inner join spepexpedienteconceptos excc on excc.idexpediente = ex.id where excc.id = lfe.idReferencia and lfe.tiporeferencia In ('AC','AT','EA','EC','EP','EXP','PEP','PES','PET','PL','PRC','RT')) as Expediente, 
 (Select ser.Codigo from spexexpediente exc inner join spexconceptoexpediente excc on excc.idexpediente = exc.id inner join spopservicios ser on ser.id = exc.IdServicio where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'EXT') as CodigoServicio,
 (Select excc.ContabilizarComo from  spopexpedienteconceptos excc  where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'EXC' ) as ContabilizarConceptoComo, 
  (Select expe.idExpedienteAdministracion from spopexpediente expe inner join spopexpedienteconceptos excc on excc.idexpediente = expe.id  where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'EXC' ) as idExpedienteAdministracion, 
  (Select expe.RefacturarVia from spopexpediente expe inner join spopexpedienteconceptos excc on excc.idexpediente = expe.id  where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'EXC' ) as RefacturarVia, 
 (Select bl.CodigoConocimiento from spopconocimiento bl inner join spopconocimientoconceptos blc on blc.idconocimiento = bl.id where blc.id = lfe.idReferencia and lfe.tiporeferencia = 'BL' ) as CodigoBL, 
 (Select lin.Codigo from spopexpediente exc inner join spopexpedienteconceptos excc on excc.idexpediente = exc.id left join spoplineas lin on lin.id = exc.idLinea where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'EXC' ) as CentroCosteExpediente, 
 (Select lin.Codigo from spplexpedienteservicios exs inner join spepexpedienteconceptos excc on excc.idexpediente = exs.id left join spoplineas lin on lin.id = exs.idLinea where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'PES' ) as CentroCosteExpedienteServicios,
 (Select lin.Codigo from spplexpedientepersonal exs inner join spepexpedienteconceptos excc on excc.idexpediente = exs.id left join spoplineas lin on lin.id = exs.idLinea where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'PEP' ) as CentroCosteExpedientePersonal,
 (Select lin.Codigo from spplexpedientetransportes exs inner join spepexpedienteconceptos excc on excc.idexpediente = exs.id left join spoplineas lin on lin.id = exs.idLinea where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'PET' ) as CentroCosteExpedienteTransportes,
 (Select lin.Codigo from spopconocimiento bl inner join spopconocimientoconceptos blc on blc.idconocimiento = bl.id left join spoplineas lin on lin.id = bl.idLinea where blc.id = lfe.idReferencia and lfe.tiporeferencia = 'BL' ) as CentroCosteBL, 
 (Select lin.Id from spopexpediente exc inner join spopexpedienteconceptos excc on excc.idexpediente = exc.id left join spoplineas lin on lin.id = exc.idLinea where excc.id = lfe.idReferencia and lfe.tiporeferencia = 'EXC' ) as IdLineaExpediente, 
 (Select lin.Id from spopconocimientoconceptos cc inner join spopconocimiento c on c.id = cc.idConocimiento inner join spopbooking b on b.id = c.idBooking inner join spopexpedienteviajes ev on ev.Id = b.IdExpedienteViaje inner join spopexpediente e on e.id = ev.IdExpediente left join spoplineas lin on lin.id = e.idLinea where cc.id = lfe.idReferencia and lfe.tiporeferencia = 'BL'  ) as IdLineaExpedienteBL, 
 b.id as idBuque,b.Nombre as Buque ,
  (select top 1 isnull(sfe1.CodigoSerie,'') +  isnull(fe1.NumeroFacturaFormateado,'') from spfafacturaemitida fe1 inner join spfalineafacturaemitida lfe1 on lfe1.idFacturaEmitida = fe1.id 
  inner join spfaseriefactura sfe1 on sfe1.id = fe1.IdSerieFactura where lfe1.idReferencia = lfe.idReferencia and lfe1.tiporeferencia = lfe.tiporeferencia  and fe1.snProforma = 1 order by fe1.FechaFactura Desc ) as NumProforma 
 FROM spfaFacturaEmitida FE
 inner join spfaLineaFacturaEmitida LFE on LFE.IdFacturaEmitida=FE.Id 
 inner join spcoconcepto CO on LFE.IdConcepto = CO.Id 
 left join spfafacturaemitidainfoextra FEIE on FEIE.idFactura = FE.Id
 left join spbmbuque b on b.id = FEIE.idBuque 
 WHERE FE.Id = @IdFactura
      and FE.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitidaPartidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitidaPartidas]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


 Select p.id,p.idExpediente, p.Descripcion, p.IdEmbalaje, p.MetrosLineales,emb.descripcion as Embalaje, p.Bultos, p.PesoNeto, p.PesoBruto, p.Volumen, p.PesoTasable, 
 p.descripcion as mercancia  , pobO.nombre as Origen, pobD.nombre as Destino
 from spexpartida p left join spbmembalaje emb on emb.id = p.idembalaje 
 left join splopoblacion pobO on pobO.id = p.idOrigen
 left join splopoblacion pobD on pobD.id = p.idDestino
 where p.idexpediente in (Select distinct exp.id from spexexpediente exp 
 left join spexconceptoexpediente con on con.idexpediente = exp.id 
 left join spfalineafacturaemitida lfe on lfe.idReferencia = con.id and lfe.tipoReferencia = 'EXT' 
 where lfe.IdFacturaEmitida = @IdFactura and exp.idOficina  in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      ))      
 UNION 
 Select p.id,p.idExpediente, p.Descripcion, p.IdEmbalaje, p.MetrosLineales,emb.descripcion as Embalaje, p.Bultos, p.PesoNeto, p.PesoBruto, p.Volumen, p.PesoTasable,
 p.descripcion as mercancia , pobO.nombre as Origen, pobD.nombre as Destino  
 from spexpartida p left join spbmembalaje emb on emb.id = p.idembalaje   
 left join splopoblacion pobO on pobO.id = p.idOrigen
 left join splopoblacion pobD on pobD.id = p.idDestino where p.idexpediente in (Select distinct exp.id from spexexpediente exp  
 left join spepexpedientesrelacionados er on er.idReferenciaPadre = exp.id 
 left join spepexpedienteconceptos con on con.idexpediente = er.idReferenciaRelacionada
 left join spfalineafacturaemitida lfe on lfe.idReferencia = con.id and lfe.tipoReferencia = 'AC'  
 where lfe.IdFacturaEmitida = @IdFactura and er.Tiporeferenciapadre = 'EXT' and er.TipoReferenciaRelacionada ='AC' and exp.idOficina  in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      ))  
 
     
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitidaPlanesContables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitidaPlanesContables]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


 SELECT OFi.Id as IdOficina,im.*  
 FROM spfaFacturaEmitida FE  
 inner join spsioficina OFi on OFi.id = FE.idOficina  
 inner join spsiempresa EM on OFi.empresa = EM.id  
 inner join spfaSerieFactura SF on SF.Id=FE.IdSerieFactura  
 left join spsiplancontable PC  on PC.id = EM.idPlanContable  
 left join spsiplancontableimpuestos im on im.idPlancontable = pc.id  
        WHERE FE.Id = @IdFactura
      and FE.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaEmitidaRelacionada]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaEmitidaRelacionada]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


  select * from spfafacturaemitidarelacionada 
   
    WHERE IdFactura = @IdFactura
     
      
END

GO
/****** Object:  StoredProcedure [dbo].[GetFacturaRecibida]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaRecibida]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


   SELECT FR.*,FS.Codigo as Codigo,EN.*,FP.*,D.*, FP.IdTipoDocumento,pa.CE,pa.id as idPais, im.CodigoTerritorio, CONVERT(bit,(CASE WHEN IsNull(EN.snNoContabilizar,0) = 1 OR IsNull(FS.snNoContabilizar,0) = 1 then 1 else 0 end)) as snNoContabilizar,snPorCuentaTerceros
 FROM (spfaFacturaRecibida FR  
 inner join spcoentidades EN on FR.IdEntidadProveedor = EN.Id   
 inner join spfaformapago FP on FP.Id = FR.IdFormaPago)  
 left join (select distinct IdEntidad,Idioma,poblacion,pais,IsNull(direccionconfigurada,direccion) as Direccion from spcodireccionesentidades where PrincipalFacturacion = 1) AS D on D.identidad = EN.id
  left join splopoblacion pob on pob.id = D.poblacion  
  left join splopais pa on pa.id = D.pais  
  left join spfaseriefacturarecibida FS on FS.id = FR.idSerie left join spfaimpuestos im on im.id = fr.IdImpuesto  
   WHERE FR.Id = @IdFactura
      and FR.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaRecibidaDatosEmpresa]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaRecibidaDatosEmpresa]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT OFi.Id as IdOficina,EM.*,SF.*, PC.*,ofi.CodigoTerritorio, FR.Id as IdFactura, EPC.CuentaContableCompra, EPC.CuentaContableVenta  
FROM spfaFacturaRecibida FR INNER JOIN spsioficina OFi on OFi.id = FR.idOficina 
INNER JOIN spsiempresa EM on OFi.empresa = EM.id 
INNER JOIN spfaseriefacturarecibida SF on SF.Id=FR.IdSerie 
LEFT  JOIN spsiplancontable PC  on PC.id = EM.idPlanContable 
LEFT  JOIN spcoentidadplanescontables EPC  on EPC.idPlanContable = EM.idPlanContable and EPC.idEntidad = FR.IdEntidadProveedor 
 WHERE FR.Id = @IdFactura
      and FR.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
      
   
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaRecibidaDesgloses]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaRecibidaDesgloses]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT DF.*,'' as 'idBuque',(select Top 1 dva.descripcion  from spsivaloresaplicacion va  inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id  inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id  where va.tipova = 'TipoTrafico' and cva.clave = e.TipoTrafico and idioma = 'es') as 'Buque', e.fechaInicio as 'FechaLLegada', (select Top 1 dva.descripcion  from spsivaloresaplicacion va  inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id  inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id  where va.tipova = 'Via' and cva.clave = e.Via and idioma = 'es') as 'idPoblacionPuerto','' as 'Puerto',(select top 1 descripcion from spsioficina where id = fr.idOficina) as 'DescOficina', e.expediente as Referencia, (ce.ImportePrevision - ce.ImporteCoste) as PendienteDesglosar,ce.ImportePrevision as PrevisionCoste,ce.ImporteVenta as PrevisionVenta, 
 e.id as idExpBL ,ce.DescConcepto as DescripcionConcepto, co.snVentaIgualCoste , '' as LineaComercial, '' as ContabilizarConceptoComo, e.expediente as CodigoReferencia,  '' as Trafico,'' as DescripcionTrafico ,NULL as IdServicioLlegada,'' as DescServLlegada,NULL as IdServicioSalida,'' as DescServSalida, 
 '' as CodigoExpediente, '' as IdOficinaExpediente, NULL as IdExpediente, NULL as IdLineaExpediente, 
  (select Top 1 dva.descripcion  from spsivaloresaplicacion va  inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id  inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id  where va.tipova = 'TipoTrafico' and cva.clave = e.TipoTrafico and idioma = 'es') as 'TraficoEXT',
 e.Via as Via, vm.FechaSalida as FechaSalidaViaje, vm.FechaLlegada as FechaLlegadaViaje, e.FechaInicio as FechaEjecucion
 FROM spfadesglosefacturarecibida DF inner join spfalineafacturarecibida LFR on DF.IdLineaFactura = LFR.Id 
 inner join spfafacturarecibida FR on LFR.IdFacturaRecibida = FR.Id 
 inner join spexconceptoexpediente ce on ce.id = DF.idreferencia and DF.TipoReferencia = 'EXT' 
 inner join spcoconcepto co on co.id = ce.idConcepto 
 inner join spexexpediente e on e.id = ce.idexpediente
 left join spexviajemaritimo vm on vm.idViaje = e.idViaje
  
WHERE FR.Id = @IdFactura and FR.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario   )
 UNION 
 SELECT DF.*,'' as 'idBuque','' as 'Buque','' as 'FechaLLegada','' as 'idPoblacionPuerto','' as 'Puerto','' as 'DescOficina',c.Matricula as Referencia, 0 as PendienteDesglosar,0 as PrevisionCoste,0 as PrevisionVenta,
 c.id as idExpBL,'' as DescripcionConcepto , co.snVentaIgualCoste, '' as lineaComercial, '' as ContabilizarConceptoComo, c.Matricula as CodigoReferencia, '' as Trafico,'' as DescripcionTrafico ,NULL as IdServicioLlegada,'' as DescServLlegada,NULL as IdServicioSalida,'' as DescServSalida,
 '' as CodigoExpediente, '' as IdOficinaExpediente, NULL as IdExpediente, NULL as IdLineaExpediente  
 , Null, Null, Null, Null, Null 
 FROM spfadesglosefacturarecibida DF inner join spfalineafacturarecibida LFR on DF.IdLineaFactura = LFR.Id 
 inner join spfafacturarecibida FR on LFR.IdFacturaRecibida = FR.Id 
 inner join spbmcontenedor c on c.id = DF.idreferencia and DF.TipoReferencia = 'CO' 
 inner join spcoconcepto co on co.id = LFR.idConcepto 
WHERE FR.Id = @IdFactura and FR.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario   )
 UNION 
 SELECT DF.*,ex.idBuque,bu.nombre 'Buque',  (Select top 1 ea.FechaLLegada from spopexpedienteatraques ea where ea.idexpediente = ex.id ) as FechaLlegada,p.idPoblacion as 'idPoblacionPuerto',p.Descripcion as 'Puerto','' as 'DescOficina',c.numblArmador as Referencia, (cc.ImportePrevision - cc.ImporteCoste) as PendienteDesglosar,cc.ImportePrevision as PrevisionCoste,cc.ImporteVenta as PrevisionVenta,
 c.id as idExpBL,cc.DescripcionConcepto , co.snVentaIgualCoste, lin.codigo as lineaComercial, '' as ContabilizarConceptoComo, isnull(cast(c.CodigoConocimiento as varchar(20)), ex.Codigo) as CodigoReferencia, c.Trafico, (select dva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id  inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id  where va.tipova = 'TIPOTRAFICO' and dva.idioma = 'es' and cva.clave = c.Trafico) as 'DescripcionTrafico' ,ex.IdServicioLlegada,servLleg.Descripcion as 'DescServLlegada',ex.IdServicioSalida,servSal.Descripcion as 'DescServSalida',
 ex.Codigo as CodigoExpediente, ex.IdOficina as IdOficinaExpediente, ex.Id as IdExpediente, ex.IdLinea as IdLineaExpediente  
 , Null, Null, Null, Null, Null 
 FROM spfadesglosefacturarecibida DF inner join spfalineafacturarecibida LFR on DF.IdLineaFactura = LFR.Id 
 inner join spfafacturarecibida FR on LFR.IdFacturaRecibida = FR.Id 
 inner join spopconocimientoconceptos cc on cc.id = DF.idreferencia and DF.TipoReferencia = 'BL' 
 inner join spcoconcepto co on co.id = cc.idConcepto 
 inner join spopconocimiento c on c.id = cc.idconocimiento 
 left join spoplineas lin on lin.id = c.idLinea 
 inner join spopbooking boo on boo.Id = c.idBooking 
 inner join spopexpedienteviajes exv on exv.id = boo.IdExpedienteViajeSecundario 
 inner join spopexpediente ex on ex.Id = exv.Idexpediente 
 left join spopservicios servLleg on ex.idServicioLLegada = servLLeg.id 
 left join spopservicios servSal on ex.idServicioSalida = servSal.id 
 left join spbmpuerto p on p.id = ex.idPuerto 
 left join spbmbuque bu on bu.id = ex.idBuque 
WHERE FR.Id = @IdFactura and FR.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario   )
 UNION 
 SELECT DF.*,ex.idBuque,bu.nombre 'Buque',  (Select top 1 ea.FechaLLegada from spopexpedienteatraques ea where ea.idexpediente = ex.id ) as FechaLlegada,p.idPoblacion as 'idPoblacionPuerto',p.Descripcion as 'Puerto','' as 'DescOficina',c.numblArmador as Referencia, (cc.ImportePrevision - cc.ImporteCoste) as PendienteDesglosar,cc.ImportePrevision as PrevisionCoste,cc.ImporteVenta as PrevisionVenta,
 c.id as idExpBL,cc.DescripcionConcepto , co.snVentaIgualCoste, lin.codigo as lineaComercial, '' as ContabilizarConceptoComo, isnull(cast(c.CodigoConocimiento as varchar(20)), ex.Codigo) as CodigoReferencia, c.Trafico, (select dva.descripcion from spsivaloresaplicacion va inner join spsiclavesvaloresaplicacion cva on cva.idVa = va.id  inner join spsidescripcionidiomasvaloresaplicacion dva on dva.idCVa = cva.id  where va.tipova = 'TIPOTRAFICO' and dva.idioma = 'es' and cva.clave = c.Trafico) as 'DescripcionTrafico' ,ex.IdServicioLlegada,servLleg.Descripcion as 'DescServLlegada',ex.IdServicioSalida,servSal.Descripcion as 'DescServSalida' , 
 ex.Codigo as CodigoExpediente, ex.IdOficina as IdOficinaExpediente, ex.Id as IdExpediente, ex.IdLinea as IdLineaExpediente  
 , Null, Null, Null, Null, Null 
 FROM spfadesglosefacturarecibida DF inner join spfalineafacturarecibida LFR on DF.IdLineaFactura = LFR.Id 
 inner join spfafacturarecibida FR on LFR.IdFacturaRecibida = FR.Id 
 inner join spopconocimientoconceptos cc on cc.id = DF.idreferencia and DF.TipoReferencia = 'BL' 
 inner join spcoconcepto co on co.id = cc.idConcepto 
 inner join spopconocimiento c on c.id = cc.idconocimiento 
 left join spoplineas lin on lin.id = c.idLinea 
 inner join spopbooking boo on boo.Id = c.idBooking 
 inner join spopexpedienteviajes exv on exv.id = boo.IdExpedienteViaje and boo.IdExpedienteViajeSecundario is null 
 inner join spopexpediente ex on ex.Id = exv.Idexpediente 
 left join spopservicios servLleg on ex.idServicioLLegada = servLLeg.id 
 left join spopservicios servSal on ex.idServicioSalida = servSal.id 
 left join spbmpuerto p on p.id = ex.idPuerto 
 left join spbmbuque bu on bu.id = ex.idBuque 
WHERE FR.Id = @IdFactura and FR.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario   )
UNION 
SELECT DF.*,'' as 'idBuque','' as 'Buque','' as 'FechaLLegada','' as 'idPoblacionPuerto','' as 'Puerto','' as 'DescOficina',c.Codigo as Referencia, (cc.ImportePrevision - cc.ImporteCoste) as PendienteDesglosar,cc.ImportePrevision as PrevisionCoste,cc.ImporteVenta as PrevisionVenta, 
c.id as idExpBL,cc.DescripcionConcepto , co.snVentaIgualCoste, '' as lineaComercial, '' as ContabilizarConceptoComo, '' as CodigoReferencia,  '' as Trafico,'' as DescripcionTrafico ,NULL as IdServicioLlegada,'' as DescServLlegada,NULL as IdServicioSalida,'' as DescServSalida,  
'' as CodigoExpediente, '' as IdOficinaExpediente, NULL as IdExpediente, NULL as IdLineaExpediente  
, Null, Null, Null, Null, Null 
 FROM spfadesglosefacturarecibida DF  
inner join spfalineafacturarecibida LFR on DF.IdLineaFactura = LFR.Id  
inner join spfafacturarecibida FR on LFR.IdFacturaRecibida = FR.Id  
inner join spepexpedienteconceptos cc on cc.id = DF.idreferencia and not DF.TipoReferencia in ('BL','EXT','EXC','CO','PES','PET','PEP')
inner join spcoconcepto co on co.id = cc.idConcepto 
inner join spepexpediente c on c.id = cc.idExpediente 
WHERE FR.Id = @IdFactura and FR.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario   )
UNION 
SELECT DF.*,'' as 'idBuque','' as 'Buque','' as 'FechaLLegada','' as 'idPoblacionPuerto','' as 'Puerto','' as 'DescOficina',c.Codigo as Referencia, (cc.ImportePrevision - cc.ImporteCoste) as PendienteDesglosar,cc.ImportePrevision as PrevisionCoste,cc.ImporteVenta as PrevisionVenta, 
c.id as idExpBL,cc.DescripcionConcepto , co.snVentaIgualCoste, lin.codigo as lineaComercial, '' as ContabilizarConceptoComo, c.Codigo as CodigoReferencia,  '' as Trafico,'' as DescripcionTrafico ,NULL as IdServicioLlegada,'' as DescServLlegada,NULL as IdServicioSalida,'' as DescServSalida, 
 '' as CodigoExpediente, '' as IdOficinaExpediente, NULL as IdExpediente, NULL as IdLineaExpediente  
, Null, Null, Null, Null, Null 
 FROM spfadesglosefacturarecibida DF  
inner join spfalineafacturarecibida LFR on DF.IdLineaFactura = LFR.Id  
inner join spfafacturarecibida FR on LFR.IdFacturaRecibida = FR.Id  
inner join spepexpedienteconceptos cc on cc.id = DF.idreferencia and  DF.TipoReferencia = 'PES'
inner join spcoconcepto co on co.id = cc.idConcepto 
inner join spepexpediente c on c.id = cc.idExpediente 
inner join spplexpedienteservicios exs on exs.id = c.id 
 left join spoplineas lin on lin.id = exs.idLinea 
WHERE FR.Id = @IdFactura and FR.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario   )
UNION 
SELECT DF.*,'' as 'idBuque','' as 'Buque','' as 'FechaLLegada','' as 'idPoblacionPuerto','' as 'Puerto','' as 'DescOficina',c.Codigo as Referencia, (cc.ImportePrevision - cc.ImporteCoste) as PendienteDesglosar,cc.ImportePrevision as PrevisionCoste,cc.ImporteVenta as PrevisionVenta, 
c.id as idExpBL,cc.DescripcionConcepto , co.snVentaIgualCoste, lin.codigo as lineaComercial, '' as ContabilizarConceptoComo, c.Codigo as CodigoReferencia,  '' as Trafico,'' as DescripcionTrafico ,NULL as IdServicioLlegada,'' as DescServLlegada,NULL as IdServicioSalida,'' as DescServSalida, 
 '' as CodigoExpediente, '' as IdOficinaExpediente , NULL as IdExpediente, NULL as IdLineaExpediente  
, Null, Null, Null, Null, Null 
 FROM spfadesglosefacturarecibida DF  
inner join spfalineafacturarecibida LFR on DF.IdLineaFactura = LFR.Id  
inner join spfafacturarecibida FR on LFR.IdFacturaRecibida = FR.Id  
inner join spepexpedienteconceptos cc on cc.id = DF.idreferencia and  DF.TipoReferencia = 'PET'
inner join spcoconcepto co on co.id = cc.idConcepto 
inner join spepexpediente c on c.id = cc.idExpediente 
inner join spplexpedientetransportes exs on exs.id = c.id 
 left join spoplineas lin on lin.id = exs.idLinea 
WHERE FR.Id = @IdFactura and FR.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario   )
UNION 
SELECT DF.*,'' as 'idBuque','' as 'Buque','' as 'FechaLLegada','' as 'idPoblacionPuerto','' as 'Puerto','' as 'DescOficina',c.Codigo as Referencia, (cc.ImportePrevision - cc.ImporteCoste) as PendienteDesglosar,cc.ImportePrevision as PrevisionCoste,cc.ImporteVenta as PrevisionVenta, 
c.id as idExpBL,cc.DescripcionConcepto , co.snVentaIgualCoste, lin.codigo as lineaComercial, '' as ContabilizarConceptoComo, c.Codigo as CodigoReferencia,  '' as Trafico,'' as DescripcionTrafico ,NULL as IdServicioLlegada,'' as DescServLlegada,NULL as IdServicioSalida,'' as DescServSalida, 
 '' as CodigoExpediente, '' as IdOficinaExpediente , NULL as IdExpediente, NULL as IdLineaExpediente  
, Null, Null, Null, Null, Null 
 FROM spfadesglosefacturarecibida DF  
inner join spfalineafacturarecibida LFR on DF.IdLineaFactura = LFR.Id  
inner join spfafacturarecibida FR on LFR.IdFacturaRecibida = FR.Id  
inner join spepexpedienteconceptos cc on cc.id = DF.idreferencia and  DF.TipoReferencia = 'PEP'
inner join spcoconcepto co on co.id = cc.idConcepto 
inner join spepexpediente c on c.id = cc.idExpediente 
inner join spplexpedientepersonal exs on exs.id = c.id 
 left join spoplineas lin on lin.id = exs.idLinea 
WHERE FR.Id = @IdFactura and FR.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario   )
 UNION 
 SELECT DF.*,e.idBuque,bu.nombre 'Buque',  (Select top 1 ea.FechaLLegada from spopexpedienteatraques ea where ea.idexpediente = e.id ) as FechaLlegada  ,p.idPoblacion as 'idPoblacionPuerto',p.Descripcion as 'Puerto',o.Descripcion as 'DescOficina', e.codigo as Referencia, (ce.ImportePrevision - ce.ImporteCoste) as PendienteDesglosar,ce.ImportePrevision as PrevisionCoste,ce.ImporteVenta as PrevisionVenta,
 e.id as idExpBL,ce.DescripcionConcepto , co.snVentaIgualCoste, lin.codigo as lineaComercial, ce.ContabilizarComo as ContabilizarConceptoComo, e.Codigo as CodigoReferencia, '' as Trafico,'' as DescripcionTrafico, e.IdServicioLlegada,servLleg.Descripcion as 'DescServLlegada',e.IdServicioSalida,servSal.Descripcion as 'DescServSalida', 
 e.Codigo as CodigoExpediente, e.IdOficina as IdOficinaExpediente, e.Id as IdExpediente, e.IdLinea as IdLineaExpediente  
 , Null, Null, Null, Null, Null 
 FROM spfadesglosefacturarecibida DF inner join spfalineafacturarecibida LFR on DF.IdLineaFactura = LFR.Id 
 inner join spfafacturarecibida FR on LFR.IdFacturaRecibida = FR.Id 
 inner join spopexpedienteconceptos ce on ce.id = DF.idreferencia and DF.TipoReferencia = 'EXC' 
 inner join spcoconcepto co on co.id = ce.idConcepto 
 inner join spopexpediente e on e.id = ce.idexpediente 
 left join spopservicios servLleg on e.idServicioLLegada = servLLeg.id 
 left join spopservicios servSal on e.idServicioSalida = servSal.id 
 inner join spbmpuerto p on p.id = e.idPuerto 
 inner join spsioficina o on o.id = fr.idOficina 
 left join spoplineas lin on lin.id = e.idLinea 
 left join spbmbuque bu on bu.id = e.idBuque 
 WHERE FR.Id = @IdFactura and FR.idOficina in ( select idoficina from spsiusuariosoficinas where idUsuario = @Usuario   )
  
   
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaRecibidaFicheros]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaRecibidaFicheros]
	@IdPadre numeric(18,0)	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT * FROM spfafacturarecibidaadjuntos WHERE idPadre  = @IdPadre
 
 

 
 
      
   
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaRecibidaInfoClasificadaCliente]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaRecibidaInfoClasificadaCliente]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
      
	SELECT FR.Id as IdFactura, EN.Id as IdEntidad, IC.* 
	FROM spfaFacturaRecibida FR
		inner join spcoentidades EN on FR.IdEntidadProveedor = EN.Id
        inner join spcoentidadesinfoclasificada IC ON IC.IdEntidad= EN.Id
    WHERE FR.id  = @IdFactura
      and FR.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaRecibidaLineas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaRecibidaLineas]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


 SELECT LFr.*,Co.CodigoConcepto,Co.Nombre, CO.coste, CO.snVentaIgualCoste, CO.TipoConceptoContable,
 (Select TOP 1 * from  (Select top 1 exc.Codigo from spopexpediente exc inner join spopexpedienteconceptos excc on excc.idexpediente = exc.id 
 inner join spfadesglosefacturarecibida df on df.idlineafactura = lfr.id 
 where df.participa = 'true' and  excc.id = df.idReferencia and df.TipoReferencia  = 'EXC'
 UNION 
 Select top 1 ext.Expediente as 'Codigo' from spexexpediente ext inner join spexconceptoexpediente excc on excc.idexpediente = ext.id 
 inner join spfadesglosefacturarecibida df on df.idlineafactura = lfr.id 
 where df.participa = 'true' and  excc.id = df.idReferencia and df.TipoReferencia  = 'EXT' 
 UNION 
 Select top 1 ext.Codigo as 'Codigo' from spepexpediente ext inner join spepexpedienteconceptos excc on excc.idexpediente = ext.id 
 inner join spfadesglosefacturarecibida df on df.idlineafactura = lfr.id 
 where df.participa = 'true' and  excc.id = df.idReferencia and df.TipoReferencia  in ('PEP','PES','PET') 
 UNION 
Select top 1 ex.Codigo from spopexpediente ex 
inner join spopexpedienteviajes ev on ev.idExpediente = ex.id 
inner join spopbooking bo on bo.idExpedienteViaje = ev.id 
inner join spopconocimiento co on co.idbooking = bo.id  
inner join spopconocimientoconceptos cocc on cocc.idconocimiento = co.id 
inner join spfadesglosefacturarecibida df on df.idlineafactura = lfr.id  
where df.participa = 'true' and  cocc.id = df.idReferencia and df.TipoReferencia  = 'BL' ) as Expediente) as Expediente,
(Select TOP 1 ser.Codigo from spexexpediente exc 
	inner join spexconceptoexpediente excc on excc.idexpediente = exc.id 
	inner join spfadesglosefacturarecibida dfr on dfr.idLineaFactura = lfr.id
	inner join spopservicios ser on ser.id = exc.IdServicio 
	where excc.id = dfr.idReferencia and dfr.tiporeferencia = 'EXT') as CodigoServicio,
		(Select top 1 con.NumBLArmador as NumBL
from spopconocimiento con
inner join spopconocimientoconceptos conc on conc.IdConocimiento = con.Id
inner join spfadesglosefacturarecibida df on df.idlineafactura = lfr.id 
where df.participa = 1 and  conc.id = df.idReferencia and df.TipoReferencia  in ('BL')) as NumBL
 FROM spfaFacturaRecibida FR,spfaLineaFacturaRecibida LFR,spcoconcepto CO 
 WHERE FR.Id = @IdFactura
      and FR.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
 and LFR.IdFacturaRecibida=FR.Id and LFR.IdConcepto=CO.Id 
 
 
      
   
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturaRecibidaPlanesContables]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetFacturaRecibidaPlanesContables]
	@IdFactura numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


 SELECT OFi.Id as IdOficina,im.*  
 FROM spfaFacturaRecibida FR
 inner join spsioficina OFi on OFi.id = FR.idOficina  
 inner join spsiempresa EM on OFi.empresa = EM.id  
 inner join spfaSerieFacturaRecibida SF on SF.Id=FR.IdSerie  
 left join spsiplancontable PC  on PC.id = EM.idPlanContable  
 left join spsiplancontableimpuestos im on im.idPlancontable = pc.id  
        WHERE FR.Id = @IdFactura
      and FR.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )
      
END
GO
/****** Object:  StoredProcedure [dbo].[GetFacturasEmitidasReferenciaBL]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[GetFacturasEmitidasReferenciaBL]
	 @IdReferencia numeric(10,0),
	 @TipoReferencia varchar(50),
	 @Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT N added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	 -- NO USAR DIRECTAMENTE LA VISTA, sino su definición
	 -- GRAVES PROBLEMAS DE RENDIMIENTO DETECTADOS EN OCIDENAVE - 18/NOV/2016
     -- select *   from vFacturasEmitidasReferencias 
     

	 SELECT DISTINCT 
                      fe.Id, se.CodigoSerie AS Codigo, fe.NumeroFacturaFormateado, fe.NumeroFactura, fe.PrefijoFactura, fe.DigitoNumFactura, fe.FechaFactura, fe.TimeStamp, 
                      ent.Nombre AS Cliente, lfe.ImporteUnitario, lfe.Unidades, lfe.IdDivisa, fe.idDivisa AS DivisaDestino, fe.StatusFactura AS Estado, 
                      fe.FechaContabFactura AS FechaContabilizacion, fe.FechaVencimiento, fe.IdFormaPago AS FormaPago, feie.CodExpediente AS [Cod.Expediente], lfe.idReferencia, 
                      lfe.TipoReferencia, fe.snProforma AS Proforma, fe.IdOficina, lfe.ImporteCalculadoRentabilidad, fe.GrupoFacturacion, lfe.Id AS idLinea, 
                      se.Codigo + '_' + CAST(fe.NumeroFacturaFormateado AS varchar) + '.pdf' AS FicheroFactura, fe.Anotaciones, fe.Referencia, se.CodigoSerie,
                          (SELECT     TOP (1) il.NumeroInvoice
                            FROM          dbo.spepexpedientesinvoicelistfacturas AS ilf INNER JOIN
                                                   dbo.spepexpedientesinvoicelist AS il ON il.id = ilf.idExpedienteInvoiceList
                            WHERE      (ilf.idFactura = fe.Id)) AS InvoiceList, fe.TotalFacturaEUR, ISNULL(fe.Cobrado, 0) AS Cobrado
FROM         dbo.spfafacturaemitida AS fe INNER JOIN
                      dbo.spfalineafacturaemitida AS lfe ON lfe.IdFacturaEmitida = fe.Id INNER JOIN
                      dbo.spcoentidades AS ent ON fe.IdEntidadCliente = ent.Id INNER JOIN
                      dbo.spfaseriefactura AS se ON fe.IdSerieFactura = se.Id LEFT OUTER JOIN
                      dbo.spfafacturaemitidainfoextra AS feie ON feie.IdFactura = fe.Id
	 
	 
	 
	   where idReferencia in (select id from spopconocimientoconceptos where idConocimiento = @IdReferencia) and TipoReferencia = @TipoReferencia  and  idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)            
     
  
END

GO
/****** Object:  StoredProcedure [dbo].[GetFacturasEmitidasReferenciaConcepto]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[GetFacturasEmitidasReferenciaConcepto]
	 @IdReferencia numeric(10,0),
	 @TipoReferencia varchar(50),
	 @Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT N added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


select * 
from vFacturasEmitidasReferencias
where idReferencia = @IdReferencia and TipoReferencia = @TipoReferencia
and  idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetFacturasEmitidasReferenciaEXC]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[GetFacturasEmitidasReferenciaEXC]
	 @IdReferencia numeric(10,0),
	 @TipoReferencia varchar(50),
	 @Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT N added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


select * 
from vFacturasEmitidasReferencias
where idReferencia in (select id from spopexpedienteconceptos where idexpediente = @IdReferencia) and TipoReferencia = @TipoReferencia
and  idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetFacturasEmitidasReferenciaEXT]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[GetFacturasEmitidasReferenciaEXT]
	 @IdReferencia numeric(10,0),
	 @TipoReferencia varchar(50),
	 @Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT N added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


select * 
from vFacturasEmitidasReferencias
where idReferencia in (select id from spexconceptoexpediente where idexpediente = @IdReferencia) and TipoReferencia = @TipoReferencia
and  idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetFacturasEmitidasReferenciaPlantilla]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[GetFacturasEmitidasReferenciaPlantilla]
	 @IdReferencia numeric(10,0),
	 @TipoReferencia varchar(50),
	 @Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT N added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


select * 
from vFacturasEmitidasReferencias
where idReferencia in (select id from spepexpedienteconceptos where idExpediente = @IdReferencia) and TipoReferencia = @TipoReferencia
and  idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetHuecosFacturaByIdRef]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[GetHuecosFacturaByIdRef]
	 @IdReferencia numeric(10,0),
	 @TipoReferencia varchar(50)
AS
BEGIN
	-- SET NOCOUNT N added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


 Select s.CodigoSerie, h.NumeroHueco, expe.Expediente as Expediente, h.idReferencia, h.TipoReferencia, h.id  
 from spfaseriefacturahuecos h inner join spfaseriefactura s on s.id = h.idSerieFacturaEmitida  
 inner join spexexpediente expe on expe.id = h.idReferencia and h.TipoReferencia = @TipoReferencia
   where expe.id = @IdReferencia


      
END

GO
/****** Object:  StoredProcedure [dbo].[GetHuecosFacturaEmitida]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetHuecosFacturaEmitida]
	@IdSerie numeric(10,0)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @intNumFact int;

	SET @intNumFact = (select PrimerNumeroFactura from spfaseriefactura where id = @IdSerie)
	print @intNumFact;

    CREATE TABLE #ProductosResumen( 
		NumeroFactura int NOT NULL PRIMARY KEY,
		FechaInicial varchar(10) NULL,
		FechaFinal varchar(10) NULL);		
		
	WHILE (SELECT IsNull(Max(NumeroFactura),1) FROM #ProductosResumen) <> (select UltNumFactura from spfaseriefactura where id = @IdSerie)
	BEGIN
		IF NOT EXISTS (select * from spfafacturaemitida where NumeroFactura = @intNumFact and idSerieFactura = @IdSerie and StatusFactura <> 'I' and StatusFactura <> 'A')
		BEGIN
			INSERT INTO #ProductosResumen VALUES(@intNumFact, Null,Null);		
		END
		SET @intNumFact = @intNumFact + 1;
	END		
	SELECT * FROM #ProductosResumen;
	DROP TABLE #ProductosResumen;	
END
GO
/****** Object:  StoredProcedure [dbo].[GetIDExpedienteANdCodigoByIdBooking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetIDExpedienteANdCodigoByIdBooking]
	@IdBooking numeric(18,0)
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	select top 1 *
	from (
 select TOP 1 e.id, e.codigo, e.IdOficina 
 from spopExpediente e left join spopexpedienteviajes ev on e.id=ev.idExpediente left join spopBooking book on ev.id=book.IdExpedienteViaje 
 left join spopBooking book2 on ev.id=book2.IdExpedienteViajesecundario where book.id = @IdBooking 
  UNION
  select TOP 1 e.id, e.codigo, e.IdOficina 
 from spopExpediente e left join spopexpedienteviajes ev on e.id=ev.idExpediente left join spopBooking book on ev.id=book.IdExpedienteViaje 
 left join spopBooking book2 on ev.id=book2.IdExpedienteViajesecundario where book2.id = @IdBooking ) as Booking
 
  
        

      
END



GO
/****** Object:  StoredProcedure [dbo].[GetOT]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOT]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 select ot.*, exp.Expediente as CodigoExpedienteTransito, exp.TipoTrafico, b.Trafico  
 from spexOrdenTransporte ot left join spexexpediente exp on exp.id = ot.idExpedienteTransito  left join spopbooking b on b.id = ot.idBooking  
 where ot.id = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 




       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTActuaciones]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTActuaciones]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
select ota.* from spexordentransporteactuaciones ota inner join spexordentransporte ot on ot.id = ota.idOrdenTransporte  
where ota.idOrdenTransporte = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 



       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTBL]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTBL]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 
 select con.*  from spopconocimiento con   left join spexOrdenTransporte ot on ot.idConocimiento = con.id  
 where ot.id = @IdOT and ot.TipoOTCT ='CO' and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 

 




       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTBooking]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTBooking]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 select bo.*  from spopbooking bo   left join spexOrdenTransporte ot on ot.idBooking = bo.id  
 where ot.id = @IdOT and ot.TipoOTCT ='BO' and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 
 




       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTCargaDescarga]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTCargaDescarga]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
SELECT otcd.*, pob.nombre as Poblacion 
FROM spexordentransportecargadescarga otcd inner join spexordentransporte ot on ot.id = otcd.idOrdenTransporte  
left join splopoblacion pob on pob.id = otcd.idPoblacion  
where otcd.idOrdenTransporte = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
order by Orden,TipOCargaDescarga,Fecha  
 



       
END



GO
/****** Object:  StoredProcedure [dbo].[GetOTCargaDescargaByEquipamiento]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTCargaDescargaByEquipamiento]
	@IdOT numeric (10,0),
		@Usuario varchar(50),
		@IdEquipamiento numeric(10,0)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
SELECT otcd.*, pob.nombre as Poblacion 
FROM spexordentransportecargadescarga otcd 
inner join spexordentransporte ot on ot.id = otcd.idOrdenTransporte  
inner join spexordentransporterelaciones rel on rel.IdOrdenTransporte = ot.Id 
left join splopoblacion pob on pob.id = otcd.idPoblacion  
where otcd.idOrdenTransporte = @IdOT 
and rel.IdEquipamiento = @IdEquipamiento and rel.idLugar = otcd.Id
and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
order by TipOCargaDescarga,Fecha  
 



       
END




GO
/****** Object:  StoredProcedure [dbo].[GetOTContenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTContenedores]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
select otc.*, 
entAlq.Nombre as NombreEmpresaAlquiler, entAlq.ScacCode as ScacCodeEmpresaAlquiler
from spexordentransportecontenedor otc 
inner join spexordentransporte ot on ot.id = otc.idOrdenTransporte  
left join spcoentidades entAlq on EntAlq.Id = otc.IdEmpresaAlquiler 
where otc.idOrdenTransporte = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)


 



       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTContenedoresByEquipamiento]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTContenedoresByEquipamiento]
	@IdOT numeric (10,0),
		@Usuario varchar(50),
		@IdEquipamiento numeric(10,0)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
select otc.*, 
entAlq.Nombre as NombreEmpresaAlquiler, entAlq.ScacCode as ScacCodeEmpresaAlquiler
from spexordentransportecontenedor otc 
inner join spexordentransporte ot on ot.id = otc.idOrdenTransporte  
left join spcoentidades entAlq on EntAlq.Id = otc.IdEmpresaAlquiler 
where otc.idOrdenTransporte = @IdOT 
and otc.Id = @IdEquipamiento
and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)


 



       
END




GO
/****** Object:  StoredProcedure [dbo].[GetOTDocumentos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTDocumentos]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
select otd.*,(Select top 1 Situacion from spexordentransportedocumentosestados where idordendocumento = otd.id order by fecha desc, hora desc) as Situacion,  
(Select top 1 Fecha from spexordentransportedocumentosestados where idordendocumento = otd.id order by fecha desc, hora desc) as Fecha , 
(Select top 1 Hora from spexordentransportedocumentosestados where idordendocumento = otd.id order by fecha desc, hora desc) as Hora  
from spexordentransportedocumentos otd inner join spexordentransporte ot on ot.id = otd.idOrdenTransporte  
where otd.idOrdenTransporte = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)



 



       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTDocumentosEstados]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTDocumentosEstados]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
select * from spexordentransportedocumentosestados  
where idOrdenDocumento in (select distinct otd.id from spexordentransportedocumentos otd inner join spexordentransporte ot on ot.id = otd.idOrdenTransporte 
where otd.idOrdenTransporte = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario))
order by fecha , hora 




 



       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTEventosTemporales]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTEventosTemporales]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
select otet.* from spexordentransporteeventostemporales otet inner join spexordentransporte ot on ot.id = otet.idOrdenTransporte  
where otet.idOrdenTransporte = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)


 



       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTParticipes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTParticipes]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
select otp.*, ent.CIF, ent.idClienteFacturacion,entfac.CIF as CIF_ClienteFacturacion,
(select top 1 dir.Pais from spcodireccionesentidades dir where dir.IdEntidad = ent.id and dir.PrincipalFiscal='true') as Pais 
 from spexordentransporteparticipes otp  
 inner join spexordentransporte ot on ot.id = otp.idOrdenTransporte  
 left join spcoentidades ent on ent.id = otp.idEntidad  
 left join spcoentidades entfac on entfac.Id = ent.IdClienteFacturacion 
 where otp.idOrdenTransporte = @IdOT and ot.idOficina 
 in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

 



       
END



GO
/****** Object:  StoredProcedure [dbo].[GetOTPartidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTPartidas]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
  select pot.*, ar.Codigo as CodigoArancel, emba.Descripcion  as Embalaje  
  from spexpartidaordenTransporte pot  inner join spexordenTransporte ot on ot.id = pot.idOrden  left join spbmarancel ar on ar.id = pot.idarancel  
  left join spbmembalaje emba on emba.id = pot.idTipoBulto  
  where pot.idOrden = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 



       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTPartidasByEquipamiento]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTPartidasByEquipamiento]
	@IdOT numeric (10,0),
		@Usuario varchar(50),
		@IdEquipamiento numeric(10,0)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
  select pot.*, ar.Codigo as CodigoArancel, emba.Descripcion  as Embalaje  
  from spexpartidaordenTransporte pot  
  inner join spexordenTransporte ot on ot.id = pot.idOrden  
  inner join spexordentransporterelaciones rel on rel.idOrdenTransporte = ot.Id
  inner join spexordentransportecontenedor cont on cont.IdOrdenTransporte = ot.Id 
  left join spbmarancel ar on ar.id = pot.idarancel  
  left join spbmembalaje emba on emba.id = pot.idTipoBulto  
  where pot.idOrden = @IdOT  and rel.IdEquipamiento = @IdEquipamiento 
  and pot.IdEquipamientoRelacionado = cont.IdPadre  and cont.Id = rel.IdEquipamiento
  and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 



       
END




GO
/****** Object:  StoredProcedure [dbo].[GetOTSubPartidas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTSubPartidas]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 select spot.*, emba.Descripcion  as Embalaje  
 from spexsubpartidaordenTransporte spot inner join spexpartidaordenTransporte pot on pot.id = spot.idPartidaOT  
 inner join spexordenTransporte ot on ot.id = pot.idOrden  left join spbmembalaje emba on emba.id = spot.idTipoBulto 
  where pot.idOrden = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 



 



       
END


GO
/****** Object:  StoredProcedure [dbo].[GetOTSubPartidasByEquipamiento]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTSubPartidasByEquipamiento]
	@IdOT numeric (10,0),
		@Usuario varchar(50),
		@IdEquipamiento numeric(10,0)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
 select spot.*, emba.Descripcion  as Embalaje  
 from spexsubpartidaordenTransporte spot 
 inner join spexpartidaordenTransporte pot on pot.id = spot.idPartidaOT  
 inner join spexordenTransporte ot on ot.id = pot.idOrden  
 inner join spexordentransporterelaciones rel on rel.idOrdenTransporte = ot.Id
  inner join spexordentransportecontenedor cont on cont.IdOrdenTransporte = ot.Id 
 left join spbmembalaje emba on emba.id = spot.idTipoBulto 
  where pot.idOrden = @IdOT  
  and rel.IDEquipamiento = @IdEquipamiento 
  and pot.IdPadre = cont.IdPadre  and cont.Id = rel.IdEquipamiento
  and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 



 



       
END




GO
/****** Object:  StoredProcedure [dbo].[GetOTTextos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetOTTextos]
	@IdOT numeric (10,0),
		@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	  
select ott.* from spexordentransportetextos ott inner join spexordentransporte ot on ot.id = ott.idOrdenTransporte  
where ott.idOrdenTransporte = @IdOT and ot.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)


 



       
END


GO
/****** Object:  StoredProcedure [dbo].[GetProyectosEtapasMercancias]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GetProyectosEtapasMercancias]
		@IdReferencia INT,@TipoReferencia AS NVARCHAR(MAX)
AS
BEGIN
DECLARE @cols AS NVARCHAR(MAX),@SQL  AS NVARCHAR(MAX),@cols2 AS NVARCHAR(MAX);

if @TipoReferencia = 'BL'
BEGIN
	SELECT @cols = STUFF((SELECT distinct  ',' + QUOTENAME(Campo) 
                    FROM spopconocimientomercancias_proyectos
					where idConocMerc IN (select distinct Id from spopconocimientomercancias where idConocimiento IN (@IdReferencia)
					)
            FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')

			SELECT @cols2 = STUFF((SELECT distinct  ',MAX(' + QUOTENAME(Campo) +') AS ' + Campo
                    FROM spopconocimientomercancias_proyectos
					where idConocMerc IN (select distinct Id from spopconocimientomercancias where idConocimiento IN (@IdReferencia)
					)
            FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
END
ELSE
BEGIN
	SELECT @cols = STUFF((SELECT distinct  ',' + QUOTENAME(Campo) 
                    FROM spopconocimientomercancias_proyectos
					where idConocMerc IN (select distinct Id from spopconocimientomercancias where idConocimiento IN (select Id from ConocimientosProyecto where IdProyecto = @IdReferencia)
					)
            FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')

		SELECT @cols2 = STUFF((SELECT distinct  ',MAX(' + QUOTENAME(Campo) +') AS ' + Campo
                    FROM spopconocimientomercancias_proyectos
					where idConocMerc IN (select distinct Id from spopconocimientomercancias where idConocimiento IN   (select Id from ConocimientosProyecto where IdProyecto = @IdReferencia)
					)
            FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
END

if @TipoReferencia = 'BL'
BEGIN
	SELECT @SQL = 
	'
	SELECT IdConocMerc,' + @cols2 + ' FROM
	(select distinct * from spopconocimientomercancias_proyectos where idConocMerc IN (select distinct Id from spopconocimientomercancias where idConocimiento = ' + cast(@IdReferencia as varchar(20)) + ')
	) as SourceTable
	PIVOT 
	(
		MAX(Valor)
		for [Campo] in (' + @cols + ')) as PivotTable Group by IdConocMerc'
		
END
ELSE
BEGIN
	SELECT @SQL = 
	'
	SELECT cm.NumSeriePieza, cmp.IdProyectoMaterial,' + @cols2 + ' FROM 
	(SELECT IdConocMerc,' + @cols + ' FROM
	(select * from spopconocimientomercancias_proyectos where idConocMerc IN (select distinct Id from spopconocimientomercancias where idConocimiento IN
	 (select Id from ConocimientosProyecto where IdProyecto = ' + cast(@IdReferencia as varchar(20)) + '))
	) as SourceTable
	PIVOT 
	(
		MAX(Valor)
		for [Campo] in (' + @cols + ')
	) as PivotTable
	) as pt left join spopconocimientoMercancias cm on cm.id = pt.IdConocMerc  
		left join spopconocimientomercancias_proyectos cmp on cmp.IdConocMerc = cm.Id
	Group by NumSeriePieza, IdProyectoMaterial'
END

EXECUTE sp_executesql @SQL

END
GO
/****** Object:  StoredProcedure [dbo].[GetTotalesContenedoresDepot]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[GetTotalesContenedoresDepot]
	@IdFactura numeric(18,0)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


SELECT * from (
select con.Nombre,CONVERT(VARCHAR,cc.Tamanyo) + ' ' + cc.Tipo as TipoContenedor,CONVERT(Numeric(18,2),IsNull(SUM(lfe.ImporteCalculadoRentabilidad),0)) as Importe ,fe.idDivisa 
from spfalineafacturaemitida lfe
left join spfafacturaemitida fe on fe.id = lfe.idFacturaEmitida
left join spepexpedienteconceptos exc on exc.id = lfe.idreferencia
left join spedExpediente e on e.id = exc.IdExpediente
left join SpBmContenedor c on c.matricula = e.matricula
left join spbmcaracteristicascontenedor cc on cc.id = c.IdCaracteristica
left join spcoconcepto con on con.id = lfe.idConcepto
where cc.id is not null AND lfe.TipoReferencia = 'EC' and fe.id = @IdFactura 
group by CONVERT(VARCHAR,cc.Tamanyo) + ' ' + cc.Tipo, con.Nombre,fe.idDivisa 
UNION
select con.Nombre,CONVERT(VARCHAR,cc.Tamanyo) + ' ' + cc.Tipo as TipoContenedor,CONVERT(Numeric(18,2),IsNull(SUM(lfe.ImporteCalculadoRentabilidad),0)) as Importe ,fe.idDivisa 
from spfalineafacturaemitida lfe
left join spfafacturaemitida fe on fe.id = lfe.idFacturaEmitida
left join spepexpedienteconceptos exc on exc.id = lfe.idreferencia
left join spedpresupuestos pre on pre.Id = exc.idExpediente
left join SpBmContenedor c on c.matricula = pre.matricula
left join spbmcaracteristicascontenedor cc on cc.id = c.IdCaracteristica
left join spcoconcepto con on con.id = lfe.idConcepto
where cc.id is not null AND lfe.TipoReferencia = 'PRC' and fe.id = @IdFactura
group by CONVERT(VARCHAR,cc.Tamanyo) + ' ' + cc.Tipo, con.Nombre,fe.idDivisa
) AS TABLA 
order by TipoContenedor   

    
END
GO
/****** Object:  StoredProcedure [dbo].[GetUltimoConocimientoDespacho]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetUltimoConocimientoDespacho]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	select top 1 *
	from (
SELECT TOP 1 ds.*, arancel.Codigo 'CodigoArancel', doc.TipoDocAsociado as TipoDocAsociado,doc.SituacionAduanera as SituacionAduanera,doc.Mascara,doc.DescripcionDocumento as DescripcionDocAsociado FROM spopconocimientodespachos ds left join spbmarancel arancel on arancel.id=ds.idArancel left join spaddocsitaduanera doc on doc.id = ds.iddocumentoasociado inner join spopconocimientomercancias cm on cm.id = ds.idmercancia inner join spopconocimiento co on co.id = cm.idConocimiento left join spopbooking b on b.id = co.idbooking left join spopbooking b_sec on b_sec.id = co.idbooking  
WHERE b.IdExpedienteViaje = @IdViaje   and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) 

  UNION
SELECT TOP 1 ds.*, arancel.Codigo 'CodigoArancel', doc.TipoDocAsociado as TipoDocAsociado,doc.SituacionAduanera as SituacionAduanera,doc.Mascara, doc.DescripcionDocumento as DescripcionDocAsociado FROM spopconocimientodespachos ds left join spbmarancel arancel on arancel.id=ds.idArancel left join spaddocsitaduanera doc on doc.id = ds.iddocumentoasociado inner join spopconocimientomercancias cm on cm.id = ds.idmercancia inner join spopconocimiento co on co.id = cm.idConocimiento left join spopbooking b on b.id = co.idbooking left join spopbooking b_sec on b_sec.id = co.idbooking  
WHERE  b.IdExpedienteViajeSecundario = @IdViaje  and b.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) 
) as Tabla order by timestamp
 
  
        

      
END



GO
/****** Object:  StoredProcedure [dbo].[GetViaje]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetViaje]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  select v.*  from spexviaje v  
  where v.id = @IdViaje and v.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )


      
END

GO
/****** Object:  StoredProcedure [dbo].[GetViajeAereo]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetViajeAereo]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

select va.*, ent.nombre as Corresponsal, ag.Nombre as Agente, ca.CodigoAlf as CodigoCompania, ca.nombre as Compania ,
(Select sum (p.pesotasable) from spexpartida p inner join spexexpediente expe on expe.id = p.idExpediente where expe.idViaje = v.id) as PesoTasable, 
 (Select sum  (pa.Total) from spexpartidaawbl pa inner join spexpartida p on p.id = pa.idPartida inner join spexexpediente expe on expe.id = p.idExpediente 
 inner join spexawbl a on a.id = pa.idawbl 
 where expe.idviaje = v.id and a.tipo = 'M' ) as TotalIATA , (Select sum (oc.Importe) from spexotroscargosawbl oc inner join spexawbl aw on aw.id = oc.idAwbl 
  where aw.id in (select pa.idawbl from spexpartidaawbl pa inner join spexpartida p on p.id = pa.idPartida inner join spexexpediente expe on expe.id = p.idExpediente  
  where expe.idviaje = v.id) and oc.EntidadPago = 'C' and aw.tipo = 'M') as OtrosCargosCarrier, entTC.nombre as TerminalCarga  
from spexviajeaereo va  
inner join spexviaje v on v.id = va.idViaje  
left join spcoentidades ent on ent.id = va.idCorresponsal  
left join spbaagentecarga ag on ag.id = va.idAgente  
left join spbacompaniaaerea ca on ca.id = va.idCompania  
left join spcoentidades entTC on entTC.id = va.idTerminalCarga
where va.idviaje =@IdViaje and v.idOficina 
      in (
            select idoficina from spsiusuariosoficinas where idUsuario = @Usuario
      )


      
END

GO
/****** Object:  StoredProcedure [dbo].[GetViajeAereoVuelos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetViajeAereoVuelos]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


select vv.*, a.nombre as Aerop_Origen, a2.nombre Aerop_Destino, ca.nombre as Cia_Aerea, p1.id as IdOrigen, 
p2.id as idDestino, p1.nombre as PoblacionOrigen, p2.nombre as PoblacionDestino,ca.CodigoAlf as CodCia_Aerea,
a.CodigoIATA as CodigoIATAAerop_Origen, a2.CodigoIATA as CodigoIATAAerop_Destino, a.idPais as PaisOrigen, a2.idPais as PaisDestino
from spexvueloviaje vv 
inner join spexviajeaereo va on vv.idviajeaereo = va.id  
inner join spexviaje v on v.id = va.idViaje  
left join spbaaeropuertos a on vv.idaeropuertoorigen = a.id  
left join spbaaeropuertos a2 on vv.idaeropuertodestino = a2.id  
left join splopoblacion p1 on p1.id = a.idPoblacion  
left join splopoblacion p2 on p2.id = a2.idPoblacion  
left join spbacompaniaaerea ca on vv.idciaaerea = ca.id  
where (va.idviaje =@IdViaje and v.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario) )



      
END


GO
/****** Object:  StoredProcedure [dbo].[GetViajeDocumentos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetViajeDocumentos]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT 'CMR' as Documento, c.Id, '' AS Tipo, c.Usuario, c.FechaDocumento, c.observtransportista as observaciones, c.TimeStamp as 'Ult.Modif.'  FROM spexcmr c  INNER JOIN spexcmrpartida pc ON c.Id = pc.IdCMR  WHERE pc.IdPadre IN (SELECT e.Id FROM spexembarque e where e.idviaje =@IdViaje) and pc.tablapadre = 'E'  group by c.id,c.Usuario,c.FechaDocumento,c.ObservTransportista,c.Timestamp  
 
 UNION 
 
 SELECT 'CMR' as Documento, c.Id, '' AS Tipo, c.Usuario, c.FechaDocumento, c.observtransportista as observaciones, c.TimeStamp as 'Ult.Modif.'  FROM spexcmr c  INNER JOIN spexcmrpartida pc ON c.Id = pc.IdCMR  inner join spexpartida p on p.id = pc.idPadre and pc.tablapadre = 'P'  inner join spexexpediente expe on expe.id = p.idExpediente   WHERE expe.idViaje = @IdViaje  group by c.id,c.Usuario,c.FechaDocumento,c.ObservTransportista,c.Timestamp  
 
 UNION 
 
 SELECT 'Air WayBill' as Documento, a.Id, tipo AS Tipo, a.Usuario, a.FechaDocumento, a.informacioncontable as observaciones, a.TimeStamp as 'Ult.Modif.' 
 FROM spexawbl a   INNER JOIN spexexpediente e on e.id = a.idExpediente  
 WHERE e.idViaje = @IdViaje group by a.id,a.tipo,a.Usuario,a.FechaDocumento,a.informacionContable,a.Timestamp  
 
 UNION  
 
 SELECT 'BL' as Documento, b.Id, tipo AS Tipo, b.Usuario, b.FechaDocumento, b.Observaciones as observaciones, b.TimeStamp as 'Ult.Modif.' FROM spexmbl b   INNER JOIN spexpartidambl pb ON b.Id = pb.idmbl  inner join spexpartida p on p.id = pb.idPadre and pb.tablapadre = 'P'  inner join spexexpediente expe on expe.id = p.idExpediente   WHERE expe.idViaje = @IdViaje group by b.id,b.tipo,b.Usuario,b.FechaDocumento,b.Observaciones,b.Timestamp  
 
 UNION  
 
 SELECT 'BL' as Documento, b.Id, tipo AS Tipo, b.Usuario, b.FechaDocumento, b.Observaciones as observaciones, b.TimeStamp as 'Ult.Modif.' FROM spexmbl b   INNER JOIN spexpartidambl pb ON b.Id = pb.idmbl  inner join spexembarque emb on emb.id = pb.idPadre and pb.tablapadre = 'E'  inner join spexpartida p on p.id = emb.idPartida  inner join spexexpediente expe on expe.id = p.idExpediente   WHERE expe.idViaje = @IdViaje group by b.id,b.tipo,b.Usuario,b.FechaDocumento,b.Observaciones,b.Timestamp  
 
 UNION  
 
 SELECT 'OT' as Documento, ot.Id, ot.tipo AS Tipo, ot.Usuario, ot.FechaDocumento, ot.Observaciones as observaciones, ot.TimeStamp as 'Ult.Modif.' FROM spexordentransporte ot   inner join spexexpediente expe on expe.id = ot.idExpedienteTransito   WHERE expe.idViaje = @IdViaje group by ot.id,ot.tipo,ot.Usuario,ot.FechaDocumento,ot.Observaciones,ot.Timestamp 

   
 

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetViajeFicheros]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetViajeFicheros]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

select fv.* from spexficherosviajes fv inner join spexviaje v on v.id = fv.idPadre 
where idpadre =@IdViaje and v.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)

   
 

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetViajeMaritimo]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetViajeMaritimo]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 select vm.*,b.nombre as Buque, ent.nombre as Corresponsal, pobO.nombre as PoblacionOrigen, pobD.nombre as PoblacionDestino,  
 entCon.nombre as Consignatario, entcon.tf1 as TlfConsignatario, entNav.nombre as Naviera, dirEnt.Poblacion as PoblacionNaviera, pobN.nombre as NombrePoblacionNaviera,pB.Nombre as PaisBandera 
 from spexviajemaritimo vm  inner join spexviaje v on v.id = vm.idViaje  left join spbmbuque b on b.id = vm.idbuque  
 left join spcoentidades ent on ent.id = vm.idCorresponsal  left join splopoblacion pobo on pobo.id = vm.idOrigen  
 left join splopoblacion pobD on pobd.id = vm.idDestino  left join spcoentidades entCon on entCon.id = vm.idConsignatario 
  left join spcoentidades entNav on entNav.id = vm.idNaviera  
  left join spcodireccionesentidades dirEnt on dirEnt.idEntidad = entNav.id and dirEnt.PrincipalDocumentacion = 1 
  left join splopoblacion pobN on pobN.id = dirEnt.Poblacion
  left join splopais pB on pB.id = b.Pais
  where vm.idviaje =@IdViaje and v.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)
 
 

      
END

GO
/****** Object:  StoredProcedure [dbo].[GetViajeTerrestre]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[GetViajeTerrestre]
	@IdViaje numeric(18,0),
	@Usuario varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 select vt.*, ent.nombre as Corresponsal, pobO.nombre as PoblacionOrigen, pobD.nombre as PoblacionDestino, entT.nombre as Transportista  
 from spexviajeterrestre vt  inner join spexviaje v on v.id = vt.idViaje  left join spcoentidades ent on ent.id = vt.idCorresponsal  
 left join spcoentidades entT on entT.id = vt.idTransportista  left join splopoblacion pobo on pobo.id = vt.idOrigen  
 left join splopoblacion pobD on pobd.id = vt.idDestino  
 where vt.idviaje =@IdViaje and v.idOficina in (select idoficina from spsiusuariosoficinas where idUsuario = @Usuario)



      
END

GO
/****** Object:  StoredProcedure [dbo].[MarcarConceptoComoCerrado]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[MarcarConceptoComoCerrado]
	@idReferencia numeric(18,0),
	@TipoReferencia varchar (3)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @Tabla varchar(50);
	
	If (@TipoReferencia  = 'EXC') set @Tabla = 'spopexpedienteconceptos'
	Else If (@TipoReferencia  = 'BL') set @Tabla = ''
	Else If (@TipoReferencia  = 'EXT')set @Tabla = ''
	Else set @Tabla = 'spepexpedienteconceptos'	
	
	
   if (@Tabla <> '') 
   Begin
 		   declare @sqlstatement nvarchar(500);
           set @sqlstatement = 'declare ds cursor for select AFacturar, Facturado, snCobroEfectivo, snPagoEfectivo,TotalmenteDesglosado,idConcepto, TipoCierre, SnPrevisionDefinitiva,ImportePrevision, ImporteCoste, IdOficina from ' + @Tabla + ' lin ' + 
													' left join spcoconcepto con on con.id = lin.idConcepto ' +
													' where lin.id = ' +  CONVERT(varchar(20), @idReferencia)
           EXEC sp_executesql @sqlstatement
 
		open ds
		declare @AFacturar bit, @Facturado bit,@snCobroEfectivo bit,@snPagoEfectivo bit,@TotalmenteDesglosado bit,@idConcepto int, @TipoCierre varchar(3), @SnPrevisionDefinitiva bit, @ImportePrevision decimal, @ImporteCoste decimal, @IdOficinaConcepto varchar(6)
		fetch next from ds into @AFacturar, @Facturado ,@snCobroEfectivo ,@snPagoEfectivo ,@TotalmenteDesglosado ,@idConcepto,@TipoCierre, @SnPrevisionDefinitiva, @ImportePrevision, @ImporteCoste,@IdOficinaConcepto
		while (@@FETCH_STATUS = 0)
			begin
			declare @blnCerrar bit;
			declare @blnManual bit;	
			set @blnManual = 0			
			-- OR en Stored procedure es | 
			-- AND en Stored procedure es &	
			
			-- Control de valores booleanos nulos
			If @AFacturar is null begin set @AFacturar = 0 End
			If @Facturado is null begin set @Facturado = 0 End
			If @snCobroEfectivo is null begin set @snCobroEfectivo = 0 End
			If @snPagoEfectivo is null begin set @snPagoEfectivo = 0 End
			If @TotalmenteDesglosado is null begin set @TotalmenteDesglosado = 0 End
			If @SnPrevisionDefinitiva is null begin set @SnPrevisionDefinitiva = 0 End

				If (@TipoCierre  = 'RFA') set @blnCerrar = (@TotalmenteDesglosado | @snPagoEfectivo)
				Else If (@TipoCierre  = 'EFA') set @blnCerrar = (@Facturado | @snCobroEfectivo)
				Else If (@TipoCierre  = 'ERF') set @blnCerrar = ((@Facturado | @snCobroEfectivo) & (@TotalmenteDesglosado | @snPagoEfectivo))
				Else If (@TipoCierre = 'AUT') 
					begin
					-- Cálculo automático, definido según Transcoma
					declare @blnPendienteFacturar bit, @blnPendienteRecibir bit, @blnPendienteCerrar bit;
					declare @ImporteLimite decimal;

					-- Pendiente de Facturar
					set @blnPendienteFacturar = ~(@Facturado | @snCobroEfectivo) & @AFacturar;

					-- Recuperar el valor definido para PrevisionDefinitivaPorcentaje
					DECLARE @Config int 
					DECLARE @SQLconfig nvarchar(max) 
					set @Sqlconfig = N'select TOP 1 @Config = Valor from spsiconfiguracion where item = ''PrevisionDefinitivaPorcentaje'' and  (Oficina = ''' + @IdOficinaConcepto + ''' OR Oficina is null) order by Oficina desc' 
					exec sp_executesql @SQLconfig, N'@Config int out', @Config out
					
					set @ImporteLimite = @ImportePrevision * @Config/100;  

					set @blnPendienteRecibir = (CASE WHEN @ImportePrevision <> 0 THEN 1 ELSE 0 END) &
												~@snPagoEfectivo &
												(~@SnPrevisionDefinitiva) &
												(CASE WHEN Abs(@ImportePrevision - @ImporteCoste) > Abs(@ImporteLimite) THEN 1 ELSE 0 END);
					
					set @blnPendienteCerrar =  @blnPendienteFacturar | @blnPendienteRecibir;
					
					set @blnCerrar =  ~@blnPendienteCerrar  
/*
					print '-----';
					print '@AFacturar:' + convert(nvarchar(20),@AFacturar);
					print '@Facturado:' + convert(nvarchar(20),@Facturado);
					print '@snCobroEfectivo:' + convert(nvarchar(20),@snCobroEfectivo);
					print 'blnPendienteFacturar:' + convert(nvarchar(1),@blnPendienteFacturar );
					print '-----';
					print 'Config:' + convert(nvarchar(20),@Config);
					print 'ImporteLimite:' + convert(nvarchar(20),@ImporteLimite);
					print 'snPagoEfectivo:' + convert(nvarchar(20),@snPagoEfectivo);
					print 'SnPrevisionDefinitiva:' + convert(nvarchar(20),@SnPrevisionDefinitiva);
					print 'ImportePrevision:' + convert(nvarchar(20),@ImportePrevision);
					print 'ImporteCoste:' + convert(nvarchar(20),@ImporteCoste);
					print 'blnPendienteRecibir:' + convert(nvarchar(1),@blnPendienteRecibir );
					print '-----';
*/					
					end
				Else  set @blnManual = 1	

					
				if (@blnManual = 0)  -- Si el concepto esta configurado en Manual, no actualizaremos nada.
				begin
					declare @SQL nvarchar(100);
					set @SQL = 'Update ' + @Tabla + ' set SnCerrado = ' + CONVERT(varchar(20), @blnCerrar)  + ' Where id = '+ CONVERT(varchar(20), @idReferencia) +
				           ' AND SnCerrado <> ' + CONVERT(varchar(20), @blnCerrar) -- Para evitar recursividad en el trigger.						
				           
					EXEC sp_executesql @SQL	    		
				end	
    		fetch next from ds into @AFacturar, @Facturado ,@snCobroEfectivo ,@snPagoEfectivo ,@TotalmenteDesglosado ,@idConcepto,@TipoCierre, @SnPrevisionDefinitiva, @ImportePrevision, @ImporteCoste,@IdOficinaConcepto
			end
		close ds
		deallocate ds		
   END
        
END
GO
/****** Object:  StoredProcedure [dbo].[MarcarConceptoComoFacturadoSegunFacturas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[MarcarConceptoComoFacturadoSegunFacturas]
	-- Add the parameters for the stored procedure here
	@idReferencia numeric(18,0),@TipoReferencia varchar (3)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
        

DECLARE @sql nvarchar(2000);
Declare @Tabla varchar(2000);
Declare @Facturado varchar;
Declare @AFacturar varchar;
Declare @Facturable bit;
Declare @ImporteVenta numeric(18,6);

set @Facturable = 'true';

set @Facturado = ( SELECT [dbo].[ConceptoFacturado] ( @IDReferencia, @TipoReferencia ))

if @TipoReferencia = 'EXC'
begin
	set @Tabla = 'spopexpedienteconceptos'
	set @ImporteVenta = (select importeventa from  spopexpedienteconceptos   where id =   CONVERT(varchar(20), @IDReferencia))
	set @Facturable = (select snFacturable from spopexpedienteconceptos where id = CONVERT(varchar(20), @IDReferencia))
end
else
begin
	if @TipoReferencia = 'BL'
	begin
		set @Tabla = 'spopconocimientoconceptos'
		set @ImporteVenta = (select importeventa from  spopconocimientoconceptos   where id =   CONVERT(varchar(20), @IDReferencia))
		set @Facturable = (select snFacturable from spopconocimientoconceptos where id = CONVERT(varchar(20), @IDReferencia))
	end
	else
	begin
		if @TipoReferencia = 'EXT'
		begin
			set @Tabla = 'spexconceptoexpediente'
			set @ImporteVenta = (select importeventa from  spexconceptoexpediente   where id =   CONVERT(varchar(20), @IDReferencia))
		end
		else
		begin
			set @Tabla = 'spepexpedienteconceptos'
			set @ImporteVenta = (select importeventa from  spepexpedienteconceptos   where id =   CONVERT(varchar(20), @IDReferencia))
			set @Facturable = (select snFacturable from spepexpedienteconceptos where id = CONVERT(varchar(20), @IDReferencia))
		end
	end
end


if @Facturado = 1
begin
	set @sql =  'update ' + @Tabla + ' set Facturado = 1 , AFacturar = 0 where id = ' + CONVERT(varchar(20), @IDReferencia)
end
else
begin
--Miraremos si hay que marcarlo como a facturar si tiene importe de venta
if @ImporteVenta <> 0
begin	
	if @Facturable = 'false' 
	begin
		set @Afacturar = '0'
	end
	else
	begin
		set @AFacturar = '1'
	end
end
else
begin 
	set @AFacturar = '0'
end

set @sql = ' update ' + @Tabla + ' set Facturado = 0, AFacturar = ' + @AFacturar + ' where id = '  + CONVERT(varchar(20), @IDReferencia)

end

EXEC sp_executesql @sql


END
GO
/****** Object:  StoredProcedure [dbo].[RevisarConceptosMarcaCerrado]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[RevisarConceptosMarcaCerrado]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @MaxId as integer;
	DECLARE @I as integer;

	--  *****  spepexpedienteconceptos
	set @MaxId = (select MAX(id) from spepexpedienteconceptos)
	set @I = 1
	print 'Actualizando ' + convert(varchar(10),@MaxId) + ' registros de spepexpedienteconceptos'
	WHILE @I <= @MaxID
	   BEGIN
		   update spepexpedienteconceptos set sncerrado = 0 where SnCerrado = 0 and ID = @I;
		   set @I = @I + 1;
	   END;


	--  *****  spopexpedienteconceptos
	set @MaxId = (select MAX(id) from spopexpedienteconceptos)
	set @I = 1
	print 'Actualizando ' + convert(varchar(10),@MaxId) + ' registros de spopexpedienteconceptos'
	WHILE @I <= @MaxID
	   BEGIN
		   update spopexpedienteconceptos set sncerrado = 0 where SnCerrado = 0 and ID = @I;
		   set @I = @I + 1;
	   END;

END
GO
/****** Object:  StoredProcedure [dbo].[sp_cooperation_listar_items_search]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_cooperation_listar_items_search] (  
 @coditem VARCHAR(20) = NULL  
 ,@desitem VARCHAR(100) = NULL  
 ,@tipitem VARCHAR(100)  
 )  
AS  
IF (@tipitem = 'CLIENTE')  
BEGIN  
 ----select  cast(arm.id as varchar) as iditem,     
 ----  arm.nombre as desitem,     
 ----  cast(arm.id as varchar) as coditem   5  
 ----from Armadores arm    
 ----where (id > '0') and    
 ----  (@coditem is null or arm.id = @coditem) and     
 ----  (@desitem is null or upper(arm.id + ' ' + arm.nombre) like '%' + upper(@desitem) + '%')    
 --SELECT cast(e.id AS VARCHAR) AS iditem  
 -- ,e.nombre AS desitem  
 -- --------,cast(e.id AS VARCHAR) AS coditem  
 -- ,cast(e.CIF AS VARCHAR) AS coditem  
 --FROM spcoentidades e --where e.nombre like '%seal%'  
 --Left JOIN armadores a ON a.id = e.id  
 --WHERE 1 = 1  
 -- AND  
 -- --cif is not null and    
 -- (  
 --  @coditem IS NULL  
 --  OR e.id = @coditem  
 --  )  
 -- AND (  
 --  @desitem IS NULL  
 --  OR upper(e.id + ' ' + e.nombre) LIKE '%' + upper(@desitem) + '%'  
 --  )  
  
  SELECT cast(dq.codarm10 AS VARCHAR) AS iditem  
  ,dq.desarm10 AS desitem  
  --------,cast(e.id AS VARCHAR) AS coditem  
  ,cast(e.CIF AS VARCHAR) AS coditem  
 FROM [SP3TDA-DBSQL01].descarga.dbo.dqarmado10 dq   
 left join spcoentidades e on dq.codarm10=e.Id collate Modern_Spanish_CI_AS --where e.nombre like '%seal%'  
 --Left JOIN armadores a ON a.id = e.id  
 WHERE 1 = 1  
  AND  
  --cif is not null and    
  (  
   @coditem IS NULL  
   OR dq.codarm10 = @coditem  
   )  
  AND (  
   @desitem IS NULL  
   OR upper(dq.codarm10 + ' ' + dq.desarm10) LIKE '%' + upper(@desitem) + '%'  
   )  
   and dq.flgact10=1  
   and dq.flgfac10='S'  
  
  
     
END  
ELSE IF (@tipitem = 'BUQUE')  
BEGIN  
 SELECT cast(b.id AS VARCHAR) AS iditem  
  ,b.nombre AS desitem  
  ,cast(b.id AS VARCHAR) AS coditem  
 FROM Buques b  
 WHERE ID > '0'  
  AND (  
   @coditem IS NULL  
   OR b.id = @coditem  
   )  
  AND (  
   @desitem IS NULL  
   OR upper(b.id + ' ' + b.nombre) LIKE '%' + upper(@desitem) + '%'  
   )  
END  
ELSE IF (  
  @tipitem = 'PTOORIGEN'  
  OR @tipitem = 'PTODESTINO'  
  OR @tipitem = 'PTODESTINOFINAL'  
  )  
BEGIN  
 SELECT cast(id AS VARCHAR) AS iditem  
  ,nombre AS desitem  
  ,cast(id AS VARCHAR) AS coditem  
 FROM poblaciones2 --splopoblacion    
 WHERE ID > '0'  
  AND (  
   @coditem IS NULL  
   OR id = @coditem  
   )  
  AND (  
   @desitem IS NULL  
   OR upper(id + ' ' + nombre) LIKE '%' + upper(@desitem) + '%'  
   )  
END  
ELSE IF (  
  --@tipitem = 'AGENTECARGA'  
  --OR   
  @tipitem = 'CONSOLIDADOR'  
  OR @tipitem = 'AGENTEADUANA'  
  OR @tipitem = 'OPERADORLOGISTICO'  
  ) --(@tipitem = 'AGENTECARGA')    
BEGIN  
 SELECT TOP 1000 cast(ent.id AS VARCHAR) AS iditem  
  ,ent.nombre AS desitem  
  ,cast(ent.CIF AS VARCHAR) AS coditem  
 FROM spcoentidades ent   
 inner join [SP3TDA-DBSQL01].descarga.dbo.aaagente01 aa  
 on ent.CIF=aa.contribuy collate Modern_Spanish_CI_AS  
 WHERE ent.cancelado = 'false'  
  AND ent.cif IS NOT NULL  
  AND (  
   @coditem IS NULL  
   OR ent.id = @coditem  
   )  
  and (  
   @desitem IS NULL  
   OR upper(ent.cif + ' ' + ent.nombre) LIKE '%' + upper(@desitem) + '%'  
   )  
END  
ELSE IF (@tipitem = 'AGENTECARGA') --(@tipitem = 'AGENTECARGA')    
BEGIN  
 SELECT TOP 1000  cast(aa.contribuy AS VARCHAR) AS iditem  
  ,aa.nombre AS desitem  
  --,'' AS coditem  
  ,cast(aa.contribuy AS VARCHAR) AS coditem  
 FROM [SP3TDA-DBSQL01].descarga.dbo.aaclientesaa aa  
  left join spcoentidades ent   
 --inner join neptunia2.descarga.dbo.aaagente01 aa  
 on ent.CIF=aa.contribuy collate Modern_Spanish_CI_AS  
 WHERE --ent.cancelado = 'false'  
  --AND   
  aa.contribuy IS NOT NULL  
  AND (  
   @coditem IS NULL  
   OR aa.contribuy = @coditem  
   )  
  and (  
   @desitem IS NULL  
   OR upper(aa.contribuy + ' ' + aa.nombre) LIKE '%' + upper(@desitem) + '%'  
   )  
END  
ELSE IF (@tipitem = 'TRANSPORTE')  
BEGIN  
 SELECT cast(ent.Id AS VARCHAR) AS iditem  
  ,ent.Nombre AS desitem  
  ,cast(ent.Id AS VARCHAR) AS coditem  
 FROM spcoentidades AS ent  
 INNER JOIN dbo.spcoentidadeshomologacion AS homo ON ent.Id = homo.IdEntidad  
  AND homo.Id = (  
   SELECT MAX(Id) AS Expr1  
   FROM dbo.spcoentidadeshomologacion  
   WHERE (IdEntidad = ent.Id)  
   )  
 WHERE (ent.Transportista = 'true')  
  AND (ent.Cancelado = 'false')  
  AND (homo.EstadoHomologacion = 'L')  
  AND (  
   @coditem IS NULL  
   OR ent.Id = @coditem  
   )  
  AND (  
   @desitem IS NULL  
   OR upper(ent.Id + ' ' + ent.nombre) LIKE '%' + upper(@desitem) + '%'  
   )  
END  
ELSE IF (  
  @tipitem = 'TIPOEMBARQUEVIA'  
  OR @tipitem = 'TIPOMOVILIZADOA'  
  OR @tipitem = 'TIPOCONDICIONORIGEN'  
  OR @tipitem = 'TIPOLOCALASIGNADO'  
  )  
BEGIN  
 SELECT cast(dva.id AS VARCHAR) AS iditem  
  ,dva.descripcion AS desitem  
  ,cast(cva.clave AS VARCHAR) AS coditem  
 FROM spsidescripcionidiomasvaloresaplicacion dva  
 INNER JOIN spsiclavesvaloresaplicacion cva ON dva.idcva = cva.id  
 INNER JOIN spsivaloresaplicacion va ON cva.idva = va.id  
 WHERE dva.estado NOT LIKE 'B%'  
  AND cva.estado NOT LIKE 'B%'  
  AND va.tipova = @tipitem  
END  
  
  
  
--select * from spcoentidades where nombre like '%campo%'
GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_agente_carga]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_agente_carga]
(
	@cif varchar(20) = null,
	@descripcion varchar(100) = null
)
as
 
SELECT ent.id, 
		ent.nombre, 
		ent.cif, 
		replace(dir.direccion, char(10), ' | ') as direccion,
		dir.poblacion, 
		dir.cp, 
		ent.scaccode, 
		ent.codigoeori
FROM spcoentidades AS ent
LEFT OUTER JOIN dbo.spcodireccionesentidades dir ON ent.Id = dir.IdEntidad
WHERE (ent.cancelado = 'false' and  isnull(dir.cancelado, 0) = 0) and 
	  ent.cif is not null and (@cif is null or ent.cif = @cif) and 
	  @descripcion is null or upper(ent.cif + ' ' + ent.nombre) like '%' + upper(@descripcion) + '%'




GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_claves_valor_app]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_claves_valor_app] ( @tipova varchar(100) )
as
--@tipova
--UNIDADTEMPERATURA => UM Temperatura

SELECT	cva.clave, 
		descripcion, 
		orden
FROM spsidescripcionidiomasvaloresaplicacion dva 
INNER JOIN spsiclavesvaloresaplicacion cva on dva.idcva =cva.id   
INNER JOIN spsivaloresaplicacion va on cva.idva = va.id 
WHERE	dva.estado not like 'B%' 
		and cva.estado not like 'B%' 
		and idioma = 'ES'
		and UPPER(va.tipova) = @tipova 
order by orden

GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_items_search]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_items_search] (
	@coditem VARCHAR(20) = NULL
	,@desitem VARCHAR(100) = NULL
	,@tipitem VARCHAR(100)
	)
AS
IF (@tipitem = 'CLIENTE')
BEGIN
	----select  cast(arm.id as varchar) as iditem,   
	----  arm.nombre as desitem,   
	----  cast(arm.id as varchar) as coditem   
	----from Armadores arm  
	----where (id > '0') and  
	----  (@coditem is null or arm.id = @coditem) and   
	----  (@desitem is null or upper(arm.id + ' ' + arm.nombre) like '%' + upper(@desitem) + '%')  
	SELECT cast(e.id AS VARCHAR) AS iditem
		,e.nombre AS desitem
		,cast(e.id AS VARCHAR) AS coditem
	FROM spcoentidades e
	INNER JOIN armadores a ON a.id = e.id
	WHERE 1 = 1
		AND
		--cif is not null and  
		(
			@coditem IS NULL
			OR e.id = @coditem
			)
		AND (
			@desitem IS NULL
			OR upper(e.id + ' ' + e.nombre) LIKE '%' + upper(@desitem) + '%'
			)
END
ELSE IF (@tipitem = 'BUQUE')
BEGIN
	SELECT cast(b.id AS VARCHAR) AS iditem
		,b.nombre AS desitem
		,cast(b.id AS VARCHAR) AS coditem
	FROM Buques b
	WHERE ID > '0'
		AND (
			@coditem IS NULL
			OR b.id = @coditem
			)
		AND (
			@desitem IS NULL
			OR upper(b.id + ' ' + b.nombre) LIKE '%' + upper(@desitem) + '%'
			)
END
ELSE IF (
		@tipitem = 'PTOORIGEN'
		OR @tipitem = 'PTODESTINO'
		OR @tipitem = 'PTODESTINOFINAL'
		)
BEGIN
	SELECT cast(id AS VARCHAR) AS iditem
		,nombre AS desitem
		,cast(id AS VARCHAR) AS coditem
	FROM poblaciones2 --splopoblacion  
	WHERE ID > '0'
		AND (
			@coditem IS NULL
			OR id = @coditem
			)
		AND (
			@desitem IS NULL
			OR upper(id + ' ' + nombre) LIKE '%' + upper(@desitem) + '%'
			)
END
ELSE IF (
		@tipitem = 'AGENTECARGA'
		OR @tipitem = 'CONSOLIDADOR'
		OR @tipitem = 'AGENTEADUANA'
		OR @tipitem = 'OPERADORLOGISTICO'
		) --(@tipitem = 'AGENTECARGA')  
BEGIN
	SELECT TOP 1000 cast(ent.id AS VARCHAR) AS iditem
		,ent.nombre AS desitem
		,cast(ent.id AS VARCHAR) AS coditem
	FROM spcoentidades ent
	WHERE ent.cancelado = 'false'
		AND ent.cif IS NOT NULL
		AND (
			@coditem IS NULL
			OR ent.id = @coditem
			)
		AND (
			@desitem IS NULL
			OR upper(ent.cif + ' ' + ent.nombre) LIKE '%' + upper(@desitem) + '%'
			)
END
ELSE IF (@tipitem = 'TRANSPORTE')
BEGIN
	SELECT cast(ent.Id AS VARCHAR) AS iditem
		,ent.Nombre AS desitem
		,cast(ent.Id AS VARCHAR) AS coditem
	FROM spcoentidades AS ent
	INNER JOIN dbo.spcoentidadeshomologacion AS homo ON ent.Id = homo.IdEntidad
		AND homo.Id = (
			SELECT MAX(Id) AS Expr1
			FROM dbo.spcoentidadeshomologacion
			WHERE (IdEntidad = ent.Id)
			)
	WHERE (ent.Transportista = 'true')
		AND (ent.Cancelado = 'false')
		AND (homo.EstadoHomologacion = 'L')
		AND (
			@coditem IS NULL
			OR ent.Id = @coditem
			)
		AND (
			@desitem IS NULL
			OR upper(ent.Id + ' ' + ent.nombre) LIKE '%' + upper(@desitem) + '%'
			)
END
ELSE IF (
		@tipitem = 'TIPOEMBARQUEVIA'
		OR @tipitem = 'TIPOMOVILIZADOA'
		OR @tipitem = 'TIPOCONDICIONORIGEN'
		OR @tipitem = 'TIPOLOCALASIGNADO'
		)
BEGIN
	SELECT cast(dva.id AS VARCHAR) AS iditem
		,dva.descripcion AS desitem
		,cast(cva.clave AS VARCHAR) AS coditem
	FROM spsidescripcionidiomasvaloresaplicacion dva
	INNER JOIN spsiclavesvaloresaplicacion cva ON dva.idcva = cva.id
	INNER JOIN spsivaloresaplicacion va ON cva.idva = va.id
	WHERE dva.estado NOT LIKE 'B%'
		AND cva.estado NOT LIKE 'B%'
		AND va.tipova = @tipitem
END

GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_oficina]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_oficina]
as
SET NOCOUNT ON;
	SELECT	o.Id as IdOficina,
			o.Descripcion as DescripcionOficina,
			e.Id as IdEmpresa,
			o.Direccion,
			o.Poblacion,
			o.Provincia
	FROM spsioficina o 
	inner join spsiempresa e on e.id = o.empresa  
	ORDER BY IdOficina DESC
SET NOCOUNT OFF;



GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_oficina_almacenes]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_oficina_almacenes]
(
	@id_oficina char(6) = null
)
as
SET NOCOUNT ON;
 SELECT alm.id as idalmacen,
		alm.Codigo as codigoalmacen,
		alm.Nombre as nombrealmacen,
		alm.direccion as direccionalmacen, 
		alm.tipoalmacen as tipoalmacen,
		alm.idoficina,
		ofi.Descripcion as DescripcionOficina,
		emp.Nombre as NombreEmpresa
 FROM spalalmacenes alm
 inner join  spsioficina ofi on alm.idOficina = ofi.Id 
 inner join  spsiempresa emp on ofi.empresa = emp.Id   
 Where TipoAlmacen = 'D' and (alm.idOficina = @id_oficina or @id_oficina is null)
 ORDER BY IdOficina DESC
SET NOCOUNT OFF;



GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_opelog_cons_agentadua]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_opelog_cons_agentadua]
(
	@cif varchar(20) = null,
	@descripcion varchar(100) = null
)
as
 
select  e.cif, e.nombre, count(1) as cantidad
from entidades e
inner join spcoentidadesoficinas entofi on e.id = entofi.identidad and entofi.idOficina in ('NEPCLL','NEPPAI')
where e.cif is not null and (@cif is null or e.cif = @cif) and 
	  @descripcion is null or upper(e.cif + ' ' + e.nombre) like '%' + upper(@descripcion) + '%'
group by e.cif, e.nombre 


GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_productos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_productos]
as

select		 id	 = P2.Clave
			,descripcion = P1.descripcion
from		 spsidescripcionidiomasvaloresaplicacion as P1
inner join	 spsiclavesvaloresaplicacion as P2
		on	 P1.idcva = P2.id
inner join	(
				select	Id 
				from	spsivaloresaplicacion
				where	TipoVA = 'PRODUCTOSDEPOT'
			) as P3
		on	 P2.idVA = P3.id
where		 P1.idioma ='ES'

	--select id, descripcion 
	--from spsidescripcionidiomasvaloresaplicacion
	--where idioma ='ES'
	--and idcva in (SELECT Id FROM spsiclavesvaloresaplicacion
	--where idVA IN (select Id from spsivaloresaplicacion
	--where TipoVA = 'PRODUCTOSDEPOT'))





GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_productos_cooperation]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_productos_cooperation]  
@desitem VARCHAR(100) = NULL  
as  
  
select   id  = P2.Clave  
   ,descripcion = P1.descripcion  
from   spsidescripcionidiomasvaloresaplicacion as P1  
inner join  spsiclavesvaloresaplicacion as P2  
  on  P1.idcva = P2.id  
inner join (  
    select Id   
    from spsivaloresaplicacion  
    where TipoVA = 'PRODUCTOSDEPOT'  
   ) as P3  
  on  P2.idVA = P3.id  
where   P1.idioma ='ES' AND (  
   @desitem IS NULL  
   OR upper(descripcion) LIKE '%' + upper(@desitem) + '%'  
   )  
GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_subproductos]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_subproductos] 
(
	@IdProducto int
)	
as

select		 Id = P2.Clave
			,descripcion = P1.descripcion
			--,Producto = P2.ClaveJerarquica
from		 spsidescripcionidiomasvaloresaplicacion as P1
inner join	 spsiclavesvaloresaplicacion as P2
		on	 P1.idcva = P2.id
inner join	(
				select	Id 
				from	spsivaloresaplicacion
				where	TipoVA = 'SUBPRODUCTOSDEPOT'
			) as P3
		on	 P2.idVA = P3.id
where		 1 =1 
AND			 P1.idioma ='ES'
AND			 P2.ClaveJerarquica = @IdProducto
	--select id, descripcion
	--from spsidescripcionidiomasvaloresaplicacion
	--where idioma ='ES'
	--and idcva in 
	--(
	--	SELECT Id FROM spsiclavesvaloresaplicacion
	--	where ClaveJerarquica = @IdProducto  --- ID del subproducto
	--		  and idVA IN 
	--		  (
	--			select Id from spsivaloresaplicacion
	--			where TipoVA = 'SUBPRODUCTOSDEPOT'
	--			)
	--)



GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_tamanyo_contenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_tamanyo_contenedores]
as
	SELECT Tamanyo, count(1) as Cantidad
	FROM spbmcaracteristicascontenedor 
	GROUP BY Tamanyo
	ORDER BY Tamanyo ASC



GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_tipo_contenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_tipo_contenedores]
as

 select tipo, count(1) as cantidad 
 from spbmcaracteristicascontenedor 
 group by tipo
 order by tipo asc



GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_tipo_reserva]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_tipo_reserva]
as
  SELECT	cva.clave, 
		dva.descripcion,
		dva.estado,
		va.id as idva, 
		va.tipova, 
		cva.clavejerarquica, 
		cva.orden
FROM spsidescripcionidiomasvaloresaplicacion dva 
       inner join spsiclavesvaloresaplicacion cva on dva.idcva =cva.id   
       inner join spsivaloresaplicacion va on cva.idva = va.id 
WHERE dva.estado not like 'B%' and cva.estado not like 'B%'
       and va.tipova = 'TIPORESERVADEPOT'



GO
/****** Object:  StoredProcedure [dbo].[sp_nol_listar_transportistas_search]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_listar_transportistas_search]
	(
		@coditem	varchar(20)  = null,
		@desitem	varchar(100) = null,
		@tipitem	varchar(100) 
	)

	as
	begin

    SELECT 
		cast(c.Id as varchar) as Id
	  , ISNULL(ent.Nombre, c.Empresa) AS EmpresaTransporte
	  , c.Conductor
	  , isnull(c.Camion,'') as Camion
	  , cast(c.NIFConductor  as varchar) as NIFConductor
	  , cast(ent.CIF as varchar) as CIF 
	  
	FROM dbo.spedconductores AS c
		   LEFT OUTER JOIN spcoentidades AS ent ON ent.Id = c.IdEmpresaTransporte		
	WHERE
		    (@coditem is null or c.Id = @coditem) 
		AND (@desitem is null or upper(cast(c.Id as varchar) + ' ' + c.Conductor) like '%' + upper(@desitem) + '%')
	end


GO
/****** Object:  StoredProcedure [dbo].[sp_nol_obtener_valores_Adicionales_cooperations]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_nol_obtener_valores_Adicionales_cooperations] @desnav08 VARCHAR(100)    
 ,@viaje VARCHAR(50)    
 ,@rucEmbarcador VARCHAR(11)    
 ,@rucAgencia VARCHAR(11)    
 ,@rucConsolidador VARCHAR(11)    
 ,@rucOperadorLogistico VARCHAR(11)    
 ,@sSucursal VARCHAR(1)    
 ,@sResultado VARCHAR(250) OUTPUT    
AS    
BEGIN    
 DECLARE @cadena VARCHAR(1000)    
  ,@caracter VARCHAR(1)    
  ,@FechaETATotal VARCHAR(35)    
  ,@DatoViaje VARCHAR(10)    
  ,@FechaETA VARCHAR(8)    
  ,@HoraETA VARCHAR(9)    
  ,@idEmbarcador VARCHAR(15)    
  ,@idAgencia VARCHAR(15)    
  ,@idConsolidador VARCHAR(15)    
  ,@idOperadorLogistico VARCHAR(15)    
  ,@codnav08 VARCHAR(4)    
    
 /*****************************************************/    
 SET @caracter = '/'    
 SET @cadena = LTRIM(RTRIM(@viaje))    
    
 DECLARE @pos INT    
  ,@valor VARCHAR(10)    
    
 SET @cadena = @cadena + @caracter    
 SET @pos = charindex(@caracter, @cadena)    
 SET @DatoViaje = substring(@cadena, 1, @pos - 1)    
 SET @DatoViaje = LTRIM(RTRIM(@DatoViaje))    
    
 /*****************************************************/    
 IF @sSucursal = '1'    
 BEGIN    
  SELECT @codnav08 = codnav08    
  FROM [SP3TDA-DBSQL01].terminal.dbo.dqnavier08    
  WHERE desnav08 = LTRIM(RTRIM(@desnav08))    
    
  SELECT @FechaETA = CONVERT(VARCHAR(8), feclle11, 112)    
   ,@HoraETA = REPLACE(CONVERT(VARCHAR(9), feclle11, 114), ':', '')    
  FROM [SP3TDA-DBSQL01].terminal.dbo.ddcabman11    
  WHERE codnav08 = @codnav08    
   AND numvia11 = @DatoViaje    
 END    
 --ELSE    
 --BEGIN    
 -- SELECT @codnav08 = codnav08    
 -- FROM neptuniap1.terminal.dbo.dqnavier08    
 -- WHERE desnav08 = LTRIM(RTRIM(@desnav08))    
    
 -- SELECT @FechaETA = CONVERT(VARCHAR(8), feclle11, 112)    
 --  ,@HoraETA = REPLACE(CONVERT(VARCHAR(9), feclle11, 114), ':', '')    
 -- FROM neptuniap1.terminal.dbo.ddcabman11    
 -- WHERE codnav08 = @codnav08    
 --  AND numvia11 = @DatoViaje    
 --END    
    
 SELECT @idEmbarcador = id    
 FROM spcoentidades WITH (NOLOCK)    
 WHERE CIF = @rucEmbarcador    
 and Cancelado = '0'    
    
 SELECT TOP 1 @idEmbarcador = id    
 FROM spcoentidades WITH (NOLOCK)    
 WHERE CIF = @rucEmbarcador    
 and Cancelado = '0'    
 ORDER BY id ASC    
    
 SELECT TOP 1 @idAgencia = id    
 FROM spcoentidades WITH (NOLOCK)    
 WHERE CIF = @rucAgencia    
 and Cancelado = '0'    
 ORDER BY id ASC    
    
 SELECT TOP 1 @idConsolidador = id    
 FROM spcoentidades WITH (NOLOCK)    
 WHERE CIF = @rucConsolidador    
 and Cancelado = '0'    
 ORDER BY id ASC    
    
 SELECT TOP 1 @idOperadorLogistico = id    
 FROM spcoentidades WITH (NOLOCK)    
 WHERE CIF = @rucOperadorLogistico    
 and Cancelado = '0'    
 ORDER BY id ASC    
    
 IF ISNULL(@idAgencia, '') = ''    
 BEGIN    
  SET @idAgencia = '648'    
 END    
 IF ISNULL(@rucAgencia, '') = '20101409199'    
 BEGIN    
  SET @idAgencia = '1868'    
 END    
    
 PRINT @DatoViaje    
    
 SET @sResultado = ltrim(rtrim(@DatoViaje)) + '|' + @FechaETA + '|' + @HoraETA + '|' + ISNULL(@idEmbarcador, '') + '|' + ISNULL(@idAgencia, '') + '|' + ISNULL(@idConsolidador, '') + '|' + ISNULL(@idOperadorLogistico, '') + '|' + ISNULL(@codnav08, '')    
END 
GO
/****** Object:  StoredProcedure [dbo].[testAdoNet]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[testAdoNet]
AS
BEGIN
	SET NOCOUNT ON;
	SELECT id, referenciacliente, iddestino from sptralbaran
END
GO
/****** Object:  StoredProcedure [dbo].[UpdateExtracontable]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[UpdateExtracontable]
	-- Add the parameters for the stored procedure here
	@TipoReferencia varchar(30) ,
	@idReferencia numeric(18,0),
	@Usuario varchar(30) 	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

			INSERT INTO spinupdateextracontables(TipoReferencia, idReferencia, Usuario,[Timestamp], snLeido,snManual)
			VALUES ( @TipoReferencia,  @idReferencia, 
					 @Usuario, 	GETDATE(), 'false' , 'false')
	

END



GO
/****** Object:  StoredProcedure [dbo].[usp_Cooperation_Consulta_Movimientos_Entrada_Salida]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_Cooperation_Consulta_Movimientos_Entrada_Salida]  
@idTipoMovimiento as char(4),  
@idoficina as char(6),  
@idbuque as char(4),  
@viaje as varchar(10),  
@idcliente as char(3),  
@matriculaContenedor char(11),  
@nroeir int output,  
@fechaeir smalldatetime output   
as  
select @nroeir=id, @fechaeir=dbo.ConvertFechaHora_new(FechaMovimiento, HoraMovimiento)   
from spedMovimientoContenedor   
where idTipoMovimiento = @idTipoMovimiento and idoficina=@idoficina and   
idbuque=@idbuque and viaje=@viaje and   
idcliente=@idcliente and   
matriculaContenedor=@matriculaContenedor  
GO
/****** Object:  StoredProcedure [dbo].[usp_NOL_EliminarArchivosReserva]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_NOL_EliminarArchivosReserva]
(
	 @IdReserva		INT
	,@NomFichero	VARCHAR(400)
)
AS
BEGIN
SET NOCOUNT ON;
--------------||
	DECLARE @viIdReserva	INT;
	DECLARE @viNomFichero	VARCHAR(400);
	DECLARE @viMensaje		VARCHAR(MAX);
	DECLARE @viIdDirectorio INT;
	---|
	SET @viIdReserva	= @IdReserva;
	SET @viNomFichero	= @NomFichero;
	SET @viIdDirectorio = 99;
	---|
	SELECT @viIdDirectorio = id FROM spedreservasdirectorios WHERE idReserva = @viIdReserva;
	---|
	IF (@viIdDirectorio = 99)
		BEGIN
			SET @viMensaje = 'KO|El Directorio No Existe Imposible Eliminar.';
			goto Mensaje;
		END;
	---|
	BEGIN TRY  
		---|
		DELETE FROM spedreservasficherosadjuntos WHERE IdPadre = @viIdReserva AND Fichero = @viNomFichero;
		---|
		SET @viMensaje = 'OK|Archivo Eliminado Satisfactoriamente.';
		---|
	END TRY  
	BEGIN CATCH  
		SET @viMensaje = 'KO|Error SQL Imposible Eliminar.';
	END CATCH  
	---|
	Mensaje:
	SELECT @viMensaje AS Result;
--------------||
SET NOCOUNT OFF;
END



GO
/****** Object:  StoredProcedure [dbo].[usp_NOL_EliminarEspacioContenedor]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--| EXEC usp_NOL_EliminarEspacioContenedor 168377
ALTER PROCEDURE [dbo].[usp_NOL_EliminarEspacioContenedor]
(
	 @IdReservaContenedor	INT
)
AS
BEGIN
SET NOCOUNT ON;
--------------||
	--|
	DECLARE @viIdReservaContenedor	INT;
	DECLARE @viEstado				VARCHAR(10);
	DECLARE @viResultado			VARCHAR(1000);
	--|
	SET @viIdReservaContenedor = @IdReservaContenedor;
	SET @viResultado = 'OK|Registro Eliminado Satisfactoriamente.';
	--|
	SELECT @viEstado = Estado FROM spedreservasContenedor WITH(NOLOCK) WHERE Id = @viIdReservaContenedor;
	--|
	IF (@viEstado = 'CA') 
		BEGIN
			SET @viResultado = 'KO|No se puede Eliminar, Registro se encuentra Cancelada (Pagada)';
			goto Resultado;
		END;
	IF (@viEstado = 'RE') 
		BEGIN
			SET @viResultado = 'KO|No se puede Eliminar, Registro se encuentra Atendido';
			goto Resultado;
		END;
	IF (@viEstado = 'AS') 
		BEGIN
			SET @viResultado = 'KO|No se puede Eliminar, Registro se encuentra Asignado';
			goto Resultado;
		END;
	IF (@viEstado = 'EN') 
		BEGIN
			SET @viResultado = 'KO|No se puede Eliminar, Registro se encuentra En Curso';
			goto Resultado;
		END;
	--|
	BEGIN TRY  
		---|
		DELETE FROM spedReservasContenedorTipoCarga WHERE idReservaContenedor = @viIdReservaContenedor;
		DELETE FROM spedreservasContenedor WHERE Id  = @viIdReservaContenedor;
		---|
	END TRY  
	BEGIN CATCH  
		SELECT 'KO|No se puede Eliminar, Error SQL al Eliminar el Registro ' AS Result;
		RETURN;
	END CATCH  
		Resultado:
		SELECT @viResultado AS Result;
--------------||
SET NOCOUNT OFF;
END



GO
/****** Object:  StoredProcedure [dbo].[usp_NOL_ListaContenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--| EXEC usp_NOL_ListaContenedores 'MOL',20,'ST','NEPCLL','3'

ALTER PROCEDURE [dbo].[usp_NOL_ListaContenedores]
(
	 @Linea		VARCHAR(10)
	,@Size		INT
	,@Tipo		VARCHAR(10)
	,@Oficina	VARCHAR(10)
	,@Depot		VARCHAR(10)
)
AS
BEGIN
SET NOCOUNT ON;
--------------||
	----|
	/*
	@Depot
	3 -- callao vacios
	4 -- vacios villegas
	14 -- Paita
	*/
	 /*
	 @Oficina
	 NEPCLL
	NEPPAI
	*/
	DECLARE @viLinea	VARCHAR(10);
	DECLARE @viSize		int;
	DECLARE @viTipo		VARCHAR(10);
	DECLARE @viOficina	VARCHAR(10);
	DECLARE @viDepot	VARCHAR(10);
	----|
	SET @viLinea = RTRIM(LTRIM(@Linea));
	SET @viSize = @Size;
	SET @viTipo = RTRIM(LTRIM(@Tipo));
	SET @viOficina = RTRIM(LTRIM(@Oficina));
	SET @viDepot = RTRIM(LTRIM(@Depot));
	----|
	SELECT COUNT(1)
	 FROM spedmovimientocontenedor UM
	 left join spbmtipomovimiento t on UM.idTipoMovimiento =  t.tipo 
	 LEFT JOIN spalubicaciones ubi ON ubi.id = UM.IdUbicacionDestino 
	 LEFT JOIN spbmcontenedor cont ON cont.matricula = UM.matriculacontenedor
	 LEFT JOIN spbmcaracteristicascontenedor cc ON cc.id = cont.idCaracteristica 
	 OUTER apply  
	 (SELECT spedmovimientocontenedor.FechaMovimiento, spedmovimientocontenedor.HoraMovimiento, spedmovimientocontenedor.tipoentrada
	 FROM spedmovimientocontenedor
	 WHERE spedmovimientocontenedor.MatriculaContenedor = UM.MatriculaContenedor 
	 AND spedmovimientocontenedor.IdExpediente = UM.IdExpediente 
	 AND spedmovimientocontenedor.NumContadorCiclo = UM.NumContadorCiclo 
	 AND spedmovimientocontenedor.NumContadorMovimiento = 1) AS  PM 
	OUTER apply        (SELECT     TOP 1 spedmovimientocontenedor.Notas 
		   FROM spedmovimientocontenedor 
		   WHERE      spedmovimientocontenedor.MatriculaContenedor = UM.MatriculaContenedor AND 
					  spedMovimientoContenedor.IdExpediente = UM.IdExpediente AND 
					  spedmovimientocontenedor.NumContadorCiclo = UM.NumContadorCiclo AND spedmovimientocontenedor.SnInspeccionado = 1 AND 
					  ISNULL(spedmovimientocontenedor.Notas,'') <>'') OBS_CJ  OUTER apply     (SELECT     TOP 1 spedmovimientocontenedor.Notas
		 FROM spedmovimientocontenedor 
		 WHERE      spedmovimientocontenedor.MatriculaContenedor = UM.MatriculaContenedor AND 
					spedMovimientoContenedor.IdExpediente = UM.IdExpediente AND 
					spedmovimientocontenedor.NumContadorCiclo = UM.NumContadorCiclo AND spedmovimientocontenedor.SnInspeccionadoMaquina = 1 AND 
					ISNULL(spedmovimientocontenedor.Notas,'') <>'') OBS_MQ  OUTER apply
		 (SELECT     TOP 1 spedPresupuestos.FechaFinReparacion 
		   FROM     spedPresupuestos LEFT JOIN spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.ID 
									 LEFT JOIN spedReparaciones ON spedPresupuestosReparaciones.IdReparacion = spedReparaciones.Id 
		  WHERE     spedPresupuestos.EstadoPresupuesto = 'OK' AND spedpresupuestos.matricula = UM.matriculaContenedor AND 
					UM.IdExpediente = spEdPresupuestos.idExpedienteContenedor 
		  AND ISNULL(spedReparaciones.tiporeparacion,'') IN ('LIN','LIE') 
					ORDER BY spedPresupuestos.FechaFinReparacion DESC) UPL 
	 OUTER apply 
		 (SELECT     TOP 1 spedPresupuestos.FechaAceptacion 
		   FROM      spedPresupuestos LEFT JOIN spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.Id 
									  LEFT JOIN spedReparaciones ON spedPresupuestosReparaciones.IdReparacion = spedReparaciones.Id AND isnull(spedReparaciones.TipoPresupuesto,'') = 'CJ'
		   WHERE     ISNULL(spedPresupuestos.FechaAceptacion,'') <> '' AND spedpresupuestos.matricula = UM.matriculaContenedor AND 
					 UM.IdExpediente = spedPresupuestos.idExpedienteContenedor AND spedPresupuestos.EstadoPresupuesto IN ('AC','IN','OK','EC')  AND ISNULL(spedReparaciones.tiporeparacion,'') ='REP'
		   ORDER BY spedPresupuestos.FechaAceptacion DESC) UPA_CJ 
	 OUTER APPLY (SELECT vALOR FROM spepexpedientechecklistvariables, 
		(	
	 SELECT MAX(spepexpedientechecklIST.iD) AS ID from spedPresupuestos
	 LEFT JOIN spedpresupuestosreparaciones on spedpresupuestosreparaciones.idPresupuesto = spedpresupuestos.id
	 LEFT JOIN spepexpedientechecklist ON spepexpedientechecklIST.IDEXPEDIENTE = spedpresupuestos.ID
	 WHERE spedpresupuestos.idExpedienteContenedor=UM.Idexpediente
	 and spedpresupuestos.tipopresupuesto ='CJ'
	 and ISNULL(spedpresupuestosreparaciones.TipoReparacion,'') not in ('LIN''LIE')
	  AND spepexpedientechecklist.descripcion like '%USDA%') TEMPO
	  WHERE TEMPO.iD = spepexpedientechecklistvariables.idexpedientechecklist 
	 AND TIPOVALOR ='BO'	) USDA  OUTER apply 
		 (SELECT     TOP 1 spedPresupuestos.FechaAceptacion 
		   FROM          spedPresupuestos LEFT JOIN spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.ID 
										  LEFT JOIN spedReparaciones ON spedPresupuestosReparaciones.IdReparacion = spedReparaciones.ID AND isnull(spedReparaciones.TipoPresupuesto,'') ='MQ' 
		  WHERE      ISNULL(spedPresupuestos.FechaAceptacion,'') <> '' AND spedpresupuestos.matricula = UM.matriculaContenedor AND 
					  UM.IdExpediente = spedPresupuestos.idExpedienteContenedor AND spedPresupuestos.EstadoPresupuesto IN ('AC','IN','OK','EC') AND ISNULL(spedReparaciones.tiporeparacion,'') ='REP'
		   ORDER BY spedPresupuestos.FechaAceptacion DESC) UPA_MQ 
	 OUTER apply 
		 (SELECT     sum(spedpresupuestosreparaciones.total) AS TOTAL 
		   FROM          spedPresupuestos LEFT JOIN 
								  spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.ID 
		   WHERE      spedPresupuestos.EstadoPresupuesto <> 'RE' AND isnull(SPEDPRESUPUESTOSREPARACIONES.AccountOF,'') = 'O' AND 
					  spedpresupuestos.matricula = UM.matriculaContenedor And UM.IdExpediente = spedPresupuestos.idExpedienteContenedor 
		   GROUP BY spedpresupuestos.Matricula) TOTAL_OWNER 
	 OUTER Apply 
		 (SELECT     sum(spedpresupuestosreparaciones.total) AS TOTAL
		   FROM     spedPresupuestos LEFT JOIN
					spedPresupuestosReparaciones ON spedPresupuestosReparaciones.IdPresupuesto = spedPresupuestos.ID
		   WHERE    spedPresupuestos.EstadoPresupuesto <> 'RE' AND isnull(spedPresupuestosReparaciones.AccountOF,'') <> 'O' AND 
	  spedpresupuestos.matricula = UM.matriculaContenedor And UM.IdExpediente = spedPresupuestos.idExpedienteContenedor 
		   GROUP BY spedpresupuestos.Matricula) TOTAL_CLIENTE
	 WHERE t.Actuacion <> 'CC' and UM.id in (select max(c2.id) from spedmovimientocontenedor c2
										   where c2.matriculacontenedor = UM.matriculacontenedor 
										   and c2.IdOficina = UM.IdOficina 
										   and c2.IdAlmacen = UM.IdAlmacen)
	 and idEntidad = @viLinea
	 and cc.Tamanyo = @viSize
	 and cc.Tipo = @viTipo
	 And um.idOficina = @viOficina 
	 AND um.IdAlmacen = @viDepot
	 And CONT.Activo = 1 
	 and um.matriculacontenedor not in (select matricula from spedreservascontenedor, spedreservas 
	 where spedreservascontenedor.IdReserva = spedreservas.id 
	 and um.idoficina = spedreservas.idoficina
	 and um.idAlmacen = spedreservas.idalmacen 
	 and um.idcliente = spedreservas.idcliente and isnull(spedreservas.estado,'') ='PE' AND TipOreserva IN ('EMB','EPA','MOV') and ISNULL(spedreservascontenedor.matricula,'') <>'')

 --------------||
 SET NOCOUNT OFF;
 END


GO
/****** Object:  StoredProcedure [dbo].[usp_NOL_ListarTipoTecnologia_cooperations]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_NOL_ListarTipoTecnologia_cooperations]  
as  
begin  
 select DATA.*  
 from (  
   select clave = '', descripcion = ''  
   union  
   select  cva.clave,dva.descripcion  
   from spsidescripcionidiomasvaloresaplicacion dva   
   inner join spsiclavesvaloresaplicacion cva on dva.idcva =cva.id     
   inner join spsivaloresaplicacion va on cva.idva = va.id   
   where dva.estado not like 'B%' and cva.estado not like 'B%'  
   and tipova = 'TECNOLOGIACONTROLATMOSFERA'  
  ) DATA  
 order by DATA.clave asc  
end  
  
GO
/****** Object:  StoredProcedure [dbo].[usp_NOL_ObtenerTipoOtraLineas]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--exec usp_NOL_ObtenerTipoOtraLineas 'MSC','NEPCLL'  
ALTER PROCEDURE [dbo].[usp_NOL_ObtenerTipoOtraLineas] (
	@IdLinea VARCHAR(3)
	,@IdSucursal VARCHAR(6)
	)
AS
BEGIN
	SET NOCOUNT ON;

	--------------||     
	BEGIN TRY
		--SELECT 'OK' AS Result
		--,ltrim(rtrim(@IdLinea)) GroupLine
		
		IF @IdSucursal = 'NEPCLL'  
		BEGIN  
			 SELECT Result = CASE   
			 WHEN flgnep10 = '1'  
			 THEN 'NO'  
			 WHEN flgnep10 = '0'  
			 THEN 'SI'  
			 END,
			 GroupLine = ISNULL(codgru10,ltrim(rtrim(@IdLinea)))
			 FROM Neptunia2.descarga.dbo.dqarmado10  
			 WHERE codarm10 = @IdLinea  
		END  
		IF @IdSucursal = 'NEPPAI'  
		BEGIN  
		 SELECT 'NO' AS Result 
		 ,ltrim(rtrim(@IdLinea)) GroupLine
			 --SELECT Result = CASE   
			 --WHEN flgnep10 = '1'  
			 --THEN 'NO'  
			 --WHEN flgnep10 = '0'  
			 --THEN 'SI'  
			 --END  
			 --FROM Neptuniap2.descarga.dbo.dqarmado10  
			 --WHERE codarm10 = @IdLinea  
		END  
		
	END TRY

	BEGIN CATCH
		SELECT 'KO' AS Result
		,ltrim(rtrim(@IdLinea)) GroupLine
	END CATCH

	--------------||    
	SET NOCOUNT OFF;
END
GO
/****** Object:  StoredProcedure [dbo].[usp_NOL_PagarEspacioReserva]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--| EXEC usp_NOL_PagarEspacioReserva 124251,168539
--|
ALTER PROCEDURE [dbo].[usp_NOL_PagarEspacioReserva]
(
	  @IdReserva				INT
	 ,@IdReservaContenedor		INT
)
AS
BEGIN
SET NOCOUNT ON;
--------------||
	DECLARE @viIdReserva			INT;
	DECLARE @viIdReservaContenedor	INT;
	DECLARE @viMensaje				VARCHAR(MAX);
	---|
	DECLARE @viCantFilasAfectadas	INT;
	SET @viCantFilasAfectadas = -1;
	---|
	SET @viIdReserva			= @IdReserva;
	SET @viIdReservaContenedor	= @IdReservaContenedor;
	---|
	BEGIN TRY  
		---|
		UPDATE	 spedreservasContenedor 
		SET		 FechaPagado	= CONVERT(VARCHAR,GETDATE(),112)
				,HoraPagado		= REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
				,snPagado		= 1
		WHERE	 idReserva = @viIdReserva 
		AND		 id = @viIdReservaContenedor;
		---|
		SET @viCantFilasAfectadas = @@ROWCOUNT;
		---|
		---| SELECT @viCantFilasAfectadas AS '@viCantFilasAfectadas';
		---|
		IF (@viCantFilasAfectadas <= 0)
			BEGIN
				SET @viMensaje = 'KO|No se Encontro Espacio Para Realizar el Pago.';
				goto Mensaje;
			END;
		---|
		---|
		SET @viMensaje = 'OK|Espacio Pagado Satisfactoriamente.';
		---|
	END TRY  
	BEGIN CATCH  
		SET @viMensaje = 'KO|Error No se pudo pagar.';
	END CATCH  
	---|
	Mensaje:
	SELECT @viMensaje AS Result;
--------------||
SET NOCOUNT OFF;
END




GO
/****** Object:  StoredProcedure [dbo].[usp_NOL_RegistraRutaArchivosCargados]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_NOL_RegistraRutaArchivosCargados]
(
	 @IdReserva		INT
	,@Usuario		VARCHAR(255)
	,@Fichero		VARCHAR(MAX)
	,@DesFichero	VARCHAR(5000)
)
AS
BEGIN
SET NOCOUNT ON;
--------------||
	DECLARE @viIdReserva	INT;
	DECLARE @viUsuario		VARCHAR(255);
	DECLARE @viIdDirectorio INT;
	DECLARE @viFichero		VARCHAR(400);
	DECLARE @viNomFichero	VARCHAR(100);
	DECLARE	@viDesFichero	VARCHAR(5000);
	DECLARE	@viFecHistorico	VARCHAR(20);
	DECLARE @viBooking		VARCHAR(200);
	---|
	SET @viIdReserva	= @IdReserva;
	SET @viUsuario		= @Usuario;
	SET @viFichero		= @Fichero;
	SET @viNomFichero   = CAST(@DesFichero AS VARCHAR(100));
	SET @viDesFichero   = @DesFichero + ' - Subido por Cliente' ;
	SET @viFecHistorico = CONVERT(VARCHAR,GETDATE(),112);
	SET @viIdDirectorio = 99;
	---|
	SELECT @viBooking = Booking FROM spedreservas WHERE Id = @viIdReserva;
	SELECT @viIdDirectorio = id FROM spedreservasdirectorios WHERE idReserva = @viIdReserva;
	SET @viDesFichero   = @DesFichero + ' / Nro. Booking : ' + @viBooking + ' / Subido por la Web' ;
	---|
	BEGIN TRY  
		IF (@viIdDirectorio = 99)
			BEGIN
				--|
				INSERT INTO spedreservasdirectorios ([idReserva],[Directorio],[idDirectorio],[Usuario],[Timestamp],[Principal])
				VALUES (@viIdReserva,'Raiz',Null,@viUsuario,GETDATE(),1)
				---|
				SET @viIdDirectorio = @@IDENTITY;
			END;
		---|
		INSERT INTO spedreservasficherosadjuntos ([IdPadre],[Fichero],[Nombre],[descripcion],[Tipo],[FechaHistorico],[idDirectorio],[UsuarioCheckOut],[usuario],[Timestamp],[snCliente],[snCorresponsal])
		VALUES (@viIdReserva,@viFichero,@viNomFichero,@viDesFichero,'OT',@viFecHistorico,@viIdDirectorio,NULL,@viUsuario,GETDATE(),1,0)
		---|
		SELECT 'OK' AS Result
	END TRY  
	BEGIN CATCH  
		SELECT 'KO' AS Result
	END CATCH  
--------------||
SET NOCOUNT OFF;
END



GO
/****** Object:  StoredProcedure [dbo].[usp_NOL_StockContenedores]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--exec usp_NOL_StockContenedores 'ONE','40','RH','NEPCLL','J'
ALTER PROCEDURE [dbo].[usp_NOL_StockContenedores] (
	@linea VARCHAR(15)
	,@tamanyo INT
	,@tipctr VARCHAR(6)
	,@sucursal VARCHAR(6)
	,@tecnologia VARCHAR(2) = ''
	)
AS
BEGIN
	SET @linea = LTRIM(RTRIM(@linea))
	SET @tipctr = LTRIM(RTRIM(@tipctr))
	SET @sucursal = LTRIM(RTRIM(@sucursal))
	SET @tecnologia = LTRIM(RTRIM(@tecnologia))
	
	create table #GrupoLinea
	(
	idcliente varchar(15)
	)
	
	insert into #GrupoLinea
	values(ltrim(rtrim(@linea)))
		
	/*
	if ltrim(rtrim(@linea)) = 'ONE'
	begin
		insert into #GrupoLinea
		select 'ONE' as Linea
		union
		select 'NYK' as Linea
		union
		select 'MOL' as Linea
	end
	else
	begin
		insert into #GrupoLinea
		values(ltrim(rtrim(@linea)))
	end
	*/

	DECLARE @NUMSUCURSAL INT
	DECLARE @NUMSUCURSAL1 INT

	IF @sucursal = 'NEPPAI'
	BEGIN
		SET @NUMSUCURSAL = '4'
		SET @NUMSUCURSAL1 = '4'
	END

	IF @sucursal = 'NEPCLL'
	BEGIN
		SET @NUMSUCURSAL = '3'
		SET @NUMSUCURSAL1 = '14'
	END
	
	
	SELECT matricula
		INTO #CONTENEDORES
	FROM spedreservascontenedor WITH (NOLOCK)
		,spedreservas WITH (NOLOCK)
	WHERE spedreservascontenedor.IdReserva = spedreservas.id
		AND @sucursal = spedreservas.idoficina
		AND spedreservas.idalmacen IN (@NUMSUCURSAL,@NUMSUCURSAL1)
		AND @linea = spedreservas.idcliente
		AND isnull(spedreservas.estado, '') = 'PE'
		AND TipOreserva IN (
			'EMB'
			,'EPA'
			,'MOV'
			)
		AND ISNULL(spedreservascontenedor.matricula, '') <> ''
		AND spedreservascontenedor.Estado <> 'CA'
	

	SELECT 
	COUNT(UM.MatriculaContenedor) Cantidad
	FROM spedmovimientocontenedor UM
	LEFT JOIN spbmtipomovimiento t ON UM.idTipoMovimiento = t.tipo
	LEFT JOIN spalubicaciones ubi ON ubi.id = UM.IdUbicacionDestino
	LEFT JOIN spbmcontenedor cont ON cont.matricula = UM.matriculacontenedor
	LEFT JOIN spbmcaracteristicascontenedor cc ON cc.id = cont.idCaracteristica
	WHERE t.Actuacion <> 'CC'
		--|Ultimo Movimiento del contenedor
		AND UM.id IN (
			SELECT max(c2.id)
			FROM spedmovimientocontenedor c2
			WHERE c2.matriculacontenedor = UM.matriculacontenedor
				AND c2.IdOficina = UM.IdOficina
				AND c2.IdAlmacen = UM.IdAlmacen
			)
			
		AND LTRIM(RTRIM(idEntidad))in (select ltrim(rtrim(idcliente)) from #GrupoLinea)
		AND cc.Tamanyo = @tamanyo
		AND cc.Tipo = @tipctr
		AND um.idOficina = @sucursal
		AND um.IdAlmacen IN (
			@NUMSUCURSAL
			,@NUMSUCURSAL1
			)
		AND (
			cont.TecnologiaControlAtmosfera = @tecnologia
			OR @tecnologia = ''
			)
		--|Validacion donde el contendor no este asignado a una reserva con estado PENDIENTE
		AND um.matriculacontenedor NOT IN (
			select matricula FROM #CONTENEDORES
			)
		--|
		--|Validacion que el contenedor no se encuentre Dañado (considerando los estado del Expediente)
		AND cont.Danyado = '0' AND cont.snAveriadoGenerador = '0'
		--|
		--|Validacion de la fecha PTI
		AND ( um.FechaValidezPTI is null
			  OR
			  um.FechaValidezPTI >= CONVERT(VARCHAR(8),DATEADD(DAY,3,GETDATE()),112)
			 )
		--|
		
		drop table #GrupoLinea
END

GO
/****** Object:  StoredProcedure [dbo].[usp_NOL_StockContenedoresVacios_cooperations]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_NOL_StockContenedoresVacios_cooperations]   
@sIntegral varchar(10)  
,@sResultado varchar(250) output  
as  
begin  
set nocount on;  
 declare @RecojoContenedor varchar(1)  
 ,@booking varchar(35)  
 ,@linea varchar(3)  
 ,@tipo varchar(2)  
 ,@tamanyo int  
 ,@tecnologia varchar(1)  
 ,@cantidadContenedores int  
 ,@sucursal varchar(5)  
 ,@cantidadStock int  
   
 set @cantidadContenedores = 0  
 set @sResultado =''  
   
 create table #stock   
 (  
 CantidadStock int  
 )  
   
 if SUBSTRING(@sIntegral,1,1) = 'E'  
 begin  
  select @booking = REPLACE(ltrim(rtrim(ORD_NUMDOCUMENTO)),char(9),'')  
  from [SP3TDA-DBSQL01].terminal.dbo.SSI_ORDEN  
  where ORD_CODIGO = @sIntegral  
    
  select @cantidadContenedores = rb_int_espacios  
  from [SP3TDA-DBSQL01].dbneptunia.contenedor.tbl_reserva_booking  
  where REPLACE(ltrim(rtrim(rb_str_numero_booking)),char(9),'') = @booking  
  and rb_int_identificador_terminal is not null  
       
  if ISNULL(@cantidadContenedores,0) > 0  
  begin  
   --//Obtener tamanyo, tipo, linea, tecnologia  
   select top 1   
   @linea = res.idCliente  
   ,@tipo = rescont.TipoContenedor  
   ,@tamanyo = rescont.TamañoContenedor  
   ,@tecnologia = rescont.TecnologiaControlAtmosfera  
   ,@sucursal = idOficina  
   from spedreservas res   
   inner join spedreservasContenedor rescont on res.id = rescont.idReserva  
   where res.Estado <> 'CA' and isnull(rescont.Matricula,'') <> ''  
   and rescont.Estado<>'CA'  
   and REPLACE(ltrim(rtrim(res.Booking)),char(9),'') = REPLACE(ltrim(rtrim(@booking)),char(9),'')  
   --//  
     
   if ISNULL(@linea,'') <> ''  
   begin  
    insert into #stock(CantidadStock)  
    EXEC usp_NOL_StockContenedores @linea, @tamanyo, @tipo, @sucursal, @tecnologia  
      
    select @cantidadStock = CantidadStock from #stock  
  
    if @cantidadStock < @cantidadContenedores  
    begin  
     set @sResultado = 'Stock insuficiente en Vacios: Cantidad Solicitada ' + CAST(@cantidadContenedores as varchar) +  
     ' , Cantidad disponible ' + CAST(@cantidadStock as varchar)  
    end   
   end   
  end  
 end  
 drop table #stock  
   
set nocount off;  
end
GO
/****** Object:  StoredProcedure [dbo].[Version_726]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[Version_726]
AS


--************************ JM - 30/04/2018 *************************** 
-- Se informa el valor por defecto de la impresión de las clausulas del BL.
--**********************************************************************
update spexmblclausulas set ImprimirEn = 'FD' where ImprimirEn is null
--************************ JM - 04/05/2018 *************************** 
-- Nuevo campo
--**********************************************************************
EXEC ActualizarAvisoTablaMaestra 'ConfiguracionEmails', 10
EXEC ActualizarAvisoTablaMaestra 'ConfiguracionEmailsOficinas', 10
EXEC ActualizarAvisoTablaMaestra 'ConfiguracionEmailsExcel', 10
EXEC ActualizarAvisoTablaMaestra 'ConfiguracionEmailsVistas', 10
EXEC ActualizarAvisoTablaMaestra 'ConfiguracionEmailsFunciones', 10
--************************ JM - 04/05/2018 *************************** 
-- Updatamos el nuevo campo con el valor del antiguo.
--**********************************************************************
update spsiconfiguracionemails set SnEmailUnicoPorCliente = SnEmailUnico
update spsiconfiguracionemails set SnEmailUnico = 0



GO
/****** Object:  StoredProcedure [dbo].[Version_727]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[Version_727]
AS


--************************ JM - 07/05/2018 *************************** 
-- Actualizar descripción de Valor Aplicación ** Transferéncia pasa a ser Transferencia
--**********************************************************************
 update spsidescripcionidiomasvaloresaplicacion 
 set descripcion = 'Transferencia'
 where id = ( select Id from spsidescripcionidiomasvaloresaplicacion where idcva in(
 select Id from spsiclavesvaloresaplicacion where idVA IN ( select Id from spsivaloresaplicacion where tipoVA = 'MODOCOBROPAGO' ) and Clave = 'TR'
 ) and Idioma = 'ES' and (Estado = 'MS' or Estado = 'AS') and  Descripcion = 'Transferéncia')



GO
/****** Object:  StoredProcedure [dbo].[Version_728]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [dbo].[Version_728]
AS


--************************ JM - 14/05/2018 *************************** 
-- Forzamos a todos los clientes que tengan la nueva versión, a configurar el framework del SpSuite.
--**********************************************************************
IF (select Top 1 SUBSTRING(REPLACE(Numero,'3.1.',''),1,1) from spsiversiones order by id desc) >= 7 
BEGIN
	update spsiconfiguracion set valor = 4 where item = 'Framework'
END




GO
/****** Object:  StoredProcedure [dbo].[Version_729]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [dbo].[Version_729]
AS

--************************ AV - 14/05/2018 *************************** 
-- Nueva configuración del logo para el House BL para que en Contenosa se creen BLs de empresas no autorizadas para generar BLs con el logo de otras empresas que sí están autorizadas
--**********************************************************************

if not exists (select * from spsidocapartados where Descripcion = 'Logo House' and idDoc = (select TOP 1 Id from spsidocs where descripcion = 'MBL'))
begin
insert into  spsidocapartados (Descripcion, IdDoc, usuario, timestamp,Editable) 
select TOP 1 'Logo House',Id,'SOLPORT',CAST(CONVERT(VARCHAR(20), GETDATE(), 113) AS DATETIME),1 from spsidocs where descripcion = 'MBL'
end




GO
/****** Object:  StoredProcedure [dbo].[Version_730]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [dbo].[Version_730]
AS


--************************ AV - 22/05/2018 *************************** 
-- Para TRANSPAIS, se inicializa el campo NumeroRevision de la tabla de Presupuestos 
-- a partir de los mensajes de presupuestos enviados por ftp
--**********************************************************************
IF dbo.CodigoInstalacion() = 'TRANSPAIS' 
BEGIN
update spedpresupuestos 
set NumeroRevision = mepr.NumMensajesEnviados + 1
from (SELECT IdReferencia, TipoReferencia, case when TipoReferencia = 'WST' then count(*)/2 else count(*) end as NumMensajesEnviados
FROM spmemensajeria me, spmehistoricomensajeria hm
where TipoMensaje = 'PRE' and TipoReferencia in ('WTE','WST','FWG')
and me.id = hm.idFichero
and hm.Estado in ('APE','AEN','AAC','MPE','MEN','MAC')
group by IdReferencia, TipoReferencia) mepr
where spedpresupuestos.id = mepr.idReferencia
END
--************************ JM - 24/05/2018 *************************** 
-- Nuevo Párametro a nivel de Factura
--**********************************************************************
IF NOT EXISTS (select * from spsidocapartados where Descripcion = 'Mostrar Sello Factura Asegurada' and idDoc = (select TOP 1 Id from spsidocs where descripcion = 'Factura'))
BEGIN
	INSERT INTO spsidocapartados (Descripcion, IdDoc, usuario, timestamp,Editable) 
	SELECT TOP 1 'Mostrar Sello Factura Asegurada',Id,'SOLPORT',CAST(CONVERT(VARCHAR(20), GETDATE(), 113) AS DATETIME),1 from spsidocs where descripcion = 'Factura'
END
--************************ AV - 23/05/2018 *************************** 
-- Nueva configuración para incorporar la firma y sello en el AWBL
--**********************************************************************

if not exists (select * from spsidocapartados where Descripcion = 'Firma y sello' and idDoc = (select TOP 1 Id from spsidocs where descripcion = 'AWBL'))
begin
insert into  spsidocapartados (Descripcion, IdDoc, usuario, timestamp,Editable) 
select TOP 1 'Firma y sello',Id,'SOLPORT',CAST(CONVERT(VARCHAR(20), GETDATE(), 113) AS DATETIME),1 from spsidocs where descripcion = 'AWBL'
end




GO
/****** Object:  StoredProcedure [dbo].[Version_731]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[Version_731]
AS

--************************ AV - 23/05/2018 *************************** 
-- Nuevo apartado para documento de Aviso Llegada/Documento Despacho
--**********************************************************************
if not exists (select * from spsidocapartados where Descripcion = 'Totales Peso Neto' and idDoc = (select TOP 1 Id from spsidocs where descripcion = 'Aviso Llegada/Documento Despacho'))
begin
insert into  spsidocapartados (Descripcion, IdDoc, usuario, timestamp,Editable) 
select TOP 1 'Totales Peso Neto',Id,'SOLPORT',CAST(CONVERT(VARCHAR(20), GETDATE(), 113) AS DATETIME),0 from spsidocs where descripcion = 'Aviso Llegada/Documento Despacho'
end
--************************ JM - 30/05/2018 *************************** 
-- Nuevos campos a nivel de usuario relacionados con el riesgo.
--**********************************************************************
EXEC ActualizarAvisoTablaMaestra 'Usuarios', 10
EXEC ActualizarAvisoTablaMaestra 'UsuariosOficinas', 10



GO
/****** Object:  StoredProcedure [dbo].[Version_732]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[Version_732]
AS

--************************ JM - 31/05/2018 *************************** 
-- Inicializar nuevo campo de riesgo en el expediente de tránsito.
--**********************************************************************
update spexexpediente set ImporteRiesgoAutorizado = 0 where ImporteRiesgoAutorizado is null


GO
/****** Object:  StoredProcedure [dbo].[Version_734]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[Version_734]
AS

--************************ JM - 19/06/2018 *************************** 
-- Parametros por defecto en contenosa debe estar activado
--**********************************************************************
IF dbo.CodigoInstalacion() = 'CONTENOSA' 
BEGIN
	update spsiconfiguracion set valor = 1 where item = 'InformarUnidadNegocioCliente'
END

GO
/****** Object:  StoredProcedure [dbo].[Version_737]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [dbo].[Version_737]
AS

--************************ JM - 05/07/2018 *************************** 
-- Nuevo campo obligatorio opcional en el expediente de tránsito.
--**********************************************************************
IF dbo.CodigoInstalacion() = 'AWAYINT' 
BEGIN
	update spsiconfiguracion set valor = Valor + '|VIA' where item ='CamposObligatorioExpedienteTransito'
END
--************************ JM - 17/07/2018 *************************** 
-- Nuevo campo en la tabla impuestos.
--**********************************************************************
EXEC ActualizarAvisoTablaMaestra 'Impuestos', 10
--************************ JM - 18/07/2018 *************************** 
-- Nueva configuración para que al generar la orden de transporte, no informe la descripción con los contenedores.
-- Por defecto activo.
--**********************************************************************
if not exists (select * from spsidocapartados where Descripcion = 'Mostrar Contenedores en Descripción' and idDoc = (select TOP 1 Id from spsidocs where descripcion = 'Orden Transporte'))
begin
	insert into  spsidocapartados (Descripcion, IdDoc, usuario, timestamp,Editable) 
	select TOP 1 'Mostrar Contenedores en Descripción',Id,'SOLPORT',CAST(CONVERT(VARCHAR(20), GETDATE(), 113) AS DATETIME),0 from spsidocs where descripcion = 'Orden Transporte'
end
IF dbo.CodigoInstalacion() <> 'FFREIGHT' 
BEGIN
	INSERT INTO spsidocapartadosconf (IdOficina,idApartado,Actua,Comentarios,Usuario,TimeStamp)
	select Id as IdOficina,(select Id from spsidocapartados where Descripcion = 'Mostrar Contenedores en Descripción' and idDoc = (select TOP 1 Id from spsidocs where descripcion = 'Orden Transporte')) as IdApartado,1 as Actua, Null as Comentarios, 'SOLPORT',CAST(CONVERT(VARCHAR(20), GETDATE(), 113) AS DATETIME) from spsioficina
	where id not in (select distinct idOficina from spsidocapartadosconf where idApartado In (select Id from spsidocapartados where Descripcion = 'Mostrar Contenedores en Descripción'))
END

GO
/****** Object:  StoredProcedure [dbo].[Version_739]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [dbo].[Version_739]
AS

--************************ JM - 27/07/2018 *************************** 
-- Nuevo campo oficina en las previsiones.
--**********************************************************************
update sptrprevisiones set idOficina = (select Top 1 Id from spsioficina) where idOficina is null


GO
/****** Object:  StoredProcedure [dbo].[Version_740]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





ALTER PROCEDURE [dbo].[Version_740]
AS

IF dbo.CodigoInstalacion() = 'CONTENOSA' 
BEGIN
	update spsiconfiguracion set valor = 'CLIENTE|TRAFICO|VIAJE|OFICINA|LINEATRAFICO' where item = 'CamposObligatoriosBooking'
END

IF dbo.CodigoInstalacion() = 'CONTENOSA' 
BEGIN
	update spsiconfiguracion set valor = '0|LINEATRAFICO' where item = 'CamposObligatorioExpedienteTransito'
END

IF dbo.CodigoInstalacion() = 'CONTENOSA' 
BEGIN
	update spsiconfiguracion set valor = '40' where item = 'MaxLongMercanciaDescripcionBL'
END

IF dbo.CodigoInstalacion() = 'CONTENOSA' 
BEGIN
	update spsiconfiguracion set valor = '1' where item = 'MostrarDatosFacturacionEnConocimientosExpediente'
END




GO
/****** Object:  DdlTrigger [trg_TMM_AlterTable_TablaMaestra]    Script Date: 14/03/2019 04:32:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER TRIGGER [trg_TMM_AlterTable_TablaMaestra] 
ON DATABASE 
FOR ALTER_TABLE 
AS 

	-- OBTIENE EL NOMBRE DE LA TABLA MODIFICADA
	Declare @TablaModificada varchar(100)
	SET @TablaModificada = EVENTDATA().value('(/EVENT_INSTANCE/ObjectName)[1]','nvarchar(max)')

	-- OBTIENE EL NOMBRE DEL MENSAJE A ACTUALIZAR
	Declare @Mensaje varchar(30)
	SET @Mensaje = (SELECT Mensaje FROM SPSITablasMaestras WHERE NombreTabla = @TablaModificada)

	-- SI SE HA ALTERADO UN TABLA MAESTRA LLAMA AL PROCESO CORRESPONDIENTE
	If NOT (@Mensaje is null)
		BEGIN
			-- Llamada a ActualizarAvisoTablaMaestra
			
			Declare @TipoInterno as int
			Set @TipoInterno = 10
			EXEC ActualizarAvisoTablaMaestra @Mensaje, @TipoInterno
		END


GO
ENABLE TRIGGER [trg_TMM_AlterTable_TablaMaestra] ON DATABASE
GO
